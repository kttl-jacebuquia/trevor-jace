{"version":3,"file":"main.ee13de75859ee018e9ba.css","mappings":"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","sources":["webpack://trevor-survey/./node_modules/flickity/dist/flickity.min.css","webpack://trevor-survey/./src/assets/styles/_fonts.scss","webpack://trevor-survey/./node_modules/frontline-css-reset/frontline-css-reset.scss","webpack://trevor-survey/./src/assets/styles/mixins/_animation-mixins.scss","webpack://trevor-survey/./src/assets/styles/helpers/_background-helpers.scss","webpack://trevor-survey/./node_modules/frontline-sass/dist/_frontline.scss","webpack://trevor-survey/./src/assets/styles/mixins/_button-mixins.scss","webpack://trevor-survey/./src/assets/styles/mixins/_selector-mixins.scss","webpack://trevor-survey/./src/assets/styles/helpers/_font-helpers.scss","webpack://trevor-survey/./src/assets/styles/mixins/_rich-text-headings.scss","webpack://trevor-survey/./src/assets/styles/vars/_font-vars.scss","webpack://trevor-survey/./src/assets/styles/helpers/_javascript-helpers.scss","webpack://trevor-survey/./src/assets/styles/helpers/_layout-helpers.scss","webpack://trevor-survey/./src/assets/styles/mixins/_padding-mixins.scss","webpack://trevor-survey/./src/assets/styles/mixins/_layout-mixins.scss","webpack://trevor-survey/./src/assets/styles/helpers/_margin-helpers.scss","webpack://trevor-survey/./src/assets/styles/helpers/_theme-helpers.scss","webpack://trevor-survey/./src/assets/styles/helpers/_universal-helpers.scss","webpack://trevor-survey/./src/assets/styles/mixins/_richtext-mixin.scss","webpack://trevor-survey/./src/assets/styles/vars/_color-vars.scss","webpack://trevor-survey/./src/assets/styles/mixins/_link-mixins.scss","webpack://trevor-survey/./src/assets/styles/_base.scss","webpack://trevor-survey/./src/assets/styles/components/_bar-chart.scss","webpack://trevor-survey/./src/assets/styles/components/_butterfly-chart.scss","webpack://trevor-survey/./src/assets/styles/components/_card.scss","webpack://trevor-survey/./src/assets/styles/components/_card-grid.scss","webpack://trevor-survey/./src/assets/styles/components/_chapter-banner.scss","webpack://trevor-survey/./src/assets/styles/components/_chapter-nav.scss","webpack://trevor-survey/./src/assets/styles/components/_copy-link.scss","webpack://trevor-survey/./src/assets/styles/components/_doughnut-chart.scss","webpack://trevor-survey/./src/assets/styles/components/_doughnut-chart-grid.scss","webpack://trevor-survey/./src/assets/styles/components/_download.scss","webpack://trevor-survey/./src/assets/styles/components/_footer.scss","webpack://trevor-survey/./src/assets/styles/components/_header.scss","webpack://trevor-survey/./src/assets/styles/components/_hero.scss","webpack://trevor-survey/./src/assets/styles/mixins/_expandable-mixins.scss","webpack://trevor-survey/./src/assets/styles/components/_intro.scss","webpack://trevor-survey/./src/assets/styles/components/_joy.scss","webpack://trevor-survey/./src/assets/styles/components/_key-findings.scss","webpack://trevor-survey/./src/assets/styles/components/_legend.scss","webpack://trevor-survey/./src/assets/styles/components/_line-chart.scss","webpack://trevor-survey/./src/assets/styles/components/_methodology.scss","webpack://trevor-survey/./src/assets/styles/components/_nav.scss","webpack://trevor-survey/./src/assets/styles/components/_quote.scss","webpack://trevor-survey/./src/assets/styles/components/_skip-links.scss","webpack://trevor-survey/./src/assets/styles/components/_stats-card.scss","webpack://trevor-survey/./src/assets/styles/components/_sticky-wrap.scss","webpack://trevor-survey/./src/assets/styles/components/_tabs.scss","webpack://trevor-survey/./src/assets/styles/_print.scss"],"sourcesContent":["/*! Flickity v3.0.0\nhttps://flickity.metafizzy.co\n---------------------------------------------- */\n.flickity-enabled{position:relative}.flickity-enabled:focus{outline:0}.flickity-viewport{overflow:hidden;position:relative;height:100%;touch-action:pan-y}.flickity-slider{position:absolute;width:100%;height:100%;left:0}.flickity-rtl .flickity-slider{left:unset;right:0}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:grabbing}.flickity-cell{position:absolute;left:0}.flickity-rtl .flickity-cell{left:unset;right:0}.flickity-button{position:absolute;background:hsl(0 0% 100% / 75%);border:none;color:#333}.flickity-button:hover{background:#fff;cursor:pointer}.flickity-button:focus{outline:0;box-shadow:0 0 0 5px #19f}.flickity-button:active{opacity:.6}.flickity-button:disabled{opacity:.3;cursor:auto;pointer-events:none}.flickity-button-icon{fill:currentColor}.flickity-prev-next-button{top:50%;width:44px;height:44px;border-radius:50%;transform:translateY(-50%)}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button .flickity-button-icon{position:absolute;left:20%;top:20%;width:60%;height:60%}.flickity-page-dots{position:absolute;width:100%;bottom:-25px;text-align:center;display:flex;justify-content:center;flex-wrap:wrap}.flickity-rtl .flickity-page-dots{direction:rtl}.flickity-page-dot{display:block;width:10px;height:10px;padding:0;margin:0 8px;background:hsl(0 0% 20% / 25%);border-radius:50%;cursor:pointer;appearance:none;border:none;text-indent:-9999px;overflow:hidden}.flickity-rtl .flickity-page-dot{text-indent:9999px}.flickity-page-dot:focus{outline:0;box-shadow:0 0 0 5px #19f}.flickity-page-dot.is-selected{background:hsl(0 0% 20% / 100%)}","//------------------------------------------------------------------------\n// Web fonts\n// Note: Only woff and woff2 are required for modern browsers\n// https://css-tricks.com/snippets/css/using-font-face/#article-header-id-1\n//\n// In the future, we could consider not loading fonts if “data-saver” mode is enabled\n// https://css-tricks.com/responsible-conditional-loading/\n// https://caniuse.com/mdn-css_at-rules_media_prefers-reduced-data\n//------------------------------------------------------------------------\n\n// We’re using “font-display: fallback” as a compromise between\n// performance and minimizing the chances of a FOIT or FOUC.\n//\n//   “The browser will hide the text for about 100ms and, if the font\n//   has not yet been downloaded, will use the fallback text. It will\n//   swap to the new font after it is downloaded, but only during a\n//   short swap period (probably 3 seconds).”\n//   https://css-tricks.com/almanac/properties/f/font-display/\n//\n$font-display: fallback;\n\n// Custom emoji font to standardize appearance across platforms\n// https://www.client9.com/css-color-emoji-stack/\n@font-face {\n  font-family: \"color-emoji\";\n  src: local(\"Apple Color Emoji\"),\n       local(\"Segoe UI Emoji\"),\n       local(\"Segoe UI Symbol\"),\n       local(\"Noto Color Emoji\");\n}\n\n// Manrope\n// https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Manrope:wght@400;600;700;800&display=swap\n// https://google-webfonts-helper.herokuapp.com/fonts/manrope?subsets=latin\n//---------------------------------\n@font-face {\n  font-display: $font-display;\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 400;\n  src: url(\"../fonts/manrope/manrope-400.woff2\") format(\"woff2\"),\n       url(\"../fonts/manrope/manrope-400.woff\") format(\"woff\");\n}\n\n@font-face {\n  font-display: $font-display;\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 600;\n  src: url(\"../fonts/manrope/manrope-600.woff2\") format(\"woff2\"),\n       url(\"../fonts/manrope/manrope-600.woff\") format(\"woff\");\n}\n\n@font-face {\n  font-display: $font-display;\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 700;\n  src: url(\"../fonts/manrope/manrope-700.woff2\") format(\"woff2\"),\n       url(\"../fonts/manrope/manrope-700.woff\") format(\"woff\");\n}\n\n@font-face {\n  font-display: $font-display;\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 800;\n  src: url(\"../fonts/manrope/manrope-800.woff2\") format(\"woff2\"),\n       url(\"../fonts/manrope/manrope-800.woff\") format(\"woff\");\n}\n\n// Caveat\n// https://fonts.google.com/specimen/Caveat\n//---------------------------------\n@font-face {\n  font-display: $font-display;\n  font-family: \"Caveat\";\n  font-style: normal;\n  font-weight: 400;\n  src: url(\"../fonts/caveat/caveat-v14-latin-regular.woff2\") format(\"woff2\"),\n       url(\"../fonts/caveat/caveat-v14-latin-regular.woff\") format(\"woff\");\n}\n","//------------------------------------------------------------------------\n// Frontline CSS Reset\n//\n// @link http://meyerweb.com/eric/tools/css/reset/\n// @link https://github.com/necolas/normalize.css\n// @link https://github.com/10up/sanitize.css\n// @link http://yuilibrary.com/yui/docs/cssreset/\n// @link http://meiert.com/en/blog/20070922/user-agent-style-sheets/\n// @link http://css-class.com/test/css/defaults/UA-style-sheet-defaults.htm\n// @link https://www.joshwcomeau.com/css/custom-css-reset/\n// @link https://piccalil.li/blog/a-modern-css-reset/\n//\n// User agent stylesheets\n// @link https://trac.webkit.org/browser/trunk/Source/WebCore/css/html.css\n// @link https://dxr.mozilla.org/mozilla-central/source/layout/style/res/html.css\n// @link https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css\n//------------------------------------------------------------------------\n@charset \"UTF-8\";\n\n//------------------------------------------------------------------------\n// Universal styles\n//------------------------------------------------------------------------\n* {\n  font-size: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n  vertical-align: baseline;\n}\n\n// Set \"box-sizing: border-box\" globally\n// http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n// 1. Set \"box-sizing: border-box\" globally\n//    http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n//\n// 2. Prevent adjustments of font size after orientation changes in iOS\nhtml {\n  box-sizing: border-box;// [1]\n  -ms-overflow-style: -ms-autohiding-scrollbar;// Edge 12+, Internet Explorer 11-\n  overflow-y: scroll;// All browsers without overlaying scrollbars\n  -webkit-text-size-adjust: 100%;// [2]\n}\n\n//------------------------------------------------------------------------\n// HTML5 elements\n//------------------------------------------------------------------------\n// Add the correct display in IE 9\narticle,\naside,\ndetails, // Edge, IE, and Firefox\nfigcaption,\nfigure,\nfooter,\nheader,\nmain, // IE\nmenu,\nnav,\nsection,\nsummary { // Edge, IE, and Firefox\n  display: block;\n}\n\nsummary {\n  display: list-item;\n}\n\n// Add the correct display in IE 9-\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n}\n\n// Add the correct display in iOS 4-7\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n// Add the correct vertical alignment in Chrome, Firefox, and Opera\nprogress {\n  vertical-align: baseline;\n}\n\ntemplate, // IE 10-\n[hidden] {\n  display: none;\n}\n\n[aria-busy=\"true\"] {\n  cursor: progress;\n}\n\n//------------------------------------------------------------------------\n// Element styles\n//------------------------------------------------------------------------\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: normal;\n}\n\n// Disable double-tap-to-zoom on certain elements to remove the 300ms delay in IE\n// https://github.com/ftlabs/fastclick#when-it-isnt-needed\n// https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\na,\narea,\nbutton,\ninput,\nlabel,\nselect,\nsummary,\ntextarea,\n[tabindex] {\n  -ms-touch-action: manipulation;// IE 10\n  touch-action: manipulation;// IE 11+\n}\n\n// Fluid media\nimg,\npicture,\nvideo,\ncanvas {\n  display: block;\n  height: auto;\n  max-width: 100%;\n}\n\n// Only remove bullets when role=\"list\" is applied in order\n// to prevent VO in Safari from removing the list semantics.\n// https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n// https://piccalil.li/blog/a-modern-css-reset/\nul[role=\"list\"],\nol[role=\"list\"] {\n  list-style: none;\n}\n\n// Remove most spacing between table cells.\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n// 1. Ensure 3rd-party iframe embeds do not overlap sticky headers, nav dropdowns, modals, or other similar elements\niframe,\nobject,\nembed {\n  display: block;\n  max-width: 100%;\n  position: relative;\n  z-index: 1;// [1]\n}\n\n// Add the correct font weight in Chrome, Edge, and Safari\nb,\nstrong {\n  font-weight: bolder;\n}\n\n// Add the correct font size in all browsers\nsmall {\n  font-size: 80%;\n}\n\n// Prevent <sub> and <sup> from affecting the line height in all browsers\nsub,\nsup {\n  line-height: 0;\n  position: relative;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n// Contain overflow in IE 11-\npre {\n  overflow: auto;\n}\n\n// 1. Correct inheritance and scaling of font-size for preformatted text.\n// 2. Address odd `em`-unit font size rendering in all browsers.\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace;// [1]\n  font-size: 1em;// [2]\n}\n\n// Remove cite blockquote border\nblockquote[type=\"cite\"] {\n  border: 0;\n}\n\n// Don’t italicize these elements by default\naddress,\ncite,\ndfn,\nvar {\n  font-style: normal;\n}\n\n// 1. Remove the bottom border in Chrome 57-\n// 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\nabbr[title] {\n  border-bottom: 0;// [1]\n  text-decoration: underline;// [2]\n  text-decoration: underline dotted;// [2]\n}\n\n// Remove underline so as not to be confused with a link\nins {\n  text-decoration: none;\n}\n\n// 1. Add the correct box sizing in Firefox.\n// 2. Show the overflow in Edge and IE.\n//\n// Usage notes:\n// http://html5doctor.com/small-hr-element/#element-hr\nhr {\n  box-sizing: content-box;// [1]\n  height: 0;// [1]\n  overflow: visible;// [2]\n}\n\n//------------------------------------------------------------------------\n// Links\n//------------------------------------------------------------------------\n// Remove the gray background color from active links in IE 10\na {\n  background-color: transparent;\n\n  // Prevent long mailto links from breaking layouts\n  // https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/\n  &[href^=\"mailto\"] {\n    word-break: break-all;\n    word-break: break-word;// Non-standard value for WebKit\n  }\n\n  // Override iOS phone number link styling\n  &[href^=\"tel\"] {\n    color: inherit;\n    text-decoration: none;\n  }\n}\n\n// Ensure SVGs don’t steal click event\n// https://css-tricks.com/links-inline-svg-staying-target-events/\na,\nbutton {\n  & > svg {\n    pointer-events: none;\n  }\n}\n\n//------------------------------------------------------------------------\n// Form styles\n//------------------------------------------------------------------------\n\n// Change font properties to “inherit” in all browsers\nbutton,\ninput,\nselect,\ntextarea {\n  font: inherit;\n}\n\n// Restore the font weight unset by the previous rule\noptgroup {\n  font-weight: bold;\n}\n\n// Remove the inheritance of text transform\nbutton, // Edge, Firefox, and IE\nselect { // Firefox\n  text-transform: none;\n}\n\n// Show the overflow\nbutton, // IE\ninput, // Edge\nselect { // Edge, Firefox, and IE\n  overflow: visible;\n}\n\n// Normalize select value color in Edge 12+, Internet Explorer 11-\nselect::-ms-value {\n  color: currentColor;\n}\n\n// Don\"t inherit “font-weight”\n// NOTE: The default can’t be changed in Chrome and Safari on OS X\noptgroup {\n  font-weight: bold;\n}\n\nfieldset {\n  border: 0;\n}\n\n// 1. Correct the text wrapping in Edge and IE\n// 2. Correct the color inheritance from <fieldset> elements in IE\nlegend {\n  border: 0;\n  box-sizing: border-box;// [1]\n  color: inherit;// [2]\n  display: table;// [1]\n  max-width: 100%;// [1]\n  padding: 0;\n  white-space: normal;// [1]\n}\n\n// 1. Remove the default vertical scrollbar in IE 10+\ntextarea {\n  border-radius: 0;// iOS\n  display: block;\n  overflow: auto;// [1]\n  width: 100%;\n}\n\n// Correct the inability to style clickable types in iOS and Safari.\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n// Change the cursor for better usability\nbutton,\nlabel,\nselect,\n[type=\"button\"],\n[type=\"checkbox\"],\n[type=\"radio\"],\n[type=\"reset\"],\n[type=\"submit\"],\n[aria-controls] {\n  cursor: pointer;\n}\n\n[readonly] {\n  cursor: text;\n}\n\n[aria-busy=\"true\"] {\n  cursor: progress;\n}\n\n[aria-disabled=\"true\"],\n[disabled] {\n  cursor: not-allowed;\n}\n\n// Remove the inner border and padding in Firefox 4+.\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n// Restore the focus styles unset by the previous rule.\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n// Remove WebKit styling from text inputs\n// https://css-tricks.com/almanac/properties/a/appearance/\n[type=\"email\"],\n[type=\"number\"],\n[type=\"password\"],\n[type=\"search\"],\n[type=\"tel\"],\n[type=\"text\"],\n[type=\"url\"] {\n  border-radius: 0;// iOS\n  -webkit-appearance: none;\n}\n\n// 1. Add the correct box sizing in IE 10-\n// 2. Remove the padding in IE 10-\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box;// [1]\n  padding: 0;// [2]\n}\n\n// Correct the cursor style of increment and decrement buttons in Chrome.\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type=\"search\"] {\n  border-radius: 0;// WebKit, iOS\n\n  // Remove the inner padding in Chrome and Safari on macOS.\n  // Additional resets from http://priyanksharma.com/code-snippets/resetting-html5-search-input-in-webkit/\n  &::-webkit-search-decoration,\n  &::-webkit-search-results-button,\n  &::-webkit-search-results-decoration {\n    -webkit-appearance: none;\n  }\n}// end search\n\n// 1. Correct the inability to style clickable types in iOS and Safari.\n// 2. Change font properties to `inherit` in Safari.\n::-webkit-file-upload-button {\n  -webkit-appearance: button;// [1]\n  font: inherit;// [2]\n}\n\n// Normalize placeholder text color in Firefox\n// https://css-tricks.com/almanac/selectors/p/placeholder/#firefox-placeholder-color\n::-moz-placeholder {\n  opacity: 1;\n}\n","// Animation helper mixin with sensible defaults\n@mixin animation(\n  $name,\n  $duration: 1s,\n  $timing-fn: ease,\n  $delay: 0s,\n  $count: 1,\n  $direction: normal,\n  $fill: both\n) {\n  // animation-delay: $delay;\n  // animation-direction: $direction;\n  // animation-duration: $duration;\n  // animation-fill-mode: $fill;\n  // animation-iteration-count: $count;\n  // animation-name: $name;\n  // animation-timing-function: $timing-fn;\n  animation: $name $duration $timing-fn $delay $count $direction $fill;\n}\n\n// Animate SVG arrow stroke\n//------------------------------------------------------------------------\n@keyframes drawArrow {\n  0% {\n    opacity: 1;// unhide to prevent tiny dot from showing\n    stroke-dashoffset: 0;\n    stroke-linecap: round;\n  }\n  100% {\n    stroke-dashoffset: 1;\n  }\n}\n\n@mixin drawArrow(\n  $duration: 800ms,\n  $timing-fn: ease-out,\n  $delay: 600ms,\n  $count: 1,\n  $direction: reverse,\n  $fill: both\n) {\n  @include animation(drawArrow, $duration, $timing-fn, $delay, $count, $direction, $fill);\n}\n\n// Fade in arrow head after line is shown\n@keyframes fadeInArrowHead {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@mixin fadeInArrowHead(\n  $duration: 150ms,\n  $timing-fn: ease,\n  $delay: 1.4s,// must equal drawArrow() delay + duration\n  $count: 1,\n  $direction: normal,\n  $fill: both\n) {\n  @include animation(fadeInArrowHead, $duration, $timing-fn, $delay, $count, $direction, $fill);\n}\n","//------------------------------------------------------------------------\n// Background color classes\n//\n// sass-lint:disable no-important\n// scss-lint:disable ImportantRule\n//------------------------------------------------------------------------\n.bg {\n  &-default { background-color: $bg-default; }\n\n  // Theme colors\n  //---------------------------------\n  @each $name, $color in $theme-colors {\n    &-#{$name} {\n      --theme-color: #{$color};\n      // Use dark text on light backgrounds (except orange which uses white text)\n      @if index(('gold', 'yellow'), $name) {\n        --theme-text-color: #{$c-navy};\n      }\n      @else {\n        --theme-text-color: #fff;\n        @include fs-font-smoothing;\n      }\n      background-color: var(--theme-color);\n      color: var(--theme-text-color);\n    }\n  }\n\n} // end bg\n","@charset 'UTF-8';\n\n//      _______  ____  _  __________   _____  ______\n//     / __/ _ \\/ __ \\/ |/ /_  __/ /  /  _/ |/ / __/\n//    / _// , _/ /_/ /    / / / / /___/ //    / _/\n//   /_/ /_/|_|\\____/_/|_/ /_/ /____/___/_/|_/___/   v3.11.0\n//\n//   This project is licensed under the terms of the MIT license\n\n\n//------------------------------------------------------------------------//\n// Global vars\n//------------------------------------------------------------------------//\n\n// Variables\n//---------------------------------\n/// Base font size\n/// @group Main\n/// @type Number\n$fs-base-font-size: 16px !default;\n\n/// Named breakpoints map\n/// @group Main\n/// @type Map\n$fs-breakpoints: (\n  'global': (\n    'narrow' : 320px,\n    'small'  : 480px,\n    'medium' : 640px,\n    'wide'   : 960px,\n    'full'   : 1200px\n  )\n) !default;\n\n/// Colors map\n/// @group Main\n/// @type Map\n/// @link http://clrs.cc\n$fs-colors: (\n  'base': (\n    'red': #ff4136,\n    'orange': #ff851b,\n    'yellow': #ffdc00,\n    'green': #2ecc40,\n    'blue': #0074d9,\n    'purple': #b10dc9,\n    'white': #fff,\n    'gray': #ccc,\n    'black': #000,\n  )\n) !default;\n\n/// Custom easings map\n/// @group Main\n/// @type Map\n/// @link https://github.com/jhardy/compass-ceaser-easing\n/// @link http://easings.net\n$fs-easings: (\n  'linear'         : '0.250, 0.250, 0.750, 0.750',\n  'ease'           : '0.250, 0.100, 0.250, 1.000',\n  'ease-in'        : '0.420, 0.000, 1.000, 1.000',\n  'ease-out'       : '0.000, 0.000, 0.580, 1.000',\n  'ease-in-out'    : '0.420, 0.000, 0.580, 1.000',\n  'easeInQuad'     : '0.550, 0.085, 0.680, 0.530',\n  'easeInCubic'    : '0.550, 0.055, 0.675, 0.190',\n  'easeInQuart'    : '0.895, 0.030, 0.685, 0.220',\n  'easeInQuint'    : '0.755, 0.050, 0.855, 0.060',\n  'easeInSine'     : '0.470, 0.000, 0.745, 0.715',\n  'easeInExpo'     : '0.950, 0.050, 0.795, 0.035',\n  'easeInCirc'     : '0.600, 0.040, 0.980, 0.335',\n  'easeInBack'     : '0.600, -0.280, 0.735, 0.045',\n  'easeOutQuad'    : '0.250, 0.460, 0.450, 0.940',\n  'easeOutCubic'   : '0.215, 0.610, 0.355, 1.000',\n  'easeOutQuart'   : '0.165, 0.840, 0.440, 1.000',\n  'easeOutQuint'   : '0.230, 1.000, 0.320, 1.000',\n  'easeOutSine'    : '0.390, 0.575, 0.565, 1.000',\n  'easeOutExpo'    : '0.190, 1.000, 0.220, 1.000',\n  'easeOutCirc'    : '0.075, 0.820, 0.165, 1.000',\n  'easeOutBack'    : '0.175, 0.885, 0.320, 1.275',\n  'easeInOutQuad'  : '0.455, 0.030, 0.515, 0.955',\n  'easeInOutCubic' : '0.645, 0.045, 0.355, 1.000',\n  'easeInOutQuart' : '0.770, 0.000, 0.175, 1.000',\n  'easeInOutQuint' : '0.860, 0.000, 0.070, 1.000',\n  'easeInOutSine'  : '0.445, 0.050, 0.550, 0.950',\n  'easeInOutExpo'  : '1.000, 0.000, 0.000, 1.000',\n  'easeInOutCirc'  : '0.785, 0.135, 0.150, 0.860',\n  'easeInOutBack'  : '0.680, -0.550, 0.265, 1.55'\n);\n\n/// Characters to escape from SVGs\n/// @group Main\n/// @type Map\n/// @ignore Symbol reference http://www.w3schools.com/tags/ref_urlencode.asp\n/// @ignore Note: gulp-minify-css (which uses clean-css) isn’t applying config options correctly causing data URLs to not be wrapped in quote, so we have to convert double quotes (\") to percent encoded symbols.\n$fs-escape-chars: (\n  '\"': '\\'',\n  '%': '%25',\n  '#': '%23',\n  '<': '%3C',\n  '>': '%3E',\n);\n// Only add additional characters if necessary\n// (e.g. if SVG contains inline styles or CSS)\n//-------------------------------------------\n// '(': '%28',\n// ')': '%29',\n// '/': '%2F',\n// ':': '%3A',\n// ';': '%3B',\n// '=': '%3D',\n// '?': '%3F',\n// '@': '%40',\n// '\\\\': '%5C',\n// '^': '%5E',\n// '`': '%60',\n// '{': '%7B',\n// '|': '%7C',\n// '}': '%7D',\n// These shouldn’t be necessary, just here for reference\n// ' ': '%20',\n// '\\'': '%22',\n// '\"': '%27',\n\n/// **⚠️ DEPRECATED:** use `$fs-svgs` instead.\n/// SVG icon map for deprecated `fs-svg()` mixin\n/// @group Main\n/// @type Map\n$fs-svg-icons: (\n  close: (\n    height: 28,\n    width: 22,\n    data: '<path d=\"M20.28 20.66q0 .62-.44 1.06l-2.12 2.12q-.44.44-1.06.44t-1.07-.44l-4.6-4.6-4.6 4.6q-.43.44-1.06.44t-1.06-.44l-2.12-2.12q-.44-.44-.44-1.06t.44-1.07l4.6-4.6-4.6-4.6q-.44-.43-.44-1.06t.44-1.06l2.12-2.12q.44-.44 1.06-.44t1.07.44l4.6 4.6 4.6-4.6q.43-.44 1.06-.44t1.06.44l2.12 2.12q.44.44.44 1.06t-.44 1.07l-4.6 4.6 4.6 4.6q.44.43.44 1.06z\"/>'\n  ),\n  search: (\n    height: 28,\n    width: 26,\n    data: '<path d=\"M18 13q0-2.9-2.06-4.95T11 6 6.05 8.06 4 13t2.05 4.95T11 20t4.95-2.06T18 13zm8 13q0 .8-.6 1.4T24 28q-.84 0-1.4-.6l-5.37-5.34Q14.43 24 11 24q-2.23 0-4.27-.87T3.2 20.8.88 17.26 0 13t.87-4.27T3.2 5.2t3.53-2.33T11 2t4.27.87T18.8 5.2t2.33 3.53T22 13q0 3.44-1.94 6.23l5.36 5.36q.58.57.58 1.4z\"/>'\n  )\n) !default;\n\n/// SVG icons\n/// @group Main\n/// @type Map\n$fs-svgs: (\n  'chevDown': '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 10\" preserveAspectRatio=\"xMidYMid meet\"><path d=\"M12 0l2 2-7 7.1-7-7L2-.1l5 5z\"/></svg>'\n);\n\n/// Z-index layer map\n/// @group Main\n/// @type Map\n$fs-zindex: (\n  'main': 100,\n  'tooltip': 200,\n  'nav': 300,\n  'modal': 9999,\n) !default;\n\n\n// Functions\n//---------------------------------\n/// Check whether `$list` contains `$value`.\n/// @group Sass Utils\n/// @param {List} $list - List of values.\n/// @param {*} $value - Value to check in the list.\n/// @return {Boolean}\n/// @link http://www.sitepoint.com/bulletproof-function-validate-length-values-sass/\n@function fs-contains($list, $value) {\n  @return not not index($list, $value);\n}\n\n/// Convert unit to px, em, rem, or %\n/// @access private\n/// @param {Number} $units- Units to convert to\n/// @param {Number} $value - Starting px value\n/// @return {Number} $context - Context font-size in px\n/// @require {function} fs-em\n/// @require {function} fs-rem\n@function fs-convert-units($units, $value, $context: $fs-base-font-size) {\n  @if unit($value) != 'px' or unit($context) != 'px' {\n    @error '🔴  fs-convert-units() only accepts pixel values';\n  }\n\n  // Percentage\n  @if $units == '%' {\n    @if unit($value) == '%' {\n      @return $value;\n    }\n    @else {\n      @return percentage($value / $context);\n    }\n  }\n\n  // Pixels\n  @else if $units == 'px' {\n    @return $value;\n  }\n\n  // Ems\n  @else if $units == 'em' {\n    @return fs-em($value, $context);\n  }\n\n  // Rems\n  @else if $units == 'rem' {\n    @return fs-rem($value);\n  }\n\n  // Unsupported output unit\n  @else {\n    @error '🔴  “#{$units}” is not a valid output unit for fs-convert-units()';\n  }\n}\n\n/// Custom easing function\n/// @group Main\n/// @param {String} $name - Name of easing\n/// @return {String} - Easing code\n/// @require {variable} $fs-easings - Custom easing map\n@function fs-easing($name) {\n  @return cubic-bezier(unquote(map-get($fs-easings, $name)));\n}\n\n/// Convert px to em\n/// @group Main\n/// @param {Number | Map} $values - Value or values to convert\n/// @param {Number} $context [$fs-base-font-size] - Base font size\n/// @return {*} - Converted value or list of values\n/// @require {variable} $fs-base-font-size - Base font size\n@function fs-em($values, $context: $fs-base-font-size) {\n\n  // Ensure context size is in pixels\n  @if unit($context) != 'px' {\n    @error '🔴  #{$context} size must be in pixels';\n  }\n\n  // Placeholder list for converted values\n  $output: ();\n\n  @each $val in $values {\n    // Check if pixel value\n    @if type-of($val) == 'number' and unit($val) == 'px' {\n      // Convert to ems\n      $val: ($val / $context) * 1em;\n    }\n\n    // Do nothing to all other values\n    @else if $fs-debug-mode {\n      @warn '⚠️  Can’t convert non-pixel value to ems: #{$val}';\n    }\n\n    // Append value to output list\n    $output: append($output, $val);\n  }\n\n  // Return converted value(s)\n  @return $output;\n}\n\n////\n/// @group Sass Utils\n/// @author Hugo Giraudel\n/// @link http://www.sitepoint.com/extra-map-functions-sass/\n////\n\n/// Fetch nested keys\n/// @param {Map} $map - Map\n/// @param {Arglist} $keys - Keys to fetch\n/// @return {*}\n@function fs-map-deep-get($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n\n  @return $map;\n}\n\n/// Update a key deeply nested\n/// @author Hugo Giraudel\n/// @param {Map} $map - Map to update\n/// @param {Arglist} $keys - Keys to access to value to update\n/// @param {*} $value - New value (last member of `$keys`)\n/// @return {Map} - Updated map\n@function fs-map-deep-set($map, $keys.../*, $value */) {\n  $map-list: ($map,);\n  $result: null;\n\n  @if length($keys) == 2 {\n    @return map-merge($map, (nth($keys, 1): nth($keys, -1)));\n  }\n\n  @for $i from 1 through length($keys) - 2 {\n    $map-list: append($map-list, map-get(nth($map-list, -1), nth($keys, $i)));\n  }\n\n  @for $i from length($map-list) through 1 {\n    $result: map-merge(nth($map-list, $i), (nth($keys, $i): if($i == length($map-list), nth($keys, -1), $result)));\n  }\n\n  @return $result;\n}\n\n/// Compute the maximum depth of a map\n/// @param {Map} $map\n/// @return {Number} max depth of `$map`\n@function fs-map-depth($map) {\n  $level: 1;\n\n  @each $key, $value in $map {\n    @if type-of($value) == 'map' {\n      $level: max(fs-map-depth($value) + 1, $level);\n    }\n  }\n\n  @return $level;\n}\n\n/// Test if map got all `$keys` at first level\n/// @author Hugo Giraudel\n/// @param {Map} $map - Map\n/// @param {Arglist} $keys - Keys to test\n/// @return {Boolean}\n@function fs-map-has-keys($map, $keys...) {\n  @each $key in $keys {\n    @if not map-has-key($map, $key) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n/// Test if map got all `$keys` nested with each others\n/// @author Hugo Giraudel\n/// @param {Map} $map - Map\n/// @param {Arglist} $keys - Keys to test\n/// @return {Boolean}\n@function fs-map-has-nested-keys($map, $keys...) {\n  @each $key in $keys {\n    @if not map-has-key($map, $key) {\n      @return false;\n    }\n    $map: map-get($map, $key);\n  }\n\n  @return true;\n}\n\n/// An equivalent of `zip` function but for maps.\n/// Takes two lists, the first for keys, second for values.\n/// @param {List} $keys - Keys for map\n/// @param {List} $values - Values for map\n/// @return {Map} Freshly created map\n/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#zip-instance_method\n@function fs-map-zip($keys, $values) {\n  $l-keys: length($keys);\n  $l-values: length($values);\n  $min: min($l-keys, $l-values);\n  $map: ();\n\n  @if $l-keys != $l-values {\n    @warn '⚠️  There are #{$l-keys} key(s) for #{$l-values} value(s) in the map for `map-zip`. ' + 'Resulting map will only have #{$min} pairs.';\n  }\n\n  @if $min == 0 {\n    @return $map;\n  }\n\n  @for $i from 1 through $min {\n    $map: map-merge($map, (nth($keys, $i): nth($values, $i)));\n  }\n\n  @return $map;\n}\n\n/// jQuery-style extend function\n/// About `map-merge()`:\n/// * only takes 2 arguments\n/// * is not recursive\n/// @param {Map} $map - first map\n/// @param {ArgList} $maps - other maps\n/// @param {Boolean} $deep - recursive mode\n/// @return {Map}\n@function fs-map-extend($map, $maps.../*, $deep */) {\n  $last: nth($maps, -1);\n  $deep: $last == true;\n  $max: if($deep, length($maps) - 1, length($maps));\n\n  // Loop through all maps in $maps...\n  @for $i from 1 through $max {\n    // Store current map\n    $current: nth($maps, $i);\n\n    // If not in deep mode, simply merge current map with map\n    @if not $deep {\n      $map: map-merge($map, $current);\n    }\n    @else {\n      // If in deep mode, loop through all tuples in current map\n      @each $key, $value in $current {\n\n        // If value is a nested map and same key from map is a nested map as well\n        @if type-of($value) == 'map' and type-of(map-get($map, $key)) == 'map' {\n          // Recursive extend\n          $value: fs-map-extend(map-get($map, $key), $value, true);\n        }\n\n        // Merge current tuple with map\n        $map: map-merge($map, ($key: $value));\n      }\n    }\n  }\n\n  @return $map;\n}\n\n/// Convert px to rem\n/// @group Main\n/// @param {Number | Map} $values - Value values to convert\n/// @param {Number} $context [$fs-base-font-size] - Base font size\n/// @return {*} - Converted value or list of values\n/// @require {variable} $fs-base-font-size - Base font size\n@function fs-rem($values) {\n\n  // Placeholder list for converted values\n  $output: ();\n\n  @each $val in $values {\n\n    // Check if pixel value\n    @if type-of($val) == 'number' and unit($val) == 'px' {\n      // Convert to rems\n      $val: ($val / $fs-base-font-size) * 1rem;\n    }\n\n    // Do nothing to all other values\n    @else if $fs-debug-mode and $val != 0 {\n      @warn '⚠️  Can’t convert non-pixel value to rems: #{$val}';\n    }\n\n    // Append value to output list\n    $output: append($output, $val);\n  }\n\n  // Return converted value(s)\n  @return $output;\n}\n\n/// Scale a value relative to the viewport width using `calc()` and viewport units\n/// @group Main\n/// @param {Number} $start - Starting value\n/// @param {Number} $end - Ending value\n/// @param {Number} $min-width - Starting viewport width\n/// @param {Number} $max-width - Ending viewport width\n/// @return {String} - Custom `calc()` formula\n/// @ignore Demo https://www.sassmeister.com/gist/9f87f8c19e91c811831d84fc8484ed24\n/// @link http://www.sassmeister.com/gist/7f22e44ace49b5124eec\n/// @link http://madebymike.com.au/writing/precise-control-responsive-typography/\n/// @link https://zellwk.com/blog/viewport-based-typography/\n/// @link http://codepen.io/indrekpaas/pen/VarLaJ?editors=1100\n/// @link http://codepen.io/maranomynet/pen/ozNpXV?editors=1100\n/// @link https://www.smashingmagazine.com/2016/05/fluid-typography/\n/// @example scss\n///   p {\n///     font-size: fs-scale(20px, 30px, 320px, 400px);\n///   }\n@function fs-scale($start, $end, $min-width, $max-width, $units: 'rem') {\n  @if $start > 0 and $end > 0 and unit($start) != unit($end) {\n    @error '🔴  fs-scale() units don’t match';\n  }\n\n  $slope: ($end - $start) / ($max-width - $min-width);\n\n  $intercept: $end - ($slope * $max-width);\n\n  @if (fs-strip-unit($intercept) == 0) {\n    @return $slope * 100vw;\n  }\n  @else {\n    @if $units == 'em' {\n      @return calc(#{$slope * 100vw} + #{fs-em($intercept)});\n    }\n    @else {\n      @return calc(#{$slope * 100vw} + #{fs-rem($intercept)});\n    }\n  }\n}\n\n/// Slices `$list` between `$start` and `$end`.\n/// @group Sass Utils\n/// @author Hugo Giraudel\n/// @link http://sassylists.com/documentation.html#fs-slice\n///\n/// @param {List}   $list                  - list to slice\n/// @param {Number} $start (1)             - start index\n/// @param {Number} $end   (length($list)) - end index\n///\n/// @return {List | Null}\n///\n/// @throws List indexes $start and $end must be numbers for `fs-slice`.\n/// @throws Start index has to be lesser than or equals to the end index for `fs-slice`.\n/// @throws List indexes must be non-zero integers for `fs-slice`.\n/// @throws Start index has to be lesser than or equal to list length for `fs-slice`.\n/// @throws End index has to be lesser than or equal to list length for `fs-slice`.\n///\n/// @example\n/// fs-slice(a b c d e, 2, 4)\n/// // b c d\n///\n/// @example\n/// fs-slice(a b c d e, 2, 2)\n/// // b\n///\n/// @example\n/// fs-slice(a b c d e, 4, 2)\n/// // null\n///\n/// @example\n/// fs-slice(a b c d e, -1, 6)\n/// // null\n///\n@function fs-slice($list, $start: 1, $end: length($list)) {\n  @if type-of($start) != 'number' or type-of($end) != 'number' {\n    @warn 'List indexes #{$start} and #{$end} must be numbers for `fs-slice`.';\n    @return null;\n  }\n\n  @if $start > $end {\n    @warn 'Start index is #{$start} but has to be lesser than or equals to the end index (#{$end}) for `fs-slice`.';\n    @return null;\n  }\n\n  @if $start < 1 or $end < 1 {\n    @warn 'List indexes must be non-zero integers for `fs-slice`.';\n    @return null;\n  }\n\n  @if $start > length($list) {\n    @warn 'Start index is #{$start} but list is only #{length($list)} items long for `fs-slice`.';\n    @return null;\n  }\n\n  @if $end > length($list) {\n    @warn 'End index is #{$end} but list is only #{length($list)} items long for `fs-slice`.';\n    @return null;\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i), list-separator($list));\n  }\n\n  @return $result;\n}\n\n/// Replace `$search` with `$replace` in `$string`\n/// @group Sass Utils\n/// @author Hugo Giraudel\n/// @param {String} $string - Initial string\n/// @param {String} $search - Substring to replace\n/// @param {String} $replace ('') - New value\n/// @return {String} - Updated string\n/// @link http://sassmeister.com/gist/1b4f2da5527830088e4d\n/// @link http://hugogiraudel.com/2014/01/13/sass-string-replacement-function/\n///\n/// @example scss\n///   fs-str-replace(\"abcde\", \"bc\", \"a\") => \"aade\"\n///\n@function fs-str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + fs-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n/// Add `$unit` to `$value`\n/// @group Sass Utils\n/// @author Hugo Giraudel\n/// @link http://hugogiraudel.com/2014/01/15/sass-string-to-number/\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n/// @return {Number} - `$value` expressed in `$unit`\n@function fs-to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n\n/// Casts a string into a number\n/// @group Sass Utils\n/// @param {String | Number} $value - Value to be parsed\n/// @return {Number}\n/// @author Hugo Giraudel\n/// @link http://hugogiraudel.com/2014/01/15/sass-string-to-number/\n@function fs-to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  }\n  @else if type-of($value) != 'string' {\n    $_: log('Value for `to-number` should be a number or a string.');\n  }\n\n  $result: 0;\n  $digits: 0;\n  $minus: str-slice($value, 1, 1) == '-';\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  @for $i from if($minus, 2, 1) through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i));\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    }\n    @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    }\n    @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n/// Strip units\n/// @group Sass Utils\n/// @param {Number} $arg - Value to strip\n/// @return {Number} - Stripped value\n/// @link http://stackoverflow.com/a/12335841/673457\n@function fs-strip-unit($arg) {\n  // Return unitless value if valid number\n  @if type-of($arg) == 'number' {\n    @return $arg / ($arg * 0 + 1);\n  }\n  // Error if not a valid number\n  @else {\n    @error '🔴  fs-strip-unit(#{inspect($arg)} is not a valid number';\n  }\n}\n\n\n// Functions with dependencies\n/// Helper to get named breakpoint value from `$fs-breakpoints` map. Defaults to using 'base' as key if a single argument is passed.\n/// @group Main\n/// @param {Arglist} $keys - key/value\n/// @return {Number} - Breakpoint width\n/// @require {function} fs-map-deep-get - Fetch nested keys\n/// @require {variable} $fs-breakpoints - Named breakpoints map\n@function fs-breakpoint($keys...) {\n  @if not global-variable-exists(fs-breakpoints) {\n    @error '🔴  $fs-breakpoints map does not exist';\n  }\n\n  @if not length($fs-breakpoints) {\n    @error '🔴  $fs-breakpoints map does not contain any items';\n  }\n\n  $default-key: 'global';\n\n  // If a single value was passed, use the default key\n  @if length($keys) == 1 and type-of(map-get($fs-breakpoints, $default-key)) != 'null' {\n    $keys: join($default-key, $keys, comma);\n  }\n\n  $val: fs-map-deep-get($fs-breakpoints, $keys...);\n\n  // Validate value\n  @if type-of($val) != 'null' {\n    @return $val;\n  }\n  @else {\n    @error '🔴  “#{$keys}” breakpoint not found';\n  }\n}\n// Requires “map-functions”\n/// Helper to get color value from `$fs-colors` map\n/// @group Main\n/// @param {Arglist} $keys - key/value\n/// @return {Color} - Color value\n/// @require {function} fs-map-deep-get - Fetch nested keys\n/// @require {variable} $fs-colors - Named colors map\n@function fs-color($keys...) {\n  @if not global-variable-exists(fs-colors) {\n    @error '🔴  $fs-colors map does not exist';\n  }\n\n  @if not length($fs-colors) {\n    @error '🔴  Color map does not contain any items';\n  }\n\n  $default-key: 'base';\n\n  // If a single value was passed, use the default key\n  @if length($keys) == 1 and type-of(map-get($fs-colors, $default-key)) != 'null' {\n    $keys: join($default-key, $keys, comma);\n  }\n\n  $val: fs-map-deep-get($fs-colors, $keys...);\n\n  // Validate\n  @if type-of($val) != 'color' {\n    @error '🔴  #{$keys} is not a valid color';\n  }\n\n  @return $val;\n}\n// Requires “map-functions”\n/// Check whether `$value` is a valid length.\n/// @group Sass Utils\n/// @param {*} $value - Value to validate.\n/// @return {Boolean}\n/// @link http://www.sitepoint.com/bulletproof-function-validate-length-values-sass/\n/// @require {function} fs-contains\n@function fs-is-length($value) {\n  @return fs-contains(0 'auto' 'initial' 'inherit', $value) or type-of($value) == 'number' and not unitless($value) or str-slice($value + '', 1, 4) == 'calc';\n}\n// Requires “contains”\n////\n/// @group Math\n/// @author xi\n/// @link https://github.com/xi/sass-planifolia/blob/master/sass/math.scss\n/// @ignore Based on work by davidkpiano, strarsis, drtimofey\n/// @ignore https://gist.github.com/davidkpiano/ad6e6771df050ff3727f\n/// @ignore https://github.com/strarsis/sass-math-pow\n/// @ignore https://github.com/thoughtbot/bitters/issues/167\n/// @ignore https://github.com/thoughtbot/bourbon/issues/717\n////\n\n/// Pi\n/// @type Number\n$fs-pi: 3.141592653589793;\n\n/// @access private\n$π: $fs-pi;\n\n/// @access private\n@function fs-exp-taylor($x, $steps) {\n  $item: 1;\n  $result: 1;\n\n  @for $i from 1 to $steps {\n    $item: $item * $x / $i;\n    $result: $result + $item;\n  }\n\n  @return $result;\n}\n\n/// @access private\n@function fs-ln-taylor($x, $steps) {\n  $z: ($x - 1) / ($x + 1);\n  $power: $z;\n  $result: $z;\n\n  @for $i from 1 to $steps {\n    $power: $power * $z * $z;\n    $result: $result + $power / (2 * $i + 1);\n  }\n\n  @return 2 * $result;\n}\n\n/// @access private\n@function fs-pow-int($base, $exponent) {\n  @if $exponent < 0 {\n    @return 1 / fs-pow-int($base, -$exponent);\n  }\n  @else if $exponent == 0 {\n    @return 1;\n  }\n  @else if $exponent == 1 {\n    @return $base;\n  }\n  @else {\n    $exp: floor($exponent / 2);\n    $pow: fs-pow-int($base, $exp);\n\n    @if $exp * 2 == $exponent {\n      @return $pow * $pow;\n    }\n    @else {\n      @return $pow * $pow * $base;\n    }\n  }\n}\n\n/// @access private\n@function fs-log-approx($x) {\n  @if $x <= 0 {\n    @error '🔴 Can’t calculate log of #{$x}';\n  }\n  @else if $x >= 1 {\n    // choose the smaller option (-1) because it yield better results in fs-ln()\n    @return str-length(inspect(round($x))) - 1;\n  }\n  @else {\n    @return -1 * str-length(inspect(round(1 / $x)));\n  }\n}\n\n/// @access private\n/// @require {function} fs-ln-taylor\n/// @require {function} fs-log-approx\n/// @require {function} fs-pow-int\n@function fs-ln($x, $steps: 32) {\n  $ln10: 2.302585092994046;\n  $approx: fs-log-approx($x);\n\n  // $y is in range [1, 10]\n  $y: $x / fs-pow-int(10, $approx);\n\n  @return $approx * $ln10 + fs-ln-taylor($y, $steps);\n}\n\n/// Power function (supports fractional exponents)\n/// @param {Number} $x - Number\n/// @param {Number} $exponent - Exponent\n/// @param {Number} $steps [32] - Steps (level of precision)\n/// @return {Number}\n/// @require {function} fs-exp-taylor\n/// @require {function} fs-ln\n/// @require {function} fs-pow-int\n/// @require {function} fs-strip-unit\n@function fs-pow($x, $exponent, $steps: 32) {\n  // We must strip the units and add them back at the end\n  $units: $x / fs-strip-unit($x);\n  $x: fs-strip-unit($x);\n\n  $exp1: round($exponent);\n  $exp2: $exponent - $exp1;\n  $pow1: fs-pow-int($x, $exp1);\n\n  @if $exp2 == 0 {\n    @return $pow1 * $units;\n  }\n  @else {\n    $y: fs-ln($x, $steps) * $exp2;\n    $pow2: fs-exp-taylor($y, $steps);\n\n    @return $pow1 * $pow2 * $units;\n  }\n}\n\n\n/// Square root function\n/// @param {Number} $x - Number\n/// @param {Number} $exponent - Exponent\n/// @param {Number} $steps [40] - Steps (level of precision)\n/// @return {Number}\n/// @require {function} fs-pow\n@function fs-sqrt($x, $exponent: 2, $steps: 40) {\n  @return fs-pow($x, 1 / $exponent, $steps);\n}\n\n\n/// Factorial function\n/// @param {Number} $number\n/// @return {Number}\n/// @author Daniel Perez Alvarez\n/// @link https://unindented.org/articles/trigonometry-in-sass/\n@function factorial($number) {\n  // Return 1 for 0! or if $number is < 0\n  $value: 1;\n\n  @if $number > 0 {\n    @for $i from 1 through $number {\n      $value: $value * $i;\n    }\n  }\n\n  @return $value;\n}\n\n\n/// @access private\n@function fs-sin-taylor($x, $steps) {\n  // We must strip the units and add them back at the end\n  $units: $x / fs-strip-unit($x);\n  $x: fs-strip-unit($x);\n\n  $item: $x;\n  $result: $x;\n\n  @for $i from 1 to $steps {\n    $item: -$item * $x * $x / (2 * $i) / (2 * $i + 1);\n    $result: $result + $item;\n  }\n\n  @return $result * $units;\n}\n\n/// Sine function\n/// @param {Number} $x - Number\n/// @param {Number} $steps [32] - Steps (level of precision)\n/// @return {Number}\n/// @require {variable} $fs-pi\n/// @require {function} fs-sin\n/// @require {function} fs-sin-taylor\n@function fs-sin($x, $steps: 32) {\n  $y: $x % (2 * $π);\n\n  @if $y > $π {\n    @return -1 * fs-sin($y - $π);\n  }\n  @else if $y < 0 {\n    @return -1 * fs-sin(-$y);\n  }\n  @else {\n    @return fs-sin-taylor($y % (2 * $π), $steps);\n  }\n}\n\n/// Cosine function\n/// @param {Number} $x - Number\n/// @param {Number} $steps [32] - Steps (level of precision)\n/// @return {Number}\n/// @require {variable} $fs-pi\n/// @require {function} fs-sin\n@function fs-cos($x, $steps: 32) {\n  @return fs-sin($x - $π / 2, $steps);\n}\n\n/// Tangent function\n/// @param {Number} $x - Number\n/// @param {Number} $steps [32] - Steps (level of precision)\n/// @return {Number}\n/// @require {function} fs-cos\n/// @require {function} fs-sin\n@function fs-tan($x, $steps: 32) {\n  @return fs-sin($x, $steps) / $cos($x, $steps);\n}\n// Requires “strip-unit”\n/// Return unitless ratio of two values\n/// @group Math\n/// @param {Number} $a - Dividend\n/// @param {Number} $b - Divisor\n/// @return {Number} - Unitless ratio\n/// @require {function} fs-strip-unit\n@function fs-ratio($a, $b) {\n  // Check if units match, or if divisor is unitless\n  @if unit($a) == unit($b) or unitless($b) {\n    @return fs-strip-unit($a / $b);\n  }\n  // Warn if units don't match\n  @else {\n    @error '🔴  Units do not match: fs-ratio(#{$a}, #{$b})';\n  }\n}\n// Requires “strip-unit”\n/// **⚠️ DEPRECATED:** use `fs-strip-unit` instead.\n/// Strips unit from value\n/// @group Sass Utils\n/// @param {Number} $arg - Value to strip\n/// @return {Number} - Stripped value\n/// @require {function} fs-strip-unit\n@function fs-strip($arg) {\n  @warn 'fs-strip() is deprecated, use fs-strip-unit(#{$arg}) instead';\n  @return fs-strip-unit($arg);\n}\n// Requires “strip-unit”\n/// URL-encode string\n/// @group Sass Utils\n/// @param {String} $string - String to encode\n/// @return {String} - URL-encoded string\n/// @require {variable} $fs-escape-chars\n/// @require {function} fs-str-replace\n///\n@function fs-url-encode($string) {\n  @each $char, $code in $fs-escape-chars {\n    $string: fs-str-replace($string, $char, $code);\n  }\n  @return $string;\n}\n// Requires “str-replace”\n/// Get z-index layer from `$fs-zindex` map variable\n/// @group Main\n/// @param {Arglist} $keys - key/value\n/// @return {Number} - z-index value\n/// @require {function} fs-map-deep-get - Fetch nested keys\n/// @require {variable} $fs-zindex - Global z-index map\n/// @link https://twitter.com/HugoGiraudel/status/480022470431608832\n/// @link http://www.sitepoint.com/better-solution-managing-z-index-sass/\n@function fs-zindex($keys...) {\n  @if not global-variable-exists(fs-zindex) {\n    @error '🔴  $fs-zindex map does not exist';\n  }\n\n  @if not length($fs-zindex) {\n    @error '🔴  $fs-zindex map does not contain any items';\n  }\n\n  @return fs-map-deep-get($fs-zindex, $keys...);\n}\n// Requires “map-functions”\n\n// Functions with nested dependencies\n////\n/// @group Main\n/// @author Based on work by voxpelli and xi\n/// @link https://gist.github.com/voxpelli/6304812\n/// @link https://github.com/xi/sass-planifolia/blob/master/sass/contrast.scss\n////\n\n/// Color luminance function\n/// @access private\n/// @param {Color} $color - Color\n/// @return {Number} - Float between 0–1\n/// @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n/// @require {function} fs-pow\n@function fs-luminance($color) {\n  $colors: (\n    'red': red($color),\n    'green': green($color),\n    'blue': blue($color)\n  );\n\n  @each $name, $value in $colors {\n    $adjusted: 0;\n    $value: $value / 255;\n\n    @if $value < 0.03928 {\n      $value: $value / 12.92;\n    }\n    @else {\n      $value: ($value + 0.055) / 1.055;\n      $value: fs-pow($value, 2.4);\n    }\n\n    $colors: map-merge($colors, ($name: $value));\n  }\n\n  @return (map-get($colors, 'red') * 0.2126) + (map-get($colors, 'green') * 0.7152) + (map-get($colors, 'blue') * 0.0722);\n}\n\n/// Color contrast function\n/// @access private\n/// @param {Color} $color1\n/// @param {Color} $color2\n/// @return {Number}\n/// @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n/// @require {function} fs-luminance\n@function fs-color-contrast($color1, $color2) {\n  $lum1: fs-luminance($color1) + 0.05;\n  $lum2: fs-luminance($color2) + 0.05;\n  $ratio: $lum1 / $lum2;\n\n  @if $lum2 > $lum1 {\n    $ratio: 1 / $ratio;\n  }\n\n  @return $ratio;\n}\n\n/// Pick first color in map with passing color contrast ratio\n/// @param {Color} $base - Background color\n/// @param {Map} $colors - List of text colors ordered by preference\n/// @param {Number} $ratio [4.5] - Target contrast ratio\n/// @param {Number} $tolerance [0] - Allowed deviation from target contrast ratio\n/// @return {Color}\n/// @require {function} fs-color-contrast\n///\n/// @example scss\n///   .demo {\n///     color: fs-auto-contrast(darkgreen, (#fff, #555, #000));\n///   }\n///\n@function fs-auto-contrast($base, $colors, $ratio: 4.5, $tolerance: 0) {\n  $first-match: false;\n\n  @for $i from 1 through length($colors) {\n    $color: nth($colors, $i);\n    $contrast: fs-color-contrast($base, $color);\n\n    @if ($contrast >= ($ratio - $tolerance)) {\n\n      @if not $first-match {\n        $first-match: $color;\n\n        // Warn if low contrast\n        @if ($contrast < $ratio) {\n          @warn \"#{$first-match} on #{$base} fails WCAG AA contrast test (#{$contrast})\";\n        }\n      }\n    }\n  }\n\n  @if $first-match {\n    @return $first-match;\n  }\n  @else {\n    $last-color: nth($colors, length($colors));\n    @warn \"⚠️  All text colors on #{$base} fail the WCAG AA contrast test at #{$ratio} ratio\";\n  }\n}\n// Requires pow() from “math”\n/// **⚠️ DEPRECATED:** use `fs-svg-url` instead.\n/// Helper to get URL-escaped inline SVG code for use with `background-image`\n/// @group Main\n/// @param {String} $name - Icon name\n/// @return {Color} $color - Fill color\n/// @require {function} fs-url-encode\n/// @require {variable} $fs-svg-icons - SVG icon map\n///\n/// @ignore - SVG code must be escaped for older browsers (e.g. IE9)\n/// @ignore - Some versions of Firefox don't like the “#” symbol, must be also be escaped\n/// @ignore - IE9+ requires height/width attributes or else background-size won't work\n///\n/// @link https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n/// @link https://css-tricks.com/probably-dont-base64-svg/\n/// @link http://stackoverflow.com/questions/21840551/background-size-with-svg-squished-in-ie9-10\n/// @link http://caniuse.com/#feat=datauri\n///\n@function fs-svg($name, $color: false, $other: false) {\n  @warn 'fs-svg() is deprecated, use fs-svg-url(#{$name}, (fill: #{$color})) instead';\n\n  // Check if icon exists\n  @if not map-has-key($fs-svg-icons, $name) {\n    @error '🔴  icon “#{$name}” does not exists in $fs-svg-icons map';\n    @return false;\n  }\n\n  // Get icon data\n  $icon-map: map-get($fs-svg-icons, $name);\n  $data: map-get($icon-map, 'data');\n  $height: map-get($icon-map, 'height');\n  $width: map-get($icon-map, 'width');\n  $other: map-get($icon-map, 'other');\n\n  // Fill\n  $fill: '';\n  @if ($color) {\n    $fill: ' fill=\"#{$color}\"';\n  }\n\n  // Other attributes\n  $custom-attrs: '';\n  @if ($other) {\n    $custom-attrs: ' #{$other}';\n  }\n\n  // Return inline SVG data\n  @return 'data:image/svg+xml,' + fs-url-encode('<svg version=\"1.1\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ' + $width + ' ' + $height + '\" width=\"' + $width + '\" height=\"' + $height + '\" preserveAspectRatio=\"xMidYMid meet\"' + $fill + $custom-attrs + '>' + unquote($data) + '</svg>');\n}\n// Requires “fs-url-encode”\n/// Inline SVG in url() for background-image\n/// @group Main\n/// @param {String} $name - SVG name\n/// @param {Map} $props - SVG attributes\n/// @return {String} - Inline SVG as url(\"data:image/svg+xml,…\")\n/// @require {variable} $fs-escape-chars\n/// @require {variable} $fs-svgs\n/// @require {function} fs-str-replace\n/// @require {function} fs-url-encode\n/// @link https://www.sassmeister.com/gist/c2f12e64b242469d728f335ed612ae35\n/// @link https://css-tricks.com/probably-dont-base64-svg/\n/// @link https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n/// @link https://codepen.io/jakob-e/pen/doMoML\n/// @link https://yoksel.github.io/url-encoder/\n/// @link https://www.sassmeister.com/gist/594de57bc18015df9dc568e96aff9075\n/// @example scss\n///   .foo {\n///     background-image: fs-svg-url('chevDown', (fill: none, stroke: red, stroke-width: 1px));\n///   }\n@function fs-svg-url($name, $props: false, $svg-map: $fs-svgs) {\n  @if not $svg-map {\n    @error '🔴  $svg-map doesn’t exist';\n    @return false;\n  }\n\n  @if not type-of($svg-map) == 'map' {\n    @error '🔴  $svg-map isn’t a valid Sass map';\n    @return false;\n  }\n\n  @if not map-has-key($svg-map, $name) {\n    @error '🔴  icon “#{$name}” not found in $svg-map';\n    @return false;\n  }\n\n  $svg: map-get($svg-map, $name);\n\n  // Add custom properties\n  @if $props {\n    $props-string: '';\n    @each $key, $val in $props {\n      $props-string: $props-string + \" #{$key}='#{$val}'\";\n    }\n    $svg: fs-str-replace($svg, '<svg', '<svg' + $props-string);\n  }\n\n  @return url(\"data:image/svg+xml,#{unquote(fs-url-encode($svg))}\");\n}\n// Requires “str-replace” and “fs-url-encode”\n\n// Mixins\n//---------------------------------\n/// Absolutely position an element and fill available space\n/// @group Main\n@mixin fs-absolute-fill {\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n////\n/// @author Hugo Giraudel\n/// @link http://codepen.io/SitePoint/pen/dppJzX/\n////\n\n/// Computes the height of the tilted pseudo-element based on the given angle\n/// @access private\n//  b ◣c\n//    a\n@function fs-triangle-height($angle) {\n  $a: 100;// width is 100%\n  $opposite-angle: (90deg - $angle);\n\n  // hypotenuse\n  $c: $a / fs-strip-unit(fs-sin($opposite-angle));\n\n  // calculate height using Pythagorean theorem\n  $b: fs-sqrt(fs-pow($c, 2) - fs-pow($a, 2));\n\n  // convert to percentage\n  @return (abs($b) * 1%);\n}\n\n/// Apply an angled edge using a pseudo-element with a diagonal background\n/// @group Main\n/// @param {Angle} $angle - Angle\n/// @param {Color} $color - Background color\n/// @param {String} $position ['top'] - Either `top` or `bottom`\n/// @param {String} $pseudo ['before'] - Either `before` or `after`\n@mixin fs-angle($angle, $color, $position: 'top', $pseudo: 'before') {\n  $height-ratio: fs-triangle-height($angle);\n  background-color: $color;\n  position: relative;\n\n  &:#{$pseudo} {\n    content: '';\n    left: 0;\n    padding-top: $height-ratio;\n    position: absolute;\n    width: 100%;\n\n    // 1. Use rgba() instead of “transparent” for Safari\n    // http://stackoverflow.com/a/30674347/673457\n    @if ($position == 'top') {\n      background-image: linear-gradient($angle, $color 50%, rgba($color, 0) 50%);\n      bottom: 100%;\n    }\n    @else {\n      background-image: linear-gradient($angle, rgba($color, 0) 50%, $color 50%);\n      top: 100%;\n    }\n  }\n}\n\n/// Maintain aspect ratio\n/// @group Main\n/// @param {Number} $ratio - Aspect ratio (width / height)\n///\n/// @example scss - 16:9 aspect ratio\n///   .foo {\n///     @include fs-aspect-ratio(16/9);\n///   }\n///\n@mixin fs-aspect-ratio($ratio) {\n  display: block;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    display: block;\n    padding-top: percentage(1 / $ratio);\n  }\n}\n\n/// Burger menu icon mixin\n/// @group Main\n/// @param {Number} $width [30px] - Icon width\n/// @param {Number} $height [5px] - Bar height\n/// @param {Number} $gutter [3px] - Gap between bars\n/// @param {Color} $color [currentColor] - Icon color\n/// @param {Number} $border-radius [0] - Border radius\n/// @param {Number} $transition-duration [300ms] - Transition duration\n/// @author Joren Van Hee\n/// @link https://github.com/jorenvanhee/sass-burger\n///\n/// @example scss\n///   .icon {\n///     @include fs-burger(\n///       $color: #fff,\n///       $gutter: 3px,\n///       $height: 3px,\n///       $transition-duration: 200ms,\n///       $width: 20px\n///     );\n///\n@mixin fs-burger(\n  $width: 30px,\n  $height: 5px,\n  $gutter: 3px,\n  $color: currentColor,\n  $border-radius: 0,\n  $transition-duration: 300ms\n) {\n  $burger-height: $height !global;\n  $burger-gutter: $gutter !global;\n  margin-bottom: $height + $gutter;\n  margin-top: $height + $gutter;\n  position: relative;\n  user-select: none;\n\n  // Burger parts\n  // (---) top    -> &::before\n  // [---] middle -> &\n  // (---) bottom -> &::after\n  &,\n  &::before,\n  &::after {\n    background-color: $color;\n    @if $border-radius != 0 {\n      border-radius: $border-radius;\n    }\n    height: $height;\n    transition-duration: $transition-duration;\n    transition-property: background-color, transform;\n    width: $width;\n  }\n\n  &::before,\n  &::after {\n    content: '';\n    left: 0;\n    position: absolute;\n  }\n\n  &::before {\n    top: -($height + $gutter);\n  }\n\n  &::after {\n    top: $height + $gutter;\n  }\n}\n\n// Animate burger icon to a cross\n/// @group Main\n///\n/// @example scss\n///   .icon {\n///     @include fs-burger(\n///       $color: #fff,\n///       $gutter: 3px,\n///       $height: 3px,\n///       $transition-duration: 200ms,\n///       $width: 20px\n///     );\n///\n///     &.is-active {\n///       @include fs-burger-to-cross;\n///     }\n///   }\n///\n@mixin fs-burger-to-cross($color: auto) {\n  & {\n    background-color: transparent;\n  }\n\n  @if ($color != auto) {\n    &:before,\n    &:after {\n      background-color: $color;\n    }\n  }\n\n  &:before {\n    transform: translateY($burger-gutter + $burger-height) rotate(45deg);\n  }\n\n  &:after {\n    transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);\n  }\n}\n\n/// Clears floats in IE 8+\n/// @group Main\n/// @link http://nicolasgallagher.com/micro-clearfix-hack/\n/// @link https://css-tricks.com/snippets/css/clear-fix/\n/// @ignore Consider replacing with “display: flow-root” once support is broad enough.\n/// @ignore https://caniuse.com/#feat=flow-root\n@mixin fs-clearfix {\n  &:after {\n    clear: both;\n    content: '';\n    display: table;\n  }\n}\n\n/// Warn if the contrast is below a threshold\n/// @group Main\n/// @param {color} $color1 background color\n/// @param {color} $color2 foreground color\n/// @param {number} $threshold [4.5] - Minimum contrast threshold\n/// @link https://github.com/xi/sass-planifolia/blob/master/sass/contrast.scss\n/// @link https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\n/// @require {function} fs-color-contrast\n@mixin fs-contrast-test($color1, $color2, $threshold: 4.5) {\n  $contrast: fs-color-contrast($color1, $color2);\n\n  @if $contrast < $threshold {\n    @warn '⚠️  Low contrast: #{$color1}, #{$color2}, #{$contrast}';\n  }\n}\n\n////\n/// @group Sass Utils\n////\n\n/// Debug mode toggle\n/// @type Boolean\n$fs-debug-mode: false !default;\n\n/// Debug helper to conditionally run code\n/// @param {Boolean} $override - Manually override `$fs-debug-mode` value\n/// @require {variable} $fs-debug-mode - Global debug mode flag\n@mixin fs-debug($override: false) {\n  @if ($fs-debug-mode or $override) {\n    @content;\n  }\n}\n\n/// Apply font smoothing in Safari, Chrome, and Firefox. Use sparringly!\n/// @group Main\n/// @param {Boolean} $enabled - Enable or disable smoothing\n/// @link http://maximilianhoffmann.com/posts/better-font-rendering-on-osx\n/// @link http://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/\n@mixin fs-font-smoothing($enabled: true) {\n  @if $enabled {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n  @else {\n    -moz-osx-font-smoothing: auto;\n    -webkit-font-smoothing: subpixel-antialiased;\n  }\n}\n\n/// Hide text in element, requires setting height and width\n/// @group Main\n/// @link http://compass-style.org/reference/compass/typography/text/replacement/#mixin-hide-text\n@mixin fs-hide-text {\n  font-size: 0;\n  overflow: hidden;\n  text-indent: 110%;// > 100% prevents issues with inline-block elements\n  white-space: nowrap;\n}\n\n/// Helper mixin to set link colors\n/// @group Main\n/// @param {Color} $static - Static link color\n/// @param {Color} $visited [$static] - Visited link color (optional)\n/// @param {Color} $attention - Hover/focus/active link color\n///\n/// @example scss\n///   a {\n///     @include fs-link-colors(\n///       $static: blue,\n///       $attention: red,\n///       $visited: purple\n///     );\n///   }\n///\n@mixin fs-link-colors($static, $attention, $visited: false) {\n  @if $visited {\n    &,\n    &:link {\n      color: $static;\n    }\n\n    &:visited {\n      color: $visited;\n    }\n  }\n  @else {\n    &,\n    &:link,\n    &:visited {\n      color: $static;\n    }\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: $attention;\n  }\n}\n\n////\n/// @group Main\n////\n\n/// Base media query mixin\n/// @param {Number | Map} $conditions - Width or map of conditions\n///\n/// @example scss\n///   @include fs-media((min-width: 600px)) {…}\n///\n///   @include fs-media((min-width: 600px, max-width: 900px, min-height: 500px, min-aspect-ratio: \"1/1\")) {…}\n///\n/// @ignore Convert units to ems when applicable http://zellwk.com/blog/media-query-units/\n/// @ignore Note: EMs in media queries are relative to the initial browser font-size (16px) http://www.w3.org/TR/css3-mediaqueries/#units\n/// @ignore Demo: http://www.sassmeister.com/gist/908ff8ee2e2e0b18f768fcbc87df385c\n@mixin fs-media($conditions) {\n\n  // Check if $conditions is a valid map\n  @if type-of($conditions) != 'map' {\n    @error '🔴 “#{$conditions}” is not a valid Sass map';\n  }\n  @else {\n    $mq-conditions: '';\n\n    // Convert map to properly formatted media query string\n    @each $type, $value in $conditions {\n\n      // If value is a number, we may need to convert to ems\n      @if type-of($value) == 'number' {\n\n        // Convert px to em\n        @if unit($value) == 'px' {\n          $value: ($value / 16px) * 1em;\n        }\n\n        // Convert rem to em\n        @else if unit($value) == 'rem' {\n          $value: ($value / 1rem) * 1em;\n        }\n      }\n\n      // Use str-insert() with -1 index to append value to the end\n      $mq-conditions: str-insert($mq-conditions, 'and (#{$type}: #{$value}) ', -1);\n    }\n\n    // Output the media query\n    @media all #{$mq-conditions} {\n      @content;\n    }\n  }\n}\n\n/// Min-width media query helper\n/// @require {mixin} fs-media\n/// @param {Number} $width - Breakpoint width\n///\n/// @example scss\n///   @include fs-min-width(960px) {…}\n///\n@mixin fs-min-width($width) {\n  @include fs-media((min-width: $width)) {\n    @content;\n  }\n}\n\n/// Max-width media query helper\n/// @require {mixin} fs-media\n/// @param {Number} $width - Breakpoint width\n///\n/// @example scss\n///   @include fs-max-width(960px) {…}\n///\n@mixin fs-max-width($width) {\n  @include fs-media((max-width: $width)) {\n    @content;\n  }\n}\n\n/// Min-height media query helper\n/// @require {mixin} fs-media\n/// @param {Number} $height - Breakpoint height\n///\n/// @example scss\n///   @include fs-min-height(500px) {…}\n///\n@mixin fs-min-height($height) {\n  @include fs-media((min-height: $height)) {\n    @content;\n  }\n}\n\n/// Max-height media query helper\n/// @require {mixin} fs-media\n/// @param {Number} $height - Breakpoint height\n///\n/// @example scss\n///   @include fs-max-height(500px) {…}\n///\n@mixin fs-max-height($height) {\n  @include fs-media((max-height: $height)) {\n    @content;\n  }\n}\n\n////\n/// @group Main\n////\n\n/// Hide in print view\n@mixin fs-print-hide {\n  // scss-lint:disable ImportantRule\n  @media print {\n    display: none !important;\n  }\n}\n\n/// Only show in print view\n@mixin fs-print-only {\n  // scss-lint:disable ImportantRule\n  display: none !important;\n\n  @media print {\n    display: block !important;\n  }\n}\n\n////\n/// Helper mixins to add various pseudo selectors\n/// @group Selectors\n/// @ignore http://sassmeister.com/gist/35c9c323d22eefdbf293 (by @csswizardry)\n////\n\n/// Helper mixin to apply static pesudo selectors\n@mixin fs-static {\n  &,\n  &:link,\n  &:visited {\n    @content;\n  }\n}\n\n/// Helper mixin to apply `:hover`, `:focus`, and `:active` pesudo selectors\n@mixin fs-attention {\n  &:hover,\n  &:focus,\n  &:active {\n    @content;\n  }\n}\n\n/// Helper mixin to apply all pesudo selectors\n@mixin fs-all-states {\n  &,\n  &:link,\n  &:visited,\n  &:focus,\n  &:hover,\n  &:active {\n    @content;\n  }\n}\n\n////\n/// Helper mixins to add various pseudo parent selectors\n/// @group Selectors\n/// @ignore http://sassmeister.com/gist/35c9c323d22eefdbf293 (by @csswizardry)\n////\n\n/// Helper mixin to apply static pesudo selectors to parent\n@mixin fs-static-parent($parent:null) {\n  // Return content if valid string\n  @if type-of($parent) == 'string' {\n    #{$parent} &,\n    #{$parent}:link &,\n    #{$parent}:visited & {\n      @content;\n    }\n  }\n  // Error if not a valid string\n  @else {\n    @error '🔴  fs-static-parent(#{inspect($parent)} is not a valid string';\n  }\n}\n\n/// Helper mixin to apply `:hover`, `:focus`, and `:active` pesudo selectors to parent\n@mixin fs-attention-parent($parent:null) {\n  // Return content if valid string\n  @if type-of($parent) == 'string' {\n    #{$parent}:hover &,\n    #{$parent}:focus &,\n    #{$parent}:active & {\n      @content;\n    }\n  }\n  // Error if not a valid string\n  @else {\n    @error '🔴  fs-attention-parent(#{inspect($parent)} is not a valid string';\n  }\n}\n\n/// Helper mixin to apply all pesudo selectors to parent\n@mixin fs-all-states-parent($parent:null) {\n  // Return content if valid string\n  @if type-of($parent) == 'string' {\n    #{$parent} &,\n    #{$parent}:link &,\n    #{$parent}:visited &,\n    #{$parent}:focus &,\n    #{$parent}:hover &,\n    #{$parent}:active & {\n      @content;\n    }\n  }\n  // Error if not a valid string\n  @else {\n    @error '🔴  fs-all-states-parent(#{inspect($parent)} is not a valid string';\n  }\n}\n\n/// Quantity query mixin\n/// @group Main\n/// @author Indrek Paas\n/// @link http://sassmeister.com/gist/f48e5e34d329eaf44e37\n/// @link http://alistapart.com/article/quantity-queries-for-css\n/// @require {function} fs-to-number\n/// @param {String | Number} $arg - Quantity query\n///\n/// @example scss\n///   @include fs-quantity(8) {\n///     /* Exactly 8 */\n///   }\n///\n///   @include fs-quantity(8 12) {\n///     /* At least 8 and at most 12 */\n///   }\n///\n///   @include fs-quantity(odd) {\n///     /* Odd quantity */\n///   }\n///\n///   @include fs-quantity(even) {\n///     /* Even quantity*/\n///   }\n///\n///   @include fs-quantity('<8') {\n///     /* Less than 8 */\n///   }\n///\n///   @include fs-quantity('<=8') {\n///     /* Less than or equal to 8 */\n///   }\n///\n///   @include fs-quantity('>8') {\n///     /* More than 8 */\n///   }\n///\n///   @include fs-quantity('>=8') {\n///     /* More than or equal to 8 */\n///   }\n///\n@mixin fs-quantity($arg) {\n  // Exactly N\n  @if type-of($arg) == 'number' {\n    &:nth-last-child(#{$arg}):first-child,\n    &:nth-last-child(#{$arg}):first-child ~ & {\n      @content;\n    }\n  }\n\n  // At least N and at most N\n  @else if type-of($arg) == 'list' {\n    &:nth-last-child(n+#{nth($arg, 1)}):nth-last-child(-n+#{nth($arg, 2)}):first-child,\n    &:nth-last-child(n+#{nth($arg, 1)}):nth-last-child(-n+#{nth($arg, 2)}):first-child ~ & {\n      @content;\n    }\n  }\n\n  @else if type-of($arg) == 'string' {\n    // Odd/even\n    @if $arg == 'odd' or $arg == 'even' {\n      &:nth-last-child(#{$arg}):first-child,\n      &:nth-last-child(#{$arg}):first-child ~ & {\n        @content;\n      }\n    }\n\n    // Less than...\n    @else if str-slice($arg, 1, 1) == '<' {\n      // Less than or equal to N\n      @if str-slice($arg, 2, 2) == '=' {\n        $arg: str-slice($arg, 3);\n\n        &:nth-last-child(-n+#{$arg}):first-child,\n        &:nth-last-child(-n+#{$arg}):first-child ~ & {\n          @content;\n        }\n      }\n\n      // Less than N\n      @else {\n        $arg: fs-to-number(str-slice($arg, 2));\n\n        &:nth-last-child(-n+#{$arg - 1}):first-child,\n        &:nth-last-child(-n+#{$arg - 1}):first-child ~ & {\n          @content;\n        }\n      }\n    }\n\n    // More than...\n    @else if str-slice($arg, 1, 1) == '>' {\n      // More than or equal to N\n      @if str-slice($arg, 2, 2) == '=' {\n        $arg: str-slice($arg, 3);\n\n        &:nth-last-child(n+#{$arg}),\n        &:nth-last-child(n+#{$arg}) ~ & {\n          @content;\n        }\n      }\n\n      // More than N\n      @else {\n        $arg: fs-to-number(str-slice($arg, 2));\n\n        &:nth-last-child(n+#{$arg + 1}),\n        &:nth-last-child(n+#{$arg + 1}) ~ & {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n////\n/// Reset default element styles\n/// @group Main\n////\n\n/// Reset input styles\n@mixin fs-reset-input {\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  padding: 0;\n}\n\n/// Reset button styles\n@mixin fs-reset-button {\n  @include fs-reset-input;\n  background-image: none;// for Firefox mobile\n  cursor: pointer;\n  font-weight: normal;\n  letter-spacing: 0;\n  line-height: normal;\n  text-align: left;\n  text-shadow: none;\n  text-transform: none;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: transparent;\n  }\n}\n\n\n/// Reset textarea styles\n@mixin fs-reset-textarea {\n  border: 0;\n  outline: 0;\n  overflow: auto;\n  resize: none;\n  vertical-align: top;\n}\n\n\n/// Reset list styles\n@mixin fs-reset-list {\n  list-style-type: none;\n  margin-bottom: 0;\n  margin-top: 0;\n  padding-left: 0;\n}\n\n////\n/// @group Selectors\n/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#selector_functions\n////\n\n/// Add selector to root (requires Sass 3.4+)\n/// @param {String} $selector - Selector to add to root\n///\n/// @example scss\n///   .foo {\n///     @include fs-root-add(a) {\n///       content: 'a.foo';\n///     }\n///\n///     @include fs-root-add('.bar') {\n///       content: '.foo.bar';\n///     }\n///   }\n///\n@mixin fs-root-add($selector) {\n  @if function-exists(selector-append) {\n    @at-root #{selector-append($selector, &)} {\n      @content;\n    }\n  }\n  @else {\n    @error '🔴  selector-append() is not supported. Please upgrade to Sass 3.4+';\n  }\n}\n\n/// Prepend selector (requires Sass 3.4+)\n/// @param {String} $selector - Selector to insert before root\n///\n/// @example scss\n///   .foo {\n///     @include fs-root-before(a) {\n///       content: 'a .foo';\n///     }\n///\n///     @include fs-root-before('.bar') {\n///       content: '.bar .foo';\n///     }\n///   }\n///\n@mixin fs-root-before($selector) {\n  @if function-exists(selector-nest) {\n    @at-root #{selector-nest($selector, &)} {\n      @content;\n    }\n  }\n  @else {\n    @error '🔴  selector-nest() is not supported. Please upgrade to Sass 3.4+';\n  }\n}\n\n/// Helper to select all text input types\n/// @group Selectors\n@mixin fs-text-inputs {\n  // scss-lint:disable QualifyingElement\n  input[type='email'],\n  input[type='number'],\n  input[type='password'],\n  input[type='search'],\n  input[type='tel'],\n  input[type='text'],\n  input[type='url'] {\n    @content;\n  }\n}\n\n/// Helper for setting `text-rendering: optimizeLegibility;`\n/// @group Main\n/// @ignore Note: optimizeLegibility is buggy on Safari 5.1 for Windows\n@mixin fs-text-optimize {\n  text-rendering: optimizeLegibility;// Improve kerning and enable ligatures\n\n  .webos & {\n    text-rendering: auto;// Disable kerning for webOS http://bit.ly/1brNQpJ\n  }\n}\n\n/// Triangle mixin (from Bourbon)\n/// @group Main\n/// @param {Number} $size - Height of triangle\n/// @param {Color} $color - Hex color value\n/// @param {String} $direction - Up, down, left, or right\n/// @author https://github.com/thoughtbot\n/// @link https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_triangle.scss\n@mixin fs-triangle($size, $color, $direction) {\n  height: 0;\n  width: 0;\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height / 2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top-width: 0;\n    }\n    @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-right-width: 0;\n      border-top: $width solid $background-color;\n    }\n    @else if $direction == down {\n      border-bottom-width: 0;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    }\n    @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-left-width: 0;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left: $width solid $background-color;\n    }\n    @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left: $width solid $background-color;\n    }\n    @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  }\n  @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  }\n  @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  }\n  @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n  @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n\n/// Vertically center an element\n/// @group Main\n/// @param {String} $position [relative] - Positioning\n/// @link http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/\n/// @ignore Note: May need to set `transform-style: preserve-3d;` on parent to prevent blurry text\n@mixin fs-vert-center($position: relative) {\n  position: $position;\n  top: 50%;\n  transform: translateY(-50%);\n\n  .no-csstransforms & {\n    position: static;\n    top: auto;\n  }\n}\n\n/// Reset vertical center styles\n/// @group Main\n@mixin fs-undo-vert-center {\n  top: auto;\n  transform: translateY(0);\n}\n\n/// Hide visually but still be available to screenreaders\n/// @group Main\n/// @link http://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n/// @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css\n/// @author Jonathan Snook\n///\n/// @ignore 1. For long content, line feeds are not interpreted as spaces and small width causes content to wrap 1 word per line:\n/// @ignore https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n@mixin fs-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap; // [1]\n  width: 1px;\n}\n\n/// Undo visually hidden styles\n/// @group Main\n@mixin fs-undo-visually-hidden {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  white-space: normal;\n  width: auto;\n}\n\n/// Break long words, hyphenate if possible (requires `lang` attribute)\n/// @group Main\n/// @link http://kenneth.io/blog/2012/03/04/word-wrapping-hypernation-using-css/\n/// @link https://justmarkup.com/log/2015/07/dealing-with-long-words-in-css/\n/// @link http://caniuse.com/#feat=css-hyphens\n/// @link http://caniuse.com/#feat=wordwrap\n/// @ignore Demo http://jsbin.com/fubor\n/// @ignore - Hyphenation not currently suported in Chrome, Opera, Android, or IE9-\n/// @ignore - Hyphenation depends on dictionary, so requires lang attribute be set\n/// @ignore - Setting \"word-break: break-all\" will disable hyphens in Firefox and IE10+\n@mixin fs-break-word {\n  hyphens: auto;// requires lang attribute be set on target element or ancestor\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n}\n\n\n// Minxins with dependencies\n/// Scale a value for any number of properites relative to the viewport width\n/// @group Main\n/// @param {String | List} $properties - Properties to scale\n/// @param {Map} $map - Map of breakpoints and values\n/// @param {Boolean} $initial [true] - Output initial value (not inside media query)\n/// @param {String} $units ['rem'] - Output units\n/// @require {function} fs-rem\n/// @require {function} fs-scale\n/// @require {mixin} fs-min-width\n/// @require {mixin} fs-max-width\n/// @ignore Demo https://www.sassmeister.com/gist/37c4f4876609516eebab247178ea4b3b\n/// @link http://www.sassmeister.com/gist/7f22e44ace49b5124eec\n/// @link http://madebymike.com.au/writing/precise-control-responsive-typography/\n/// @link https://zellwk.com/blog/viewport-based-typography/\n/// @link http://codepen.io/indrekpaas/pen/VarLaJ?editors=1100\n/// @link http://codepen.io/maranomynet/pen/ozNpXV?editors=1100\n/// @link https://www.smashingmagazine.com/2016/05/fluid-typography/\n/// @link https://github.com/Jakobud/poly-fluid-sizing\n/// @example scss\n///   @include fs-scale(font-size, (320px: 18px, 1024px: 38px));\n/// @example scss\n///   @include fs-scale(margin-bottom margin-top, (\n///     320px: 18px,\n///     768px: 26px,\n///     1024px: 38px\n///   ));\n/// @example scss\n///   @include fs-scale(font-size, (\n///     320px: 18px,\n///     800px: (32px 24px),// scale up from 18px–32px, then reset to 24px at 800px wide and scale up to 38px\n///     1024px: 38px\n///   ));\n/// @example scss\n///   @include fs-scale(font-size, (768px: 26px, 1024px: 38px), $initial: false);\n/// @example scss\n///   @include fs-scale(font-size, (768px: 26px, 1024px: 38px), $units: 'em');\n@mixin fs-scale($args...) {\n  /// TODO: In next major version, rename fs-scale-poly() as fs-scale() and delete this code.\n  @if length($args) > 1 and type-of(nth($args, 2)) == 'map' {\n    @include fs-scale-poly($args...);\n  }\n  @else {\n    @include fs-scale-legacy($args...);\n  }\n}\n// Requires “media-query”\n/// **⚠️ DEPRECATED:** use `fs-scale` instead.\n/// Scale a value relative to the viewport width using `calc()` and viewport units\n/// @group Main\n/// @access private\n/// @param {String | List} $properties - Properties to scale\n/// @param {Number} $start - Starting value\n/// @param {Number} $end - Ending value\n/// @param {Number} $min-width - Starting viewport width\n/// @param {Number} $max-width - Ending viewport width\n/// @param {Boolean} $fallback [true] - Output starting value outside of media query\n/// @param {String} $units ['rem'] - Output units\n/// @require {function} fs-rem\n/// @require {function} fs-scale\n/// @require {mixin} fs-min-width\n/// @require {mixin} fs-max-width\n/// @ignore Demo https://www.sassmeister.com/gist/9f87f8c19e91c811831d84fc8484ed24\n/// @link http://www.sassmeister.com/gist/7f22e44ace49b5124eec\n/// @link http://madebymike.com.au/writing/precise-control-responsive-typography/\n/// @link https://zellwk.com/blog/viewport-based-typography/\n/// @link http://codepen.io/indrekpaas/pen/VarLaJ?editors=1100\n/// @link http://codepen.io/maranomynet/pen/ozNpXV?editors=1100\n/// @link https://www.smashingmagazine.com/2016/05/fluid-typography/\n/// @example scss\n///   @include fs-scale(font-size, 20px, 30px, 320px, 400px);\n/// @example scss\n///   @include fs-scale(margin-bottom margin-top, 10px, 20px, 500px, 600px);\n@mixin fs-scale-legacy($properties, $start, $end, $min-width, $max-width, $fallback: true, $units: 'rem') {\n  @warn 'Upgrade fs-scale() to new map syntax, fs-scale(#{$properties}, (#{$min-width}: #{$start}, #{$max-width}: #{$end}))';\n\n  // Starting size\n  @if $fallback {\n    @each $property in $properties {\n      @if $units == 'em' {\n        #{$property}: fs-em($start);\n      }\n      @else {\n        #{$property}: fs-rem($start);\n      }\n    }\n  }\n\n  // Scale up with calc()\n  @include fs-min-width($min-width) {\n    @each $property in $properties {\n      #{$property}: fs-scale($start, $end, $min-width, $max-width, $units);\n    }\n  }\n\n  // Final size\n  @include fs-min-width($max-width) {\n    @each $property in $properties {\n      @if $units == 'em' {\n        #{$property}: fs-em($end);\n      }\n      @else {\n        #{$property}: fs-rem($end);\n      }\n    }\n  }\n}\n// Requires “fs-scale”\n/// **⚠️ DEPRECATED:** use `fs-scale` instead.\n/// Scale a value relative to the viewport width by generating media queries at set intervals\n/// @group Main\n/// @param {String} $property - Property to scale\n/// @param {Number} $start - Starting value\n/// @param {Number} $end - Ending value\n/// @param {Number} $min-width - Starting viewport width\n/// @param {Number} $max-width - Ending viewport width\n/// @param {Number} $min-step [null] - Minimum increment to adjust value\n/// @param {Number} $max-steps [10] - Maximum number of times to adjust the value\n/// @require {mixin} fs-min-width\n/// @ignore Demo https://www.sassmeister.com/gist/aafd476fd2e7671c92e2ebb47a431821\n/// @ignore Inspired by http://www.bookcasey.com/fittext/\n/// @link https://github.com/bookcasey/fittext\n/// @example scss\n///   @include fs-scale-mq(line-height, 1.7, 1.5, 320px, 450px, $min-step: 0.05);\n@mixin fs-scale-mq($property, $start, $end, $min-width, $max-width, $min-step: null, $max-steps: 10) {\n  @warn 'fs-scale-mq() is deprecated, use fs-scale(#{$property}, (#{$min-width}: #{$start}, #{$max-width}: #{$end}))';\n\n  @if $min-width >= $max-width {\n    @error '🔴  fs-scale-mq() max-width must be greater than min-width';\n  }\n\n  @if unit($start) != unit($end) {\n    @error '🔴  fs-scale-mq() units don’t match';\n  }\n\n  @if $min-step != null and unit($min-step) != unit($start) {\n    @error '🔴  $min-step units in fs-scale-mq() don’t match';\n  }\n\n  @if not unitless($max-steps) or type-of($max-steps) != 'number' {\n    @error '🔴  $max-steps in fs-scale-mq() must be a unitless number';\n  }\n\n  @if $start == $end {\n    @warn '⚠️ fs-scale-mq() values are the same';\n  }\n\n  // Multiplier used to control whether value should increase or descrease\n  $sign: if($end < $start, -1, 1);\n\n  // Total amount value will change\n  $spread: abs($end - $start);\n\n  // Number of times to adjust the value between $min-width and $max-width\n  // Will adjust later if necessary based on $min-step value\n  $steps: $max-steps;\n\n  // Amount to increase/decrease the value at each step\n  // Based on $max-steps by default, will adjust later if necessary based on $min-step value\n  $step: $spread / $max-steps;\n\n  // If $min-step was defined, compare steps to $max-steps\n  @if $min-step != null {\n\n    // Only update steps count if $min-step amount results in fewer steps than $max-steps\n    @if ($spread / $min-step) < $max-steps {\n      $step: $min-step;\n      $steps: $spread / $min-step;\n    }\n  }\n\n  // If $steps isn’t a whole number, round up\n  // We will make sure this doesn’t result in extra code below\n  $steps: ceil($steps);\n\n  // Media query spread\n  $mq-spread: $max-width - $min-width;\n\n  // Calcuate media query step size\n  $mq-step: round(($max-width - $min-width) / $steps);\n\n  // Debug\n  // content: 'spread: #{$spread}, steps: #{$steps}, step: #{$step}, mqSpread: #{$mq-spread}, mqStep: #{$mq-step}';\n\n  // Starting value\n  #{$property}: $start;\n\n  // Generate media queries\n  @for $i from 1 through $steps {\n    $breakpoint: $min-width + ($mq-step * $i);\n    $value: $start + ($sign * $step * $i);\n\n    // Ensure we don’t output extra media queries due to rounding\n    $is-below-cutoff: if($sign == 1, $value < $end, $value > $end);\n    @if $breakpoint < $max-width and $is-below-cutoff {\n      @include fs-min-width($breakpoint) {\n        #{$property}: $value;\n      }\n    }\n  }// end @for loop\n\n  // Ending value\n  @include fs-min-width($max-width) {\n    #{$property}: $end;\n  }\n}\n// Requires “media-query”\n/// Scale a value for any number of properites relative to the viewport width\n/// @group Main\n/// @access private\n/// @ignore TODO: In next major version, rename fs-scale-poly() as fs-scale()\n/// @param {String | List} $properties - Properties to scale\n/// @param {Map} $map - Map of breakpoints and values\n/// @param {Boolean} $initial [true] - Output initial value (not inside media query)\n/// @param {String} $units ['rem'] - Output units\n/// @require {function} fs-rem\n/// @require {function} fs-scale\n/// @require {mixin} fs-min-width\n/// @require {mixin} fs-max-width\n/// @ignore Demo https://www.sassmeister.com/gist/37c4f4876609516eebab247178ea4b3b\n/// @link http://www.sassmeister.com/gist/7f22e44ace49b5124eec\n/// @link http://madebymike.com.au/writing/precise-control-responsive-typography/\n/// @link https://zellwk.com/blog/viewport-based-typography/\n/// @link http://codepen.io/indrekpaas/pen/VarLaJ?editors=1100\n/// @link http://codepen.io/maranomynet/pen/ozNpXV?editors=1100\n/// @link https://www.smashingmagazine.com/2016/05/fluid-typography/\n/// @link https://github.com/Jakobud/poly-fluid-sizing\n@mixin fs-scale-poly($properties, $map, $initial: true, $units: 'rem') {\n  $length: length($map);\n\n  @if ($length < 2) {\n    @error \"fs-scale() requires at least two breakpoints\";\n  }\n\n  $breakpoints: map-keys($map);\n  $values: map-values($map);\n\n  // Initial value\n  $start-val: nth($values, 1);\n\n  @if $initial {\n    @each $property in $properties {\n      @if $units == 'em' {\n        #{$property}: fs-em($start-val);\n      }\n      @else {\n        #{$property}: fs-rem($start-val);\n      }\n    }\n  }\n\n  // Scale up with calc() at each breakpoint\n  @for $i from 1 through ($length - 1) {\n    $start-breakpoint: nth($breakpoints, $i);\n    $end-breakpoint: nth($breakpoints, $i + 1);\n    $start-value: nth($values, $i);\n    $end-value: nth($values, $i + 1);\n\n    @if length($start-value) > 2 {\n      @warn \"fs-scale(): #{$start-breakpoint}: (#{$start-value}) contains too many values, only the first two will be used\";\n    }\n\n    @if length($end-value) > 2 {\n      @warn \"fs-scale(): #{$end-breakpoint}: (#{$end-value}) contains too many values, only the first two will be used\";\n    }\n\n    // If multiple start values exist, use the second one.\n    // Note: The first value was the ending value in the previous media query.\n    @if length($start-value) > 1 {\n      // If multiple end values exist, use the first one.\n      $new-end-value: if(length($end-value) > 1, nth($end-value, 1), $end-value);\n\n      @include fs-min-width($start-breakpoint) {\n        @each $property in $properties {\n          #{$property}: fs-scale(nth($start-value, 2), $new-end-value, $start-breakpoint, $end-breakpoint, $units);\n        }\n      }\n    }\n    // If muliple ending values exist, use the first one.\n    @else if length($end-value) > 1 {\n      @include fs-min-width($start-breakpoint) {\n        @each $property in $properties {\n          #{$property}: fs-scale($start-value, nth($end-value, 1), $start-breakpoint, $end-breakpoint, $units);\n        }\n      }\n    }\n    // Single values\n    @else {\n      @include fs-min-width($start-breakpoint) {\n        @each $property in $properties {\n          #{$property}: fs-scale($start-value, $end-value, $start-breakpoint, $end-breakpoint, $units);\n        }\n      }\n    }\n  }\n\n  // Final value\n  $end-val: nth($values, $length);\n  $end-breakpoint: nth($breakpoints, $length);\n\n  @include fs-min-width($end-breakpoint) {\n    @each $property in $properties {\n      @if $units == 'em' {\n        #{$property}: fs-em($end-val);\n      }\n      @else {\n        #{$property}: fs-rem($end-val);\n      }\n    }\n  }\n}\n// Requires “fs-scale”\n/// **⚠️ DEPRECATED:** use `fs-scale` instead.\n/// Automatically scale font-size and line-height\n/// @group Main\n/// @require {mixin} fs-min-width - Min-width media query mixin\n/// @param {Number | List} $start - Starting `font-size` and `line-height` (optional)\n/// @param {Number | List} $end - Ending `font-size` and `line-height` (optional)\n/// @param {Number} $font-increment [2px] - Font-size increment\n/// @param {Number} $line-height-increment [0.1] - Line-height increment (optional)\n/// @param {Number} $start-width [320px] - Starting viewport width\n/// @param {Number} $end-width [1000px] - Ending viewport width\n/// @param {Number} $context [$fs-base-font-size] - Base `font-size` (optional)\n/// @param {String} $units ['%'] - `font-size` units (optional, defaults to `'%'`)\n/// @require {function} fs-convert-units\n/// @link https://github.com/bookcasey/fittext\n///\n/// @example scss\n///   // Basic example\n///   @include fs-scale-text(\n///     $start: 32px,\n///     $end: 50px,\n///     $font-increment: 3px,\n///     $start-width: 400px,\n///     $end-width: 800px\n///   );\n///\n///   // With line-height and custom units\n///   @include fs-scale-text(\n///     $start: 32px 1.25,\n///     $end: 50px 1.1,\n///     $font-increment: 3px,\n///     $line-height-increment: 0.05,\n///     $start-width: 400px,\n///     $end-width: 800px,\n///     $units: 'em'\n///   );\n///\n@mixin fs-scale-text(\n  $start,\n  $end,\n  $font-increment: 2px,\n  $line-height-increment: 0.1,\n  $start-width: 320px,\n  $end-width: 1000px,\n  $context: $fs-base-font-size,\n  $units: '%'\n) {\n  @warn 'fs-scale-text() is deprecated, use fs-scale(#{$properties}, (#{$min-width}: #{$start}, #{$max-width}: #{$end}))';\n\n  // Add vars at top to avoid scope issues\n  $start-font-size: $start;\n  $end-font-size: $end;\n  $has-line-height: false;\n  $start-line-height: inherit;\n  $end-line-height: inherit;\n  $line-height-diff: $line-height-increment;\n  $line-height-sign: 1;\n  $line-height-steps: 0;\n\n  // Check for line-height\n  @if length($start) == 2 and length($end) == 2 {\n    $has-line-height: true;\n  }\n\n  // Update vars if line-height was specified\n  @if $has-line-height {\n    // Save font-sizes\n    $start-font-size: nth($start, 1);\n    $end-font-size: nth($end, 1);\n\n    // Save line-height values\n    $start-line-height: nth($start, 2);\n    $end-line-height: nth($end, 2);\n    $line-height-diff: $end-line-height - $start-line-height;\n\n    // If no change in line-height, ignore it\n    @if fs-strip-unit($line-height-diff) == 0 {\n      $has-line-height: false;\n    }\n    @else {\n      // Determine if line-height increaes or decreses\n      $line-height-sign: $line-height-diff / abs($line-height-diff);// returns 1 or -1\n    }\n  }\n\n  // Validation\n  //---------------------------------\n  @if $end-font-size <= $start-font-size {\n    @error '🔴  max font size must be greater than min font size for #{&}';\n  }\n\n  @if (unit($start-font-size) != 'px' or unit($end-font-size) != 'px') {\n    @error '🔴  starting and ending font sizes must be in pixels for #{&}';\n  }\n\n  @if unit($font-increment) != 'px' {\n    @error '🔴  font increment must be in pixels for #{&}';\n  }\n\n  @if unit($context) != 'px' {\n    @error '🔴  font context size must be in pixels for #{&}';\n  }\n\n  @if type-of($start-width) == 'number' and type-of($end-width) == 'number' {\n    @if $end-width <= $start-width {\n      @error '🔴  ending width must be greater than starting width for #{&}';\n    }\n  }\n  @else {\n    @if type-of($start-width) != 'number' {\n      @error '🔴  starting width must be a pixel value for #{&}';\n    }\n\n    @if type-of($end-width) != 'number' {\n      @error '🔴  ending width must be a pixel value for #{&}';\n    }\n  }\n\n  @if ($units != '%' and $units != 'em' and $units != 'rem' and $units != 'px') {\n    @error '🔴  fs-scale-text() output units must be %, px, em, or rem  for #{&}';\n  }\n\n  // Output starting font-size for when fs-scale-text() used multiple times on the same element\n  @include fs-min-width($start-width) {\n    font-size: fs-convert-units($units, $start-font-size, $context);\n    @if $has-line-height {\n      line-height: $start-line-height;\n    }\n  }\n\n  // Calculate how many times the font-size will need to be adjusted, rounded up to nearest whole number\n  $font-size-steps: ceil(($end-font-size - $start-font-size) / $font-increment);\n\n  // Warn if >10 breakpoints will be generated\n  @if $fs-debug-mode and ($font-size-steps > 10) {\n    @warn '⚠️  #{$font-size-steps} breakpoints generated by fs-scale-text() for #{&}';\n  }\n\n  // Calculate the media query interval\n  $font-size-mq-step: ($end-width - $start-width) / $font-size-steps;\n\n  // Determine how many font steps equals one line-height step (e.g. increase line-height every nth font steps)\n  @if $has-line-height {\n    $line-height-steps: abs($font-size-steps / ($line-height-diff / $line-height-increment));\n  }\n\n  // If there are more line-height steps than font steps, adjust line-height increment so they are equal\n  @if $line-height-steps < 1 {\n    $line-height-increment: $line-height-increment / $line-height-steps;\n    $line-height-steps: 1;\n  }\n\n  // Define vars here for scope reasons\n  $line-height-index: 1;\n  $line-height: $start-line-height;\n\n  // @debug '🔷 ' + $font-size-steps + ' font steps, ' + ($font-size-steps / $line-height-steps) + ' line-height step(s)';\n\n  // Generate the media queries\n  @for $i from 1 through $font-size-steps {\n    // Calculate current breakpoint width\n    $breakpoint: round($start-width + ($i * $font-size-mq-step));\n\n    // Calculate current font-size\n    $font-size: $start-font-size + ($i * $font-increment);\n\n    // Don’t exceed $end-width (could happen due to rounding)\n    @if $breakpoint > $end-width {\n      // @debug '🔴 $breakpoint: ' + $breakpoint + ' exceeds $end-width: ' + $end-width;\n      $breakpoint: $end-width;\n    }\n\n    // Since we rounded up $font-size-steps, the last font step may need to be reduced to prevent exceeding the target font size\n    @if $font-size > $end-font-size {\n      // @debug '🔴 Reduce last $font-increment from ' + $font-increment + ' to ' + ($font-increment - ($font-size - $end-font-size));\n      $font-size: $end-font-size;\n    }\n\n    // Output font size styles\n    @include fs-min-width($breakpoint) {\n      // fs-convert-units() will output the correct unit based on $units\n      font-size: fs-convert-units($units, $font-size, $context);\n\n      @if ($has-line-height and $line-height-diff != 0) {\n\n        // Check if current font step is equal to a line-height step (e.g. increase line-height every nth font steps)\n        // NOTE: For some reason, putting $i first (e.g. “>=”) results in false positives when the values are equal ¯\\_(ツ)_/¯\n        @if ($line-height-steps * $line-height-index) <= $i {\n\n          // Calculate the line height ($line-height-sign used to increase/decrease the starting value)\n          $line-height: $start-line-height + ($line-height-sign * $line-height-index * $line-height-increment);\n          line-height: $line-height;\n\n          // Increment line-height counter\n          $line-height-index: $line-height-index + 1;\n\n          // Output whenever the line-height is updated\n          // @debug '🔶 Step ' + $i + ': font-size ' + $font-size + ', line-height ' +  $line-height + ', index=' + $line-height-index;\n        }\n        // If the last iteration, just output the $end-line-height instead of calculating it since it might exceed the final value due to rounding above\n        @else if ($i == $font-size-steps) {\n          // @debug '⚪️ line-height set to ending value of ' + $end-line-height + ' instead of calculated value of ' + ($start-line-height + ($line-height-sign * $line-height-index * $line-height-increment));\n          line-height: $end-line-height;\n        }\n        @else {\n          // Output when the font-size is updated but not the line-height\n          // @debug '🔷 Step ' + $i + ': font-size ' + $font-size + ', line-height ' +  $line-height + ', index=' + $line-height-index;\n        }\n      }\n    }\n  }\n}\n// Requires “media-query” and “convert-units”\n","// -------------------------------------------------------------------------\n// Button Styles\n// -------------------------------------------------------------------------\n@mixin button-reset {\n  background-color: transparent;\n  background-image: none; // for Firefox mobile\n  border: 0;\n  color: inherit;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n  text-align: center;\n  transition: background-color 150ms ease-in-out,\n              background-position 150ms ease,\n              border 150ms ease-in-out,\n              color 150ms ease-in-out;\n}\n\n@mixin button-base {\n  @include button-reset;\n  font-size: fs-rem(16px);// Was 20px in design but Facit appears 1px larger in the browser\n  font-weight: $manrope-extrabold;\n  padding: fs-rem(14px 16px);\n}\n\n@mixin button-solid($color: $c-navy, $bg-color: #fff) {\n  background-color: var(--button-bg-color, $bg-color);\n  border-radius: 500px;// arbitrary large number\n  color: var(--button-color, $color);\n  font-weight: bold;\n  text-shadow: none;\n\n  @include button-attention {\n    background-color: var(--button-color, $color);\n    color: var(--button-bg-color, $bg-color);\n    text-decoration: none;// for link tags\n  }\n}\n\n@mixin button-border($color: $c-navy, $hover-color: #fff) {\n  background-color: transparent;\n  border: 2px solid var(--button-color, $color);\n  border-radius: 500px;// arbitrary large number\n  color: var(--button-color, $color);\n\n  // Example: Switch to white on dark backgrounds (requires setting up custom color palette)\n  // TODO: Automate this by including dark/light info in $block-colors map\n  // .has-navy-background-color & {\n  //   --button-color: #fff;\n  //   --button-hover-color: navy;\n  // }\n\n  @include button-attention {\n    @include fs-font-smoothing;\n    background-color: var(--button-color, $color);\n    color: var(--button-hover-color, $hover-color);\n    text-decoration: none;// for link tags\n    text-shadow: none;\n  }\n}\n\n// Used by expand toggles (intro, methodology)\n@mixin button-toggle() {\n  $circle-size: 40px;\n  $icon-width: 12px;\n  $icon-thickness: 2px;\n  align-items: center;\n  display: flex;\n  font-weight: bold;// override default button styles\n  padding: 0;// override default button styles\n\n  @include fs-attention {\n    text-decoration: underline;\n  }\n\n  // Hide underline when link is not hovered, even if it’s focused/active,\n  // unless using the keyboard (like old button-attention() mixin).\n  &:not(:hover):not(:focus-visible) {\n    text-decoration: none;\n  }\n\n  // Expanded state\n  &[aria-expanded=\"true\"] {\n    .icon {\n      background-color: $bg-light-gray;\n      color: $c-navy;\n\n      // Un-rotate the vertical line in plus sign\n      &:after {\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n\n  .icon {\n    background-color: $bg-violet;\n    border-radius: 50%;\n    color: #fff;\n    height: fs-rem($circle-size);\n    margin-right: fs-rem(10px);\n    position: relative;\n    transition: background-color 150ms ease-in-out, color 150ms ease-in-out;\n    width: fs-rem($circle-size);\n\n    // Use pseudo elements to create the plus/minus sign\n    &:before,\n    &:after {\n      border-top: $icon-thickness solid currentColor;\n      content: '';\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      transition: transform 150ms ease-in-out;\n      width: fs-rem($icon-width);\n    }\n\n    &:after {\n      transform: translate(-50%, -50%) rotate(90deg);\n    }\n  }// end icon\n}\n","//------------------------------------------------------------------------\n// Custom selector mixins\n//------------------------------------------------------------------------\n\n// Same as fs-attention() but only applies focus styles when using the keyboard.\n// This is useful for toggle buttons, which noramlly retain the focus styles\n// after clicking, even when the button is no longer hovered over.\n@mixin button-attention {\n  &:hover,\n  &:active,\n  [data-whatinput=\"keyboard\"] &:focus,\n  .no-js &:focus {\n    @content;\n  }\n}\n","//------------------------------------------------------------------------\n// Font style helper classes\n//\n// sass-lint:disable no-important\n// scss-lint:disable ImportantRule\n//------------------------------------------------------------------------\n.f {\n\n  // Scale the body copy font-size relative to the viewport width\n  // Note: This won’t affect h1–h6, which are set in rems (see _rich-text-headings.scss).\n  &-scale {\n    @include text-size-scale;\n  }\n\n  &-center {\n    text-align: center;\n  }\n\n  // Makes numbers all the same height (requires OpenType support)\n  // This is nice for phone numbers and addresses, as well as data tables.\n  // &-lining-figures {\n  //   font-feature-settings: \"lnum\", \"onum\" off;\n  // }\n\n  // Web fonts\n  //---------------------------------\n  &-manrope {\n    font-family: $manrope;\n  }\n\n  &-caveat {\n    font-family: $caveat;\n  }\n\n  // Custom text styles\n  //---------------------------------\n  &-h2 {\n    @include h2;\n  }\n\n  &-h3 {\n    @include h3;\n  }\n\n  &-h4 {\n    @include h4;\n  }\n\n} // end f\n","//------------------------------------------------------------------------\n// Rich text heading styles\n//\n// Note: Be aware that “text-rendering: optimizeLegibility” can sometimes\n//       result in edge-case issues. Make sure to test if using it.\n//------------------------------------------------------------------------\n@mixin h2($color: $c-default) {\n  @include fs-scale(font-size, (360px: 36px, $layout-text-scale-end-bp: 45px));\n  color: $color;\n  font-weight: $manrope-extrabold;\n  line-height: 1.2;\n}\n\n@mixin h3($color: $c-default) {\n  @include fs-scale(font-size, (360px: 23px, $layout-text-scale-end-bp: 32px));\n  color: $color;\n  font-weight: $manrope-extrabold;\n  line-height: 1.2;\n}\n\n@mixin h4($color: $c-default) {\n  @include fs-scale(font-size, (360px: 18px, $layout-text-scale-end-bp: 25px));\n  color: $color;\n  font-weight: $manrope-extrabold;\n  line-height: 1.2;\n}\n","// -------------------------------------------------------------------------\n// Font variables\n//\n// Note: Quotes arn’t necessary for most font names https://mothereff.in/font-family\n//\n// Note: Fallback to system sans-serif fonts since they support multiple weights.\n//       All modern operating systems support the following weights:\n//       - 900/800/700 Heavy\n//       - 600 Bold\n//       - 500/400 Regular\n//       - 300/200/100 Light\n//       (OS X and iOS support more)\n//       Demo http://output.jsbin.com/morukug/quiet\n//       Cross-browser results https://workflowy.com/s/font-stacks/MnwkgDkYvHT12nYT\n//\n// Note: “color-emoji” is a custom font defined in _fonts.scss\n//       See https://www.client9.com/css-color-emoji-stack/ for details.\n//------------------------------------------------------------------------\n\n// Fallback fonts\n//---------------------------------\n$sans-serif: -apple-system, BlinkMacSystemFont, Segoe UI, sans-serif, color-emoji;\n$serif: Gerogia, Times New Roman, Times, serif, color-emoji;\n$monospace: Operator Mono, Consolas, Menlo, Monaco, monospace, color-emoji;\n\n// Custom web fonts\n//---------------------------------\n$manrope: Manrope, $sans-serif;\n$manrope-semibold: 600;\n$manrope-extrabold: 800;\n\n$caveat: Caveat, BradleyHandITCTT-Bold, Noteworthy-Light, Marion-Italic, $serif;\n\n// Caveat fallback styles (requires JS)\n// https://meowni.ca/font-style-matcher/\n// font-family: BradleyHandITCTT-Bold\n// font-size: 36px\n// font-style: italic;\n// letter-spacing: 0.8px\n// line-height: 1.7\n// word-spacing: 2px\n\n// Body copy vars\n//---------------------------------\n$body-copy-font: $manrope;\n$body-copy-min-size: 17px;\n$body-copy-max-size: 20px;\n$body-copy-line-height: 1.45;\n","//------------------------------------------------------------------------\n// Helper classes for no-js\n//\n// sass-lint:disable no-important, force-element-nesting\n// scss-lint:disable ImportantRule\n//------------------------------------------------------------------------\n\n// SHOW when JS is DISABLED\n//---------------------------------\n.no-js-show {\n  display: none !important;\n\n  .no-js & {\n    display: block !important;\n  }\n}\n\n// HIDE when JS is DISABLED\n//---------------------------------\n.no-js .no-js-hide {\n  display: none !important;\n}\n\n// HIDE when JS is ENABLED\n//---------------------------------\n.js-hide {\n  display: none !important;\n\n  .no-js & {\n    display: block !important;\n  }\n}\n","//------------------------------------------------------------------------\n// Layout helper classes\n//------------------------------------------------------------------------\n// Note: Just checking for [class*=\"l-wrap\"] can result in false positives\n//       e.g. “Modal-wrap” would match\n[class^=\"l-wrap\"],\n[class*=\" l-wrap\"] {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.l {\n  // Used by image slides\n  &-padding {\n    @include default-padding;\n  }// end padding\n\n  &-wrap {\n    max-width: fs-rem($layout-max-width);\n\n    @include fs-min-width($layout-padding-max-bp) {\n      width: 75vw;\n    }\n\n    &--wide {\n      max-width: fs-rem($layout-max-width-wide);\n\n      .l-wrap {\n        margin-left: 0;\n      }\n    }// end -narrow\n  }// end wrap\n\n  // Allow element to span viewport width regardless of parent width\n  // NOTE: These styles only work when the parent wrapper is centered.\n  &-fullwidth {\n    @include layout-fullwidth;\n  }\n\n  &-width-100 {\n    width: 100%;\n  }\n\n  &-center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }// end center\n\n  // Custom 2-col layout for body copy (typically right column is an image)\n  // Note: See _column-helpers.scss for equal-width column helpers\n  &-columns {\n    margin-bottom: 2em;\n    margin-top: 2em;\n\n    @include fs-min-width($layout-2-col-bp) {\n      align-items: flex-start;\n      display: flex;\n      justify-content: space-between;\n\n      &--centered {\n        align-items: center;\n      }\n    }\n\n    & > * {\n      @include fs-max-width($layout-2-col-bp - 1px) {\n        &:not(:last-child) {\n          margin-bottom: fs-rem(60px);\n        }\n      }\n\n      @include fs-min-width($layout-2-col-bp) {\n        max-width: 66%;\n        min-width: fs-rem(220px);\n\n        &:not(:last-child) {\n          margin-right: 9%;\n        }\n      }\n    }\n\n    img {\n      @include fs-max-width($layout-2-col-bp - 1px) {\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n      }\n    }\n  }// end columns\n\n  // Left/right alignment using float\n  &-align {\n    $gutter: 9%;\n\n    &-right {\n      @include fs-min-width($layout-2-col-bp) {\n        clear: right;\n        float: right;\n        margin-bottom: 1em;\n        margin-left: $gutter;\n      }\n    }// end right\n\n    &-left {\n      @include fs-min-width($layout-2-col-bp) {\n        clear: left;\n        float: left;\n        margin-bottom: 1em;\n        margin-right: $gutter;\n      }\n    }// end left\n  }// end align\n\n  // Flexbox helper, no breakpoint\n  &-flex {\n    $gutter: 30px;\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: fs-rem(-$gutter / 2);\n    margin-bottom: 2em;\n    margin-top: calc(2em - #{fs-rem($gutter)});\n    width: calc(100% + #{fs-rem($gutter / 2)});\n\n    &--center {\n      justify-content: center;\n    }\n\n    &--space-between {\n      justify-content: space-between;\n    }\n\n    &--space-evenly {\n      justify-content: space-evenly;\n    }\n\n    & > * {\n      margin-left: fs-rem($gutter / 2);\n      margin-right: fs-rem($gutter / 2);\n      margin-top: fs-rem($gutter);\n    }\n  }// end flex\n\n} // end l\n","//------------------------------------------------------------------------\n// Global left/right padding mixin, used by _layout-helpers.scss\n//------------------------------------------------------------------------\n// Used by image slides\n@mixin default-padding() {\n  @include fs-scale(padding-left padding-right, (\n    $layout-padding-min-bp: $layout-padding-min,\n    $layout-padding-max-bp: $layout-padding-max\n  ));\n\n  @media print {\n    padding-left: 0 !important;\n    padding-right: 0 !important;\n  }\n}\n\n// @mixin container-vert-padding() {\n//   @include fs-scale(padding-bottom padding-top, (\n//     $layout-padding-min-bp: 32px,\n//     $layout-padding-max-bp: 62px\n//   ));\n// }\n","//------------------------------------------------------------------------\n// Layout mixins\n//------------------------------------------------------------------------\n// Allow element to span viewport width regardless of parent width\n// NOTE: These styles only work when the parent wrapper is centered.\n// NOTE: These styles will break blocks with parallax backgrounds (e.g. cover)\n@mixin layout-fullwidth($important: false) {\n  left: 50% #{if($important, ' !important', '')};\n  position: relative #{if($important, ' !important', '')};\n  transform: translateX(-50%) #{if($important, ' !important', '')};\n  width: 100vw #{if($important, ' !important', '')};\n}\n","//------------------------------------------------------------------------\n// Margin helpers in multiples of 1em\n//------------------------------------------------------------------------\n@for $i from 0 through 10 {\n  $val: $i * 10px;\n  .mt-#{$i} { margin-top: fs-rem($val) !important; }\n  .mb-#{$i} { margin-bottom: fs-rem($val) !important; }\n  // .ml-#{$i} { margin-left: $val !important; }\n  // .mr-#{$i} { margin-right: $val !important; }\n}\n","//------------------------------------------------------------------------\n// Theme color classes\n//------------------------------------------------------------------------\n.t {\n  @each $name, $color in $theme-colors {\n    &-#{$name} {\n      --theme-color: #{$color};\n      // Use dark text on light backgrounds (except orange which uses white text)\n      @if index(('gold', 'yellow'), $name) {\n        --theme-text-color: #{$c-navy};\n      }\n      @else {\n        --theme-text-color: #fff;\n      }\n    }\n  }\n} // end t\n","//------------------------------------------------------------------------\n// Universal helper classes\n//\n// Add !important to all properties to force immutability\n// http://csswizardry.com/2016/05/the-importance-of-important/\n//\n// sass-lint:disable no-important\n// scss-lint:disable ImportantRule\n//------------------------------------------------------------------------\n.u {\n\n  &-richtext { @include richtext; }\n\n  &-hide { display: none !important; }\n\n  &-center {\n    margin-left: auto !important;\n    margin-right: auto !important;\n  }\n\n  // Hide text visually but keep it accessible to screen readers\n  &-screenreader { @include fs-visually-hidden; }\n\n  &-clearfix { @include fs-clearfix; }\n\n  &-clear { clear: both; }\n\n  // Prevent text from wrapping\n  &-nowrap {\n    @include fs-min-width(320px) {\n      display: inline-block;// necessary for nested inline elements for some reason\n      text-decoration: inherit;// don’t break link styles\n      white-space: nowrap !important;\n\n      @supports (text-decoration-color: #000) {\n        text-decoration-color: inherit;// Safari fix\n      }\n    }\n  }\n\n}// end u\n","// -------------------------------------------------------------------------\n// Rich-text styles for post body\n//\n// Uses opt-in typography technique (see http://css-tricks.com/opt-in-typography/)\n//\n// scss-lint:disable ImportantRule, NestingDepth, SelectorDepth\n// sass-lint:disable no-important, force-element-nesting\n// -------------------------------------------------------------------------\n@mixin richtext() {\n  @include fs-clearfix;\n  line-height: $body-copy-line-height;\n\n  // Only apply rich text styles to direct children to avoid\n  // conflicts with custom components.\n  & > {\n    *:first-child {\n      margin-top: 0;\n    }\n\n    *:last-child {\n      margin-bottom: 0;\n\n      &:not(div):not(:last-child) {\n        margin-bottom: fs-rem(26px);\n      }\n    }\n\n    p {\n      margin-bottom: 1em;\n\n      // Custom paragraph block style\n      //\n      // &.is-style-intro {\n      //   @include intro-text;\n      // }\n\n      // Hide any empty paragraphs inadvertantly created in the rich text editor\n      &:empty {\n        display: none !important;\n      }\n    }\n\n    // Update header mixins in `rich-text-headings.scss`\n    h2 { @include h2; }\n    h3 { @include h3; }\n    h4 { @include h4; }\n    h5 { @include h4; }\n    h6 { @include h4; }\n\n    h2 {\n      margin-top: fs-em(120px, 45px);\n    }\n\n    h3 {\n      margin-top: fs-em(80px, 32px);\n    }\n\n    h4 {\n      margin-top: fs-em(37px, 25px);\n    }\n\n    h2, h3, h4 {\n      margin-bottom: fs-rem(30px);\n\n      &:first-child {\n        margin-top: 0;\n      }\n\n      // Inherit custom block text color\n      .has-text-color & {\n        color: currentColor;\n      }\n    }\n\n    // Remove top margin on adjacent headings\n    // Note: We’re only considering accessible heading combinations.\n    // https://github.com/postcss/autoprefixer/issues/902#issuecomment-742555755\n    h2 + h2,\n    h2 + h3,\n    h3 + h3,\n    h3 + h4,\n    h4 + h4,\n    h4 + h5,\n    h5 + h5,\n    h5 + h6,\n    h6 + h6 {\n      margin-top: 0;\n    }\n\n    // Note: We could also use :is() with all heading combinations:\n    //\n    //   :is(h1, h2, h3, h4, h5, h6) + :is(h1, h2, h3, h4, h5, h6) {\n    //     margin-top: 0;\n    //   }\n    //\n    // But Autoprefixer can’t covnert :is() so we would need these too:\n    //\n    //   :-webkit-any(h1, h2, h3, h4, h5, h6) + :-webkit-any(h1, h2, h3, h4, h5, h6) {\n    //     margin-top: 0;\n    //   }\n    //   :-moz-any(h1, h2, h3, h4, h5, h6) + :-moz-any(h1, h2, h3, h4, h5, h6) {\n    //     margin-top: 0;\n    //   }\n    //\n    // NOTE: We’re NOT using :matches() above because Autoprefixer seems\n    //       to convert it to every element combination.\n    //\n    // Example:\n    //\n    //   :matches(h1, h2, h3, h4, h5, h6) + :matches(h1, h2, h3, h4, h5, h6) {\n    //     margin-top: 0;\n    //   }\n    //\n    // Gets converted to:\n    //\n    //   .u-richtext > h1 + h1,\n    //   .u-richtext > h2 + h1,\n    //   .u-richtext > h3 + h1,\n    //   …\n    //   .u-richtext > h6 + h6\n    //\n    // @link https://github.com/postcss/autoprefixer/issues/902\n    // @link https://caniuse.com/css-matches-pseudo\n    // @link https://developer.mozilla.org/en-US/docs/Web/CSS/:is\n\n    // Lists\n    // Note: Use “::marker” to avoid setting “list-style: none;” which\n    //       causes VO in Safari to drop the list semantics.\n    // https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n    //---------------------------------\n    ol,\n    ul {\n      $list-item-margin: 1em;\n      margin-bottom: 2em;\n      margin-top: 2em;\n      // overflow: hidden; // Prevent custom bullets from overlapping floated elements\n\n      ul,\n      ol {\n        margin-bottom: 0;\n      }\n\n      li {\n        margin-top: $list-item-margin;\n\n        &:first-child {\n          margin-top: 0;\n        }\n\n        li:first-child {\n          margin-top: $list-item-margin;\n        }\n\n        & > p:last-child {\n          margin-bottom: 0;\n        }\n      } // end li\n    } // end ol/ul\n\n    // Unordered list styles\n    ul,\n    ol ul {\n      $list-padding-left: 40px;\n      $list-item-padding-left: 10px;\n      list-style: disc;\n      padding-left: fs-rem($list-padding-left);\n\n      & > li {\n        padding-left: fs-rem($list-item-padding-left);\n\n        &::marker {\n          color: $bg-teal;\n        }\n      }\n\n      // Nested list styles\n      ul {\n        list-style-type: disc;\n        padding-left: fs-rem($list-padding-left * 1.5);\n\n        & > li {\n          padding-left: fs-rem($list-item-padding-left);\n        }\n      }\n    } // end ul\n\n    // Ordered list styles\n    ol,\n    ul ol {\n      $list-padding-left: 40px;\n      $list-item-padding-left: 10px;\n      list-style: decimal;\n      padding-left: fs-rem($list-padding-left);\n\n      & > li {\n        padding-left: fs-rem($list-item-padding-left);\n\n        &::marker {\n          color: $bg-teal;\n        }\n      }\n\n      // Nested ordered list styles\n      ol {\n        list-style: decimal;\n        padding-left: fs-rem($list-padding-left * 1.5);\n\n        & > li {\n          padding-left: fs-rem($list-item-padding-left);\n        }\n      }\n    } // end ol\n\n    // Definition list\n    dl {\n      &:not(:last-child) {\n        margin-bottom: fs-em(71px, $body-copy-max-size);\n      }\n\n      dt {\n        margin-bottom: fs-rem(3px);\n\n        &:not(:first-child) {\n          margin-top: fs-em(31px, $body-copy-max-size);\n        }\n      }\n\n      dd {}\n    }// end dl\n\n    picture {\n      display: block;\n      margin-bottom: 1em;\n    }\n\n    hr {\n      background-color: currentColor;\n      border: 0;\n      display: block;\n      height: 1px;\n    }\n  } // end children\n\n  // Inline elements (not direct children of “u-richtext”)\n\n  a {\n    // Ignote links with classes to avoid conflicts\n    &:not([class]) {\n      @include link-richtext;\n    }\n  }// end a\n\n  b,\n  strong {\n    font-weight: bold;\n  }\n\n  sup {\n    font-size: 0.8em;\n    left: -1px;\n  }\n\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: $monospace;\n  }\n\n  pre {\n    font-family: inherit; // override CSS reset styles\n    margin-bottom: 1em;\n    margin-top: 1em;\n    overflow: hidden;\n    white-space: pre-wrap;\n    word-break: break-word;\n\n    code {\n      font-family: $monospace;\n      font-size: fs-rem(16px);\n    } // end code\n  } // end pre\n\n  // Set to “inline-block” to allow line-height to adjust\n  small {\n    display: inline-block;\n  }\n} // end richtext\n","// -------------------------------------------------------------------------\n// Color variables\n//\n// Use variable names that describe the color. Avoid additional abstraction\n// unless absolutely necessary (e.g. themeing)\n// http://bensmithett.com/stop-using-so-many-sass-variables/\n//\n// Can’t think of another name for a similar color? Try this site:\n// http://chir.ag/projects/name-that-color/\n//\n// Note: We’re using the “postcss-custom-properties” plugin to add\n//       fallbacks for browsers that don’t support CSS vars.\n//       https://caniuse.com/css-variables\n// -------------------------------------------------------------------------\n\n// Background colors\n//---------------------------------\n$bg-blue-green: #397275;// only used in some pie charts\n$bg-blue: #00479c;// “Cobalt Blue” in Figma\n// $bg-deep-teal: #003a48;\n$bg-gold: #f9c058;\n$bg-light-blue: #678fbe;// only used in some pie charts\n$bg-light-gray: #e7e7e7;\n$bg-light-teal: #8dc8cb;// only used in some pie charts\n$bg-navy: #101066;// “Indigo” in Figma\n$bg-offwhite: #f9f9f9;\n$bg-orange: #ff5a3d;// “Tangerine” in Figma\n$bg-purple: #40009a;\n$bg-teal: #005e67;// “Blue Green” in Figma\n$bg-violet: #7155ff;\n$bg-yellow: #ffd215;// “Canary” in Figma\n\n// Text colors\n//---------------------------------\n$c-blue: $bg-blue;\n$c-light-gray: #767676;\n$c-navy: $bg-navy;\n$c-purple: $bg-purple;\n$c-red: #eb0c00;\n\n// Theme Colors (used in _background-helpers.scss)\n//---------------------------------\n$theme-colors: (\n  'blue': $bg-blue,\n  'blue-green': $bg-blue-green,\n  'gold': $bg-gold,\n  'light-blue': $bg-light-blue,\n  'light-teal': $bg-light-teal,\n  'navy': $bg-navy,\n  'orange': $bg-orange,\n  'purple': $bg-purple,\n  'teal': $bg-teal,\n  'violet': $bg-violet,\n  'yellow': $bg-yellow,\n);\n\n// Default colors\n//---------------------------------\n$bg-default: $bg-offwhite;\n$c-default: $c-navy;\n\n// Note: We’re CSS variables to make it easier to switch color themes.\n//       We’re using the “postcss-custom-properties” plugin to add\n//       fallbacks for browsers that don’t support CSS vars.\n//       https://caniuse.com/css-variables\n// $bg-default: var(--bg-default);\n// $c-default: var(--c-default);\n\n// Shadows\n//---------------------------------\n$box-shadow-default: 0 3px 8px rgba(#000, 0.17);// originally drop-shadow(0 4px 10px rgba(#000, 0.15)) in Figme\n","// -------------------------------------------------------------------------\n// Link Styles\n// -------------------------------------------------------------------------\n// Base link styles, excluding color\n@mixin link-base {\n  transition: all 150ms ease;\n  text-decoration: none;\n}\n\n@mixin link-underline() {\n  text-decoration: underline;\n\n  @include fs-all-states {\n    color: $c-purple;\n  }\n\n  @include fs-attention {\n    text-decoration: none;\n  }\n}\n\n@mixin link-underline-hover($underline-color: var(--theme-text-color, currentColor), $thickness: 2px) {\n  @include fs-attention {\n    @supports (text-decoration-thickness: 2px) {\n      text-decoration-color: $underline-color;\n      text-decoration-line: underline;\n      text-decoration-thickness: $thickness;\n      text-underline-offset: 3px;\n    }\n  }\n}\n\n@mixin link-border-animate($thickness: 2px) {\n  position: relative;\n\n  @include button-attention {\n    &:after {\n      opacity: 1;\n      transform: translateY(3px);\n    }\n  }\n\n  &:after {\n    border-top: $thickness solid currentColor;\n    bottom: 0;\n    content: '';\n    left: 0;\n    opacity: 0;\n    position: absolute;\n    transform: translateY(1px);\n    transition: all 150ms ease-in-out;\n    width: 100%;\n  }\n}\n\n// Custom named link styles\n//---------------------------------\n@mixin link-richtext() {\n  @include link-base;\n  @include link-underline;\n}\n","// -------------------------------------------------------------------------\n// Base Styles\n// -------------------------------------------------------------------------\n:root {\n  --layout-nav-bp: #{$layout-nav-bp};\n  --layout-header-height: #{$layout-header-height-mobile};\n  --layout-intro-bp: #{$layout-intro-content-bp};\n  --theme-color: #{$bg-orange};\n  --theme-text-color: #fff;\n\n  @include fs-min-width($layout-nav-bp) {\n    --layout-header-height: #{$layout-header-height-desktop};\n  }\n\n  @media print {\n    --icon-color: #000;\n    --theme-color: #fff;\n    --theme-text-color: #000;\n  }\n}\n\n// 1. Set bg color on html instead of body to ensure it always fills the page\n//    http://css-tricks.com/just-one-of-those-weird-things-about-css-background-on-body/\nhtml {\n  background-color: $bg-default;// [1]\n  color: $c-default;\n\n  // Use native smooth scroll (no support in Safari or iOS Safari)\n  // https://caniuse.com/#feat=css-scroll-behavior\n  // &.smooth-scroll {\n  //   scroll-behavior: smooth;\n  //\n  //   // Diable smooth scrolling if user has enabled “reduce motion” in their browser/OS\n  //   // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion#user_preferences\n  //   // stylelint-disable media-feature-name-no-unknown\n  //   @media screen and (prefers-reduced-motion: reduce) {\n  //     scroll-behavior: auto !important;\n  //   }\n  // }\n\n  // Support iOS accessibility text size\n  // Note: Only apply on iOS due to bug with Safari 14 on Big Sur\n  // https://webkit.org/blog/3709/using-the-system-font-in-web-content/\n  // https://www.interactiveaccessibility.com/blog/text-resizing-web-pages-ios-using-dynamic-type\n  // https://dev.to/colingourlay/how-to-support-apple-s-dynamic-text-in-your-web-content-with-css-40c0\n  // https://gist.github.com/colingourlay/d95908ec5cd4854c7a5afa06f3989479\n  // stylelint-disable font-family-no-missing-generic-family-keyword\n  &.ua-ios {\n    @supports (font: -apple-system-body) {\n      font: -apple-system-body;\n    }\n  }\n\n  // Add extra margin above jump link targets to offset the fixed header\n  // https://css-tricks.com/fixed-headers-on-page-links-and-overlapping-content-oh-my/\n  // https://caniuse.com/mdn-css_properties_scroll-padding\n  @supports (scroll-padding-top: 0) {\n    $vert-offset: 20px;\n    scroll-padding-top: calc(var(--layout-header-height) + $vert-offset);\n\n    @include fs-min-width($layout-nav-bp) {\n      scroll-padding-top: calc(var(--layout-header-height) + $vert-offset + 50px);// account for sticky subnav\n    }\n  }\n\n  // Allow long words to wrap\n  @include fs-max-width(319px) {\n    @include fs-break-word;\n  }\n\n  // Prevent page from scrolling (required by freeze-scroll.js)\n  // sass-lint:disable no-important\n  // scss-lint:disable ImportantRule\n  &.js-no-scroll {\n    height: 100% !important;\n\n    body {\n      height: 100%; // don’t add !important, will be overridden by inline styles\n      overflow: hidden !important;\n      position: fixed !important;\n      width: 100% !important;\n    }\n  }\n}\n\n// 2. Set “font-family” on body since we’re applying “-apple-system-body” on html element\n// 3. Prevent browsers from automatically adding hyphens by default\nbody {\n  font-family: $body-copy-font;// [2]\n  hyphens: manual;// [3]\n  // overflow-x: hidden;// this breaks “position: sticky”\n} // end body\n\n// Opinionated global styles not included in CSS reset\na {\n  @include link-base;\n}\n\n// SVGs without a class or inline “fill” attribute should\n// inherit fill color, in additional to external link icons.\nsvg:not([fill]):not([class]),\n.icon-external {\n  fill: currentColor;\n}\n\n// Prevent zoom on iOS (requires adding \"ios\" class to <html>)\n// http://www.456bereastreet.com/archive/201212/ios_webkit_browsers_and_auto-zooming_form_controls/\n// sass-lint:disable no-important\n// scss-lint:disable ImportantRule\n.ua-ios {\n  input,\n  textarea,\n  select {\n    // Use max() to make it possible to override in component styles\n    @supports (font-size: #{\"max(1em, 16px)\"}) {\n      font-size: #{\"max(1em, 16px)\"};\n    }\n  }\n}\n\n// Disable animations accessibly for users requesting reduced motion,\n// as well as devices with a slow refresh rate.\n// NOTE: Not all animations are bad, some may need to override this.\n// https://web.dev/prefers-reduced-motion/\n// https://piccalil.li/blog/a-modern-css-reset\n// https://css-tricks.com/revisiting-prefers-reduced-motion-the-reduced-motion-media-query/\n// https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\n// https://developer.mozilla.org/en-US/docs/Web/CSS/@media/update-frequency\n@media (prefers-reduced-motion: reduce) {\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    background-attachment: initial !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n// -------------------------------------------------------------------------\n// Remove text-shadow in selection highlight : http://h5bp.com/i\n// -------------------------------------------------------------------------\n// ::selection {\n//   background-color: $some-custom-color;\n//   text-shadow: none;\n// }\n\n//------------------------------------------------------------------------\n// Hide outlines when clicking/tapping buttons\n// https://www.sarasoueidan.com/blog/focus-indicators/\n// Only works in browsers that support :focus-visible\n// https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible\n// Note: We must disable “focus-visible-pseudo-class” in PostCSS\n// https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-focus-visible\n//------------------------------------------------------------------------\n// Optional: Fallback styles for older browsers\n// button:focus {}\n\n// Styles for non-keyboard focus (i.e. click/tap)\nbutton,\n[role=\"button\"],\n[type=\"button\"] {\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n}\n\n// Optional: Keyboard focus styles\n// button:focus-visible {}\n","//------------------------------------------------------------------------\n// Bar chart\n//------------------------------------------------------------------------\n.BarChart {\n  $bp-start-scale: 640px;\n  $bp-end-scale: 1024px;\n  margin-bottom: 2em;\n  margin-top: 2em;\n\n  &-list {}\n\n  &-item {\n    &:not(:last-child) {\n      margin-bottom: fs-rem(14px);\n    }\n  }// end item\n\n  &-label {\n    @include fs-scale(font-size, ($bp-start-scale: 16px, $bp-end-scale: 20px));\n    font-weight: bold;\n    line-height: 1.25;\n    margin-bottom: fs-rem(12px);\n  }// end label\n\n  &-bar {\n    align-items: center;\n    background-color: $bg-light-gray;\n    border-radius: 400px;// arbitrary large value\n    break-inside: avoid;\n    content: '';\n    display: flex;\n    overflow: hidden;\n    position: relative;\n    width: 100%;\n\n    @media print {\n      border: 1px solid #000;\n    }\n\n    &-inner {\n      border-radius: 400px 0 0 400px;// arbitrary large values\n      border-top: fs-rem($layout-bar-height-mobile) solid var(--theme-color);\n      min-width: 2%;// set 2% as min since 1% looks too small\n      position: relative;\n      transition: width 1s ease;\n\n      // Required for bar animations (see bar-chart-observer.js)\n      // Note: We had to nest the media queries because combining into a single one didn’t work\n      @media not print {\n        @media not all and (prefers-reduced-motion: reduce) {\n          .js .is-offscreen & {\n            width: 0 !important;\n          }\n        }\n      }\n\n      @include fs-min-width($layout-bar-bp) {\n        border-top-width: fs-rem($layout-bar-height-desktop);\n      }\n\n      .align-right & {\n        border-radius: 0 400px 400px 0;// arbitrary large values\n        order: 1;\n      }\n    }// end inner\n\n    &-value {\n      @include fs-scale(font-size, ($bp-start-scale: 15px, $bp-end-scale: 20px));\n      font-weight: $manrope-extrabold;\n      line-height: 1;\n      margin-left: 1ch;\n\n      .align-right & {\n        margin-left: auto;\n        margin-right: 1ch;\n      }\n    }// end value\n  }// end bar\n\n  &-download {\n    margin-top: fs-rem(18px);\n  }// end download\n\n}// end BarChart\n","//------------------------------------------------------------------------\n// Butterfly chart (reuses “BarChart”)\n//------------------------------------------------------------------------\n.ButterflyChart {\n  $bp-wide: $layout-bar-bp;\n  $bp-start-scale: 640px;\n  $bp-end-scale: 1024px;\n  $bar-percent-width-mobile: 47%;\n  $label-percent-width-desktop: 18%;\n  $bar-percent-width-desktop: (100% - $label-percent-width-desktop) / 2;\n  $label-gutter: 24px;\n  break-inside: avoid;\n  margin-bottom: 2em;\n  margin-top: 2em;\n\n  &-labels {\n    @include fs-scale(margin-bottom, ($bp-start-scale: 13px, $bp-end-scale: 30px));\n    display: flex;\n    justify-content: space-between;\n\n    &-label {\n      text-align: center;\n      width: $bar-percent-width-mobile;\n\n      @include fs-min-width($bp-wide) {\n        width: $bar-percent-width-desktop;\n      }\n    }// end label\n\n    &-spacer {\n      order: 0 !important;// override label styles\n\n      @include fs-max-width($bp-wide - 1px) {\n        display: none;\n      }\n    }// end spacer\n  }// end labels\n\n  // 1. Equal-height rows with minimum 34px of margin\n  &-list {\n    @include fs-min-width($bp-wide) {\n      display: grid;\n      grid-auto-rows: minmax(#{$layout-bar-height-desktop + 34px}, 1fr);// [1]\n    }\n  }// end list\n\n  &-item {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n\n    @include fs-max-width($bp-wide - 1px) {\n      flex-wrap: wrap;\n\n      &:not(:first-child) {\n        margin-top: fs-rem(20px);\n      }\n    }\n  }// end item\n\n  &-label {\n    @include fs-scale(font-size, (\n      $bp-start-scale: 16px,\n      $bp-wide: (20px 16px),\n      $bp-end-scale: 20px\n    ));\n    font-weight: bold;\n    line-height: 1.25;\n    text-align: center;\n\n    @include fs-max-width($bp-wide - 1px) {\n      margin-bottom: fs-rem(12px);\n      width: 100%;\n    }\n\n    @include fs-min-width($bp-wide) {\n      flex-shrink: 0;\n      margin-left: fs-rem($label-gutter);\n      margin-right: fs-rem($label-gutter);\n      min-width: fs-rem(130px);\n      order: 1;\n      width: $label-percent-width-desktop;\n      word-wrap: break-word;// just in case there is a very long word\n    }\n  }// end label\n\n  // Note: We’re reusing the “BarChart-bar” styles\n  &-bar {\n    width: $bar-percent-width-mobile;\n\n    @include fs-min-width($bp-wide) {\n      width: $bar-percent-width-desktop;\n\n      &:first-child {\n        order: 0;\n      }\n\n      &:last-child {\n        order: 2;\n      }\n    }\n  }// end bar\n\n  &-download {\n    @include fs-max-width($bp-wide - 1px) {\n      margin-top: fs-rem(20px);\n    }\n  }// end download\n}// end ButterflyChart\n","//------------------------------------------------------------------------\n// Card\n//------------------------------------------------------------------------\n.Card {\n  $max-width: 540px;\n  @include fs-scale(padding-left padding-right, (375px: 28px, $max-width: 33px));\n  @include fs-scale(padding-top, (375px: 30px, $max-width: 40px));\n  align-items: flex-start;\n  background-color: $bg-default;\n  // background-color: rgba($bg-default, 0.3);\n  // backdrop-filter: blur(20px);\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  min-height: fs-rem(310px);\n  padding-bottom: fs-rem(30px);\n\n  @media print {\n    border: 1px solid #000;\n    break-inside: avoid;\n    min-height: 0 !important;\n  }\n\n  // Wait a bit before setting “max-width” to make it look intentional\n  @include fs-min-width($max-width + ($layout-padding-max * 2) + 30px) {\n    max-width: fs-rem($max-width);\n  }\n\n  & + & {\n    margin-top: fs-rem(27px);\n  }\n\n  &:not(.has-border) {\n    box-shadow: $box-shadow-default;\n  }\n\n  &.has-border {\n    border: 4px solid var(--theme-color, #{$bg-orange});\n\n    & + & {\n      margin-top: fs-rem(11px);\n    }\n\n    @media print {\n      border: 1px solid currentColor;\n    }\n  }\n\n  &-text {\n    font-size: fs-rem(24px);\n    font-weight: $manrope-semibold;\n    line-height: 1.125;\n    margin-bottom: fs-rem(30px);\n\n    b,\n    strong {\n      font-size: fs-rem(29px);\n      font-weight: $manrope-extrabold;\n    }\n  }// end text\n\n  // Has “.BarChart-bar” class\n  &-bar {\n    &:not(:first-child) {\n      margin-top: fs-rem(36px);\n    }\n\n    &:not(:last-child) {\n      margin-bottom: fs-rem(30px);\n    }\n  }// end bar\n\n  &-description {\n    font-size: fs-rem(16px);\n    line-height: 1.36;\n    margin-bottom: fs-rem(30px);\n    margin-top: auto;// bottom align\n  }// end description\n\n  &-share {\n    @include fs-print-hide;\n    align-items: center;\n    display: flex;\n    margin-left: auto;\n    margin-top: auto;\n\n    &-label {\n      font-size: fs-rem(14px);\n      font-weight: bold;\n      line-height: 1.2;\n      margin-right: fs-rem(10px);\n    }// end label\n\n    &-link {\n      $size: 38px;\n      --icon-color: var(--theme-text-color);\n      background-color: var(--theme-color);\n      border-radius: 50%;\n      height: fs-rem($size);\n      position: relative;\n      width: fs-rem($size);\n\n      &:not(:last-child) {\n        margin-right: fs-rem(12px);\n      }\n\n      @include fs-attention {\n        transform: scale(1.1);\n      }\n    }// end link\n\n    .icon {\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }// end share\n}// end Card\n","//------------------------------------------------------------------------\n// Card grid\n//------------------------------------------------------------------------\n.CardGrid {\n  $bp-2-col: 730px;\n  $bp-3-col: 1024px;\n  $col-gap: 34px;\n  $row-gap: 38px;\n  $three-col-gap: 26px;\n  $shadow-height: 12px;// magic number related to $box-shadow-default\n  $bubbles-height: 274px;\n  $bubbles-width: 257px;\n  margin-bottom: calc(1em - #{fs-rem($shadow-height)});\n  margin-top: 1em;\n  padding-bottom: fs-rem($shadow-height);\n  position: relative;// for bubbles\n\n  // Note: Double the column numbers so we can center the last odd item\n  @include fs-min-width($bp-2-col) {\n    align-items: stretch;\n    column-gap: $col-gap;\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);// [1]\n    row-gap: $row-gap;\n\n    // Left bubbles\n    &:before {\n      @include fs-print-hide;\n      background-image: fs-svg-url('card-grid-bubbles');\n      content: '';\n      height: $bubbles-height;\n      left: -200px;\n      position: absolute;\n      top: 62px;\n      width: $bubbles-width;\n      z-index: -1;\n    }\n\n    // We need to hide the bubbles before the Methodology section\n    &.no-bubbles {\n      &:before {\n        display: none;\n      }\n    }\n\n    .Card {\n      grid-column: span 2;\n      margin-top: 0 !important;\n\n      // Last child, but not the only child\n      &:last-child:not(:first-child) {\n        // Right bubbles\n        &:after {\n          @include fs-print-hide;\n          background-image: fs-svg-url('card-grid-bubbles');\n          content: '';\n          height: $bubbles-height;\n          position: absolute;\n          right: -194px;\n          top: -26px;\n          transform: rotate(180deg);\n          width: $bubbles-width;\n          z-index: -1;\n        }\n        // Center last card when there’s an odd number\n        &:nth-child(odd) {\n          grid-column-end: -2;\n        }\n      }\n\n      // Center single card\n      &.is-centered {\n        grid-column-end: -2;\n      }\n    }\n  }\n\n  &[data-columns=\"3\"] {\n    @include fs-min-width($bp-2-col) {\n      column-gap: $three-col-gap;\n      row-gap: $three-col-gap;\n    }\n\n    @include fs-min-width($bp-3-col) {\n      grid-template-columns: repeat(3, 1fr);\n\n      .Card {\n        grid-column: auto;\n\n        // Don’t center list item in 3-col layout\n        &:nth-last-child(1):nth-child(odd) {\n          grid-column-end: auto;\n        }\n      }\n    }\n  }// end 3-col\n\n}// end CardGrid\n","//------------------------------------------------------------------------\n// Chapter banner\n//------------------------------------------------------------------------\n.ChapterBanner {\n  $bp-wide: 768px;\n  $bp-end-scale: 1440px;\n  $vert-img-offset-mobile: 34px;\n  $vert-img-offset-desktop: 69px;\n  $horz-image-offset-desktop: 134px;\n  position: relative;// for bubbles\n\n  @include fs-max-width($bp-wide - 1px) {\n    margin-bottom: fs-rem(-$vert-img-offset-mobile);// account for negative top offset on wrapper\n    margin-top: fs-rem(39px + $vert-img-offset-mobile);\n    padding-bottom: fs-rem(35px - $vert-img-offset-mobile);\n  }\n\n  @include fs-min-width($bp-wide) {\n    margin-top: fs-rem(110px + $vert-img-offset-desktop);\n\n    &.no-decorations {\n      margin-top: fs-rem($vert-img-offset-desktop);\n    }\n  }\n\n  @media print {\n    margin-bottom: fs-rem(50px);\n    page-break-before: always;\n  }\n\n  &-decorations {\n    @include fs-print-hide;\n\n    @include fs-max-width($bp-wide - 1px) {\n      display: none;\n    }\n\n    svg {\n      bottom: 100%;\n      height: auto;\n      position: absolute;\n      z-index: -1;\n    }\n\n    &-left {\n      $left-width: 450px;\n      left: -83px;\n      transform: translateY(47px);\n      max-width: fs-rem($left-width);\n      width: 100vw * ($left-width / 1440px);\n    }// end left\n\n    &-right {\n      $right-width: 245px;\n      max-width: fs-rem($right-width);\n      right: 18px;\n      transform: translate(-22px);\n      width: 100vw * ($right-width / 1440px);\n    }// end right\n  }// end decorations\n\n  &-wrap {\n    @include fs-max-width($bp-wide - 1px) {\n      position: relative;\n      top: fs-rem(-$vert-img-offset-mobile);\n    }\n\n    @include fs-min-width($bp-wide) {\n      display: flex;\n      justify-content: space-between;\n    }\n  }// end wrap\n\n  &-image {\n    @include fs-print-hide;\n    @include fs-scale(margin-right, (\n      $layout-max-width-wide-bp: 0px,\n      $bp-end-scale: -$horz-image-offset-desktop\n    ), $initial: false);\n    max-width: fs-rem(360px);\n\n    @include fs-max-width($bp-wide - 1px) {\n      margin-bottom: fs-rem(11px);\n      margin-left: auto;\n      margin-right: auto;\n    }\n\n    @include fs-min-width($bp-wide) {\n      flex-shrink: 0;\n      order: 2;\n      margin-left: fs-rem(44px);\n      margin-top: fs-rem(-$vert-img-offset-desktop);\n      max-width: fs-rem(631px);\n      width: 38vw;\n    }\n\n    @include fs-min-width(900px) {\n      width: 43vw;\n    }\n\n    img {\n      object-fit: contain;\n      mask-image: fs-svg-url('chapter-mask');\n      mask-size: 100% 100%;\n      width: 100%;\n    }\n  }// end image\n\n  &-content {\n    align-items: flex-start;\n    display: flex;\n    flex-direction: column;\n\n    @include fs-min-width($bp-wide) {\n      padding-top: fs-rem(50px);\n    }\n  }// end content\n\n  &-title {\n    @include fs-scale(font-size, (\n      375px: 30px,\n      $bp-wide: (45px 30px),\n      $bp-end-scale: 45px\n    ));\n    break-inside: avoid;\n    font-weight: $manrope-extrabold;\n    line-height: 1.2;\n  }// end title\n\n  &-description {\n    @include fs-scale(font-size, (\n      375px: 16px,\n      $bp-wide: (24px 16px),\n      $bp-end-scale: 24px\n    ));\n    break-inside: avoid;\n    font-weight: $manrope-semibold;\n    line-height: 1.3;\n    margin-top: fs-rem(23px);\n\n    @include fs-min-width($bp-wide) {\n      margin-top: fs-rem(28px);\n    }\n  }// end description\n\n  &-share {\n    margin-bottom: fs-rem(64px);\n    margin-top: fs-rem(30px);\n  }\n\n}// end ChapterBanner\n","//------------------------------------------------------------------------\n// Chapter navigation\n//------------------------------------------------------------------------\n.ChapterNav {\n  $bp-row: 740px;\n  $gutter: 30px;\n  $link-border-width: 1px;\n  $link-border-width-hover: 4px;\n  $link-vert-padding: 6px;\n  @include fs-print-hide;\n  margin-bottom: fs-rem(57px);\n  padding-bottom: fs-rem(36px + $link-border-width-hover);\n  padding-top: fs-rem(40px);\n  position: relative;\n  z-index: fs-zindex('header') - 1;\n\n  @include fs-min-width($layout-nav-bp) {\n    box-shadow: $box-shadow-default;\n    margin-bottom: fs-rem(80px);\n    padding-bottom: fs-rem(6px + $link-border-width-hover);\n    padding-top: fs-rem(6px);\n    position: sticky;\n    top: var(--layout-header-height);\n    transition: top $layout-header-transition-speed $layout-header-transition-easing;\n  }\n\n  @media print {\n    position: static;\n  }\n\n  &-wrap {\n    @include fs-min-width($bp-row) {\n      align-items: baseline;\n      display: flex;\n    }\n  }// end wrap\n\n  &-heading {\n    line-height: 1.2;\n    font-size: fs-rem(18px);\n    font-weight: $manrope-semibold;\n    flex-shrink: 0;\n  }// end heading\n\n  &-list {\n    display: flex;\n\n    @include fs-max-width($bp-row - 1px) {\n      align-items: flex-start;\n      flex-direction: column;\n    }\n\n    @include fs-min-width($bp-row) {\n      align-items: center;\n      flex-wrap: wrap;\n      row-gap: 20px;\n    }\n  }// end list\n\n  &-item {\n    @include fs-max-width($bp-row - 1px) {\n      margin-top: fs-rem(23px);\n\n      &:not(:first-child) {\n        margin-top: fs-rem(13px);\n      }\n    }\n\n    @include fs-min-width($bp-row) {\n      padding-left: fs-rem($gutter);\n    }\n  }// end item\n\n  &-link {\n    color: var(--theme-text-color);\n    display: block;\n    font-size: fs-rem(18px);\n    font-weight: bold;\n    line-height: 1.2;\n    position: relative;\n    padding-top: fs-rem($link-vert-padding);\n    padding-bottom: fs-rem($link-vert-padding);\n\n    &:after {\n      border-top: $link-border-width solid currentColor;\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 100%;\n      transition: border-width 150ms ease-in-out;\n      width: 100%;\n    }\n\n    @include fs-attention {\n      &:after {\n        border-top-width: $link-border-width-hover;\n      }\n    }\n  }// end link\n}// end ChapterNav\n","//------------------------------------------------------------------------\n// Copy link button\n//------------------------------------------------------------------------\n.CopyLink {\n  $text-fade-speed: 150ms;\n  --icon-bg-color: #{$bg-orange};\n  --icon-color: #fff;\n  @include link-underline-hover($thickness: 1px);\n  @include fs-print-hide;\n  align-items: center;\n  color: var(--theme-text-color);\n  display: flex;\n  font-size: fs-rem(16px);\n  font-weight: bold;\n\n  // Hide underline when link is not hovered, even if it’s focused/active,\n  // unless using the keyboard (like old button-attention() mixin).\n  &:not(:hover):not(:focus-visible) {\n    text-decoration: none;\n  }\n\n  .icon {\n    flex-shrink: 0;\n    margin-right: fs-rem(10px);\n  }\n\n  .text {\n    overflow: hidden;\n  }\n\n  // Toggle button text when copied to clipbord\n  .default {\n    opacity: 1;\n    transition: opacity $text-fade-speed ease-in-out,\n                max-height 0s linear,\n                max-width 0s linear,\n                visibility 0s linear;\n  }\n\n  // Hide\n  .success {\n    max-height: 0;\n    max-width: 0;\n    opacity: 0;\n    transition: opacity $text-fade-speed ease-in-out,\n                max-height 0s linear $text-fade-speed,\n                max-width 0s linear $text-fade-speed,\n                visibility 0s linear $text-fade-speed;\n    visibility: hidden;\n  }\n\n  &.copied {\n    // Hide\n    .default {\n      max-height: 0;\n      max-width: 0;\n      opacity: 0;\n      transition: opacity $text-fade-speed ease-in-out,\n                  max-height 0s linear $text-fade-speed,\n                  max-width 0s linear $text-fade-speed,\n                  visibility 0s linear $text-fade-speed;\n      visibility: hidden;\n    }\n\n    // Show\n    .success {\n      max-height: none;\n      max-width: none;\n      opacity: 1;\n      transition: opacity $text-fade-speed ease-in-out,\n                  max-height 0s linear,\n                  max-width 0s linear,\n                  visibility 0s linear;\n      visibility: visible;\n      width: 100%;\n    }\n  }\n}// end CopyLink\n","//------------------------------------------------------------------------\n// Doughnut chart\n//------------------------------------------------------------------------\n.DoughnutChart {\n  $bp-wide: 540px;\n  $bp-end-scale: 768px;\n  $legend-gutter: 36px;\n\n  &-title {\n    @include fs-scale(font-size, (375px: 18px, $bp-end-scale: 25px));\n    font-weight: $manrope-extrabold;\n    line-height: 1.2;\n    margin-bottom: fs-rem(37px);\n\n    @include fs-min-width($bp-wide) {\n      margin-bottom: fs-rem(43px);\n    }\n  }// end title\n\n  &-wrap {\n    @include fs-min-width($bp-wide) {\n      display: flex;\n      justify-content: space-between;\n    }\n  }// end wrap\n\n  &-legend {\n    .Legend-text {\n      @include fs-scale(font-size, (\n        375px: 16px,\n        $bp-wide: (20px 16px),\n        $bp-end-scale: 20px\n      ));\n    }\n  }// end legend\n\n  // Wrapper around <canvas> element\n  &-chart {\n    aspect-ratio: 1;\n\n    @include fs-max-width($bp-wide - 1px) {\n      margin-top: fs-rem(32px);\n      max-width: fs-rem(320px);\n    }\n\n    @include fs-min-width($bp-wide) {\n      margin-left: fs-rem(30px);\n      flex-shrink: 0;\n      width: 51%;\n    }\n\n    @media print {\n      canvas {\n        object-fit: contain;\n      }\n    }\n  }// end chart\n\n  &-download {\n    margin-top: fs-rem(18px);\n  }// end download\n\n}// end DoughnutChart\n","//------------------------------------------------------------------------\n// Doughnut chart grid\n//------------------------------------------------------------------------\n.DoughnutChartGrid {\n  $bp-row: 1024px;\n  $bp-end-scale: $layout-max-width-wide-bp;\n  $gutter: 40px;\n  margin-top: fs-rem(30px);\n\n  @include fs-min-width($bp-row) {\n    align-items: stretch;\n    column-gap: fs-rem(40px);\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    row-gap: fs-rem(80px);\n  }\n\n  &-item {\n    @include fs-max-width($bp-row - 1px) {\n      &:not(:first-child) {\n        margin-top: 10.6%;\n      }\n    }\n  }// end item\n\n  .Legend-text {\n    @include fs-scale(font-size, ($bp-row: 16px, $bp-end-scale: 20px), $initial: false);\n  }\n}// end DoughnutChartGrid\n","//------------------------------------------------------------------------\n// Chart image download link\n//------------------------------------------------------------------------\n.Download {\n  @include fs-print-hide;\n  display: flex;\n  justify-content: flex-end;\n\n  &-link {\n    @include link-underline-hover($underline-color: currentColor);\n    align-items: center;\n    display: flex;\n    color: $c-navy;\n    font-size: fs-rem(14px);\n    font-weight: bold;\n\n    @include fs-attention {\n      .icon {\n        transform: scale(1.1);\n      }\n    }\n\n    .icon {\n      --icon-bg-color: var(--theme-color);\n      --icon-color: var(--theme-text-color);\n      flex-shrink: 0;\n      margin-left: fs-rem(10px);\n      transition: all 150ms ease-in-out;\n    }\n  }// end link\n}// end Download\n","//------------------------------------------------------------------------\n// Footer\n//------------------------------------------------------------------------\n.Footer {\n  $bp-services-cols: 640px;\n  $bp-wide: 1024px;\n  $bp-end-scale: 1440px;\n  @include fs-scale(padding-top, (375px: 20px, $bp-end-scale: 160px));\n  @include fs-scale(padding-bottom, (375px: 64px, $bp-end-scale: 100px));\n  content-visibility: auto;// apply to offscreen content to reduce render time on load\n\n  &-wrap {\n    @include fs-min-width($bp-wide) {\n      display: flex;\n      justify-content: space-between;\n    }\n  }\n\n  &-content {}\n\n  &-body {\n    margin-top: fs-rem(20px);\n\n    @include fs-min-width($bp-wide) {\n      font-size: fs-rem(20px);\n    }\n  }\n\n  &-intro {\n    @include fs-scale(font-size, (\n      375px: 16px,\n      $bp-wide: (28px 22px),\n      $layout-max-width-wide-bp: 20px\n    ));\n    font-weight: bold;\n  }\n\n  &-logo {\n    display: block;\n    margin-bottom: fs-rem(20px);\n    max-width: fs-rem(277px);\n    width: 100%;\n\n    @include fs-min-width($bp-wide) {\n      margin-bottom: fs-rem(40px);\n      max-width: 540px;\n    }\n  }\n\n  &-social {\n    $vert-margin: 20px;\n\n    &-title {\n      font-size: fs-rem(20px);\n      font-weight: $manrope-extrabold;\n      line-height: 1.2;\n      margin-bottom: fs-rem(16px);\n      margin-top: fs-rem(30px);\n    }\n\n    &-links {\n      display: flex;\n      flex-wrap: wrap;\n      margin-top: fs-rem(-$vert-margin);\n\n      svg {\n        margin-right: fs-rem(10px);\n      }\n    }\n\n    &-link {\n      @include link-underline-hover($thickness: 1px);\n      --icon-color: var(--theme-text-color);\n      align-items: center;\n      color: #fff;\n      display: flex;\n      font-weight: $manrope-semibold;\n      margin-top: fs-rem($vert-margin);\n\n      &:not(:last-child) {\n        margin-right: fs-rem(16px);\n      }\n    }\n  }// end social\n\n  &-services {\n    margin-top: fs-rem(34px);\n\n    @include fs-media((min-width: $bp-services-cols, max-width: $bp-wide - 1px)) {\n      align-items: flex-start;\n      column-gap: 30px;\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      margin-top: 50px;\n      row-gap: 40px;\n    }\n\n    @include fs-min-width($bp-wide) {\n      flex-shrink: 0;\n      margin-top: fs-rem(8px);\n      padding-left: 10%;\n      width: 52%;\n    }\n\n    &-item {\n      &:not(:first-child) {\n        margin-top: fs-rem(32px);\n      }\n\n      @include fs-media((min-width: $bp-services-cols, max-width: $bp-wide - 1px)) {\n        margin-top: 0 !important;\n      }\n\n      @include fs-min-width($bp-wide) {\n        align-items: center;\n        display: flex;\n      }\n    }\n\n    &-icon {\n      @include fs-max-width($bp-wide - 1px) {\n        margin-bottom: fs-rem(23px);\n        max-width: fs-rem(100px);\n      }\n\n      @include fs-min-width($bp-wide) {\n        flex-shrink: 0;\n        margin-right: fs-rem(27px);\n        width: 32%;\n      }\n\n      svg {\n        display: block;\n        max-width: 100%;\n\n        @include fs-min-width($bp-wide) {\n          margin-left: auto;\n          margin-right: auto;\n        }\n      }\n    }\n\n    &-description {\n      font-weight: $manrope-semibold;\n      margin-top: fs-rem(8px);\n    }\n\n    &-link {\n      color: #fff;\n      display: inline-block;\n      font-weight: $manrope-extrabold;\n      font-size: fs-rem(20px);\n      line-height: 1.2;\n      text-decoration: underline;\n\n      @supports (text-decoration-thickness: 2px) {\n        text-decoration-color: currentColor;\n        text-decoration-line: underline;\n        text-decoration-thickness: 1px;\n        text-underline-offset: 3px;\n      }\n\n      @include fs-attention {\n        text-decoration: none;\n      }\n    }\n  }// end services\n}// end Footer\n","//------------------------------------------------------------------------\n// Header\n//------------------------------------------------------------------------\n.Header {\n  $selector: &;\n  $bp-full: 1334px;\n  $bp-end-scale: 1440px;\n  $toggle-icon-width: 32px;\n  $toggle-padding: 10px;\n  $toggle-width: $toggle-icon-width + ($toggle-padding * 2);\n  $toggle-gutter: 30px;\n  @include fs-scale(padding-left padding-right, ($layout-nav-bp: 21px, $bp-end-scale: 60px), $initial: false);\n  @include fs-print-hide;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: fs-zindex('header');\n\n  @include fs-min-width($layout-nav-bp) {\n    height: var(--layout-header-height);\n    transition: transform $layout-header-transition-speed $layout-header-transition-easing;\n\n    &.is-below-hero,\n    .no-js & {\n      background-color: $bg-default;\n      box-shadow: $box-shadow-default;\n    }\n\n    &.mzp-is-scrolling {}\n\n    &.mzp-is-hidden {\n      transform: translate(0, -110%);\n\n      @media screen and (prefers-reduced-motion: reduce) {\n        transform: none;\n      }\n\n      // Move chapter nav to top when header is hidden\n      & + main .ChapterNav {\n        @media not screen and (prefers-reduced-motion: reduce) {\n          top: 0;\n        }\n      }\n    }\n  }\n\n  &-wrap {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: fs-rem(1320px);\n\n    @include fs-min-width($layout-nav-bp) {\n      align-items: center;\n      display: flex;\n      height: 100%;\n      position: relative;\n    }\n  }// end wrap\n\n  &-navToggle {\n    $mobile-offset: 21px;\n    background-color: $bg-orange;\n    border-radius: 50%;\n    color: #fff;\n    display: block;\n    padding: fs-rem(($toggle-padding + 4px) $toggle-padding);\n\n    @include fs-max-width($layout-nav-bp - 1px) {\n      left: $mobile-offset - $toggle-padding;\n      position: absolute;\n      top: $mobile-offset - $toggle-padding;\n    }\n\n    @include fs-min-width($bp-full) {\n      margin-right: fs-rem($toggle-gutter);\n    }\n\n    .is-below-hero &,\n    .no-js & {\n      color: $c-navy;\n\n      @include fs-max-width($layout-nav-bp - 1px) {\n        background-color: #fff;\n        box-shadow: $box-shadow-default;\n      }\n\n      @include fs-min-width($layout-nav-bp) {\n        background-color: transparent;\n      }\n    }\n\n    &[aria-expanded=\"false\"] {\n      &:before,\n      &:after {\n        transition: transform 150ms ease-in-out;\n      }\n\n      @include button-attention {\n        .icon {\n          &:before {\n            transform: translateY(-2px);\n          }\n\n          &:after {\n            transform: translateY(2px);\n          }\n        }\n      }\n    }\n\n    .icon {\n      @include fs-burger(\n        $color: currentColor,\n        $gutter: 6px,\n        $height: 4px,\n        $transition-duration: 200ms,\n        $width: 32px\n      );\n      color: inherit;\n      display: block;\n\n      &,\n      &:before,\n      &:after {\n        border-radius: 100px;// arbitrary large number\n      }\n    }// end icon\n  }// end navToggle\n\n  &-logo {\n    @include link-underline-hover;\n    align-items: center;\n    display: none;// only shown in desktop after scrolling past hero\n    justify-content: space-between;\n\n    .is-below-hero &,\n    .no-js & {\n      --theme-text-color: #{$c-navy};\n    }\n\n    @include fs-min-width($layout-nav-bp) {\n      margin-left: fs-rem($toggle-gutter);\n\n      .is-below-hero &,\n      .no-js & {\n        display: flex;\n      }\n    }\n\n    @include fs-min-width($bp-full) {\n      margin-left: 0;\n    }\n\n    &-text {\n      color: $c-navy;\n      font-size: fs-rem(20px);\n      font-weight: bold;\n      line-height: 1;\n    }// end text\n\n    &-image {\n      display: block;\n      height: auto;\n      margin-left: fs-rem(19px);\n      width: fs-rem(42px);\n    }// end image\n  }// end logo\n\n  &-utilNav {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n\n    @include fs-max-width($layout-nav-bp - 1px) {\n      display: none;\n    }\n\n    @include fs-min-width($layout-nav-bp) {\n      margin-left: auto;// right align\n    }\n\n    &-link {\n      &:not(:first-child) {\n        margin-left: fs-rem(42px);\n      }\n\n      &:not(.btn-border) {\n        @include link-border-animate;\n        color: $c-navy;\n      }\n\n      // Override button background-color when in hero\n      &.btn-border {\n        background-color: #fff;\n\n        @include fs-attention {\n          @include fs-font-smoothing;\n          background-color: $bg-navy;\n          color: #fff;\n        }\n\n        // Custom styles for when button overlaps the hero\n        .js #{$selector}:not(.is-below-hero) & {\n          &:not(:hover):not(:active):not(:focus) {\n            border-color: #fff;\n          }\n        }\n      }\n    }// end link\n  }// end utilNav\n\n}// end Header\n","//------------------------------------------------------------------------\n// Hero\n//------------------------------------------------------------------------\n.Hero {\n  $bp-wide: 768px;\n  $bp-end-scale: 1440px;\n  $img-width-vw: 40.5vw;\n  @include fs-font-smoothing;\n  @include fs-scale(padding-top, ($bp-wide: 100px, $bp-end-scale: 246px), $initial: false);\n  overflow: hidden;\n  padding: fs-rem(100px 42px 53px);\n  position: relative;\n\n  @include fs-min-width($bp-wide) {\n    display: flex;\n    justify-content: space-between;\n    padding-left: fs-rem($layout-padding-max);\n    padding-right: fs-rem($layout-padding-max);\n  }\n\n  @media print {\n    padding: 0;\n  }\n\n  &-image {\n    @include fs-print-hide;\n    position: relative;\n\n    @include fs-min-width($bp-wide) {\n      position: absolute;\n      right: -9px;\n      top: 50%;\n      transform: translateY(-50%);\n      width: $img-width-vw;\n    }\n\n    img {\n      object-fit: contain;\n      margin-left: auto;\n      margin-right: auto;\n      mask-image: fs-svg-url('hero-mask');\n      mask-size: 100% 100%;\n      max-width: fs-rem(380px);\n      width: 100%;\n\n      @include fs-min-width($bp-wide) {\n        margin-right: -9px;\n        max-width: fs-rem(584px);\n      }\n    }\n\n    &-bubbles {\n      @include fs-print-hide;\n\n      svg {\n        fill: #fff;\n        height: 133%;\n        left: 50%;\n        object-fit: contain;\n        position: absolute;\n        top: 50%;\n        transform: translate(-50%, -56%);\n        width: 107%;\n      }\n    }// end bubbles\n  }// end image\n\n  &-topBubble {\n    @include fs-print-hide;\n\n    @include fs-max-width($bp-wide - 1px) {\n      display: none;\n    }\n\n    @include fs-min-width($bp-end-scale) {\n      display: none;\n    }\n\n    svg {\n      left: 50%;\n      position: absolute;\n      top: 0;\n      transform: translateY(-50%);\n      width: 100vw * (131px / 1440px);\n    }\n  }// end topBubble\n\n  &-wrap {\n    @include fs-scale(margin-top, (375px: 0, $bp-wide: 30px));\n\n    @include fs-min-width($bp-wide) {\n      align-items: center;\n      display: flex;\n      justify-content: space-between;\n      margin-top: 0;\n      width: 100%;\n    }\n\n    @media print {\n      max-width: none !important;\n    }\n  }// end wrap\n\n  &-content {\n    max-width: fs-rem(665px);\n\n    @include fs-min-width($bp-wide) {\n      // Account for absolutely-positioned image width\n      width: calc(#{100vw - $img-width-vw} - #{$layout-padding-max});\n    }\n\n    @include fs-min-width($layout-max-width-wide-bp) {\n      // We need to subtract the padding and extra space beyond “l-width--wide” from (100vw -  $img-width-vw)\n      // Here’s the full formula:\n      // width: calc(#{100vw - $img-width-vw} - #{$layout-padding-max} - (50vw - #{($layout-max-width-wide / 2) + $layout-padding-max}));\n      // Below is the simplified formula:\n      width: calc(#{100vw - $img-width-vw - 50vw} + #{$layout-max-width-wide / 2});\n    }\n\n    @media print {\n      max-width: none !important;\n      width: 100% !important;\n    }\n  }// end content\n\n  &-title {\n    $text-shadow-color: rgba(darken($bg-orange, 33%), 0.5);\n    @include fs-scale(font-size, (\n      320px: 23px,\n      $bp-wide: (62px 30px),\n      $bp-end-scale: 62px\n    ));\n    font-weight: $manrope-extrabold;\n    line-height: 1.06;\n    text-shadow: 0 0 3px $text-shadow-color;// improve legibility\n\n    @media print {\n      font-size: 30pt;\n    }\n\n    &-logo {\n      --icon-color: #fff;\n      @include fs-scale(width, (375px: 265px, $bp-end-scale: 445px));\n      filter: drop-shadow(0 0 1px $text-shadow-color);\n      display: block;\n      height: auto;\n      margin-bottom: fs-rem(32px);\n      max-width: 100%;\n\n      @media print {\n        --icon-color: #000;\n      }\n    }// end icon\n  }// end title\n\n  &-cta {\n    @include fs-print-hide;\n    margin-top: fs-rem(32px);\n  }// end cta\n\n  &-arrow {\n    @include fs-print-hide;\n    margin-left: fs-rem(174px);\n    margin-top: fs-rem(26px);\n    width: fs-rem(37px);\n\n    @include fs-max-width($layout-nav-bp - 1px) {\n      display: none;\n    }\n\n    // Note: SVG has “fill” attribute inlineon the <path> elements\n    svg {\n      display: block;\n      width: 100%;\n    }\n\n    // Animate arrow\n    // 1. Reset “stroke-linecap” before animation begins to hide dot\n    .arrow {\n      &-line {\n        @media not screen and (prefers-reduced-motion: reduce) {\n          @include drawArrow;\n          opacity: 0;// will be overridden by the animation\n          stroke-dasharray: 1;\n          stroke-dashoffset: 1;\n          stroke-linecap: butt;// [1]\n          transition: none;\n        }\n      }// end line\n\n      &-head {\n        @media not screen and (prefers-reduced-motion: reduce) {\n          @include fadeInArrowHead;\n          opacity: 0;\n        }\n      }// end head\n    }\n  }// end arrow\n}\n","//------------------------------------------------------------------------\n// Expand/collapse styles\n// For use with https://github.com/Threespot/expand-toggle\n//------------------------------------------------------------------------\n\n// Default mixin, slides content down using “translateY” but won’t change the height\n@mixin expandable($speed: 500ms, $easing: fs-easing(\"easeOutCubic\")) {\n  // Collapsed\n  transform: translateY(-100%);\n  visibility: hidden;\n\n  &[aria-hidden=\"true\"] {\n    transition: transform $speed $easing, visibility 0s linear $speed;\n  }\n\n  // Expanded\n  &[aria-hidden=\"false\"],\n  .no-js & {\n    transform: translateY(0);\n    transition: transform $speed $easing, visibility 0s linear 0s;\n    visibility: visible;\n  }\n\n  @media print {\n    #main & {\n      transform: translateY(0) !important;\n      transition: none !important;\n      visibility: visible !important;\n    }\n  }\n}\n\n@mixin undo-expandable {\n  transform: none !important;\n  overflow: visible !important;\n  visibility: visible !important;\n}\n\n// Use this mixin when applying the “data-expands-height” attribute\n@mixin expandable-height($speed: 500ms, $easing: fs-easing(\"easeOutCubic\")) {\n  // Collapsed\n  max-height: 0;\n  overflow: hidden;\n  pointer-events: none;\n  visibility: hidden;\n\n  &[aria-hidden=\"true\"] {\n    transition: max-height $speed $easing, visibility 0s linear $speed;\n  }\n\n  // Expanded\n  &[aria-hidden=\"false\"],\n  .no-js & {\n    max-height: none; // prevent FOUC when menu defaults to expanded on load\n    pointer-events: auto;\n    transition: max-height $speed $easing, visibility 0s linear 0s;\n    visibility: visible;\n  }\n\n  // 1. “!important” required to override inline styles added by JS\n  &[aria-hidden=\"true\"][style] {\n    max-height: 0 !important; // [1]\n  }\n\n  @media print {\n    #main & {\n      max-height: none !important;\n      transition: none !important;\n      visibility: visible !important;\n    }\n  }\n}\n\n@mixin undo-expandable-height {\n  max-height: none !important;\n  overflow: visible !important;\n  visibility: visible !important;\n}\n","//------------------------------------------------------------------------\n// Introduction\n//------------------------------------------------------------------------\n.Intro {\n  $bp-end-scale: $layout-max-width-bp;\n  @include fs-scale(padding-bottom, (375px: 34px, $bp-end-scale: 136px));\n  @include fs-scale(padding-top, (375px: 34px, $bp-end-scale: 69px));\n  overflow: hidden;// for bubbles\n  position: relative;// for bubbles\n\n  &-content {\n    &-collapsed {\n      @include fs-max-width($layout-intro-content-bp - 1px) {\n        @include expandable-height();\n      }\n    }// end collapsed\n  }// end content\n\n  // Note: Has “.btn-toggle” class\n  &-toggle {\n    @include fs-print-hide;\n\n    &[aria-expanded=\"true\"] {\n      margin-top: 1em;\n    }\n\n    @include fs-min-width($layout-intro-content-bp) {\n      display: none;\n    }\n  }// end toggle\n\n  &-signature {\n    margin-top: fs-rem(43px);\n\n    &-name {\n      @include fs-scale(font-size, (375px: 28px, $bp-end-scale: 32px));\n      font-weight: $manrope-extrabold;\n      line-height: 1.2;\n    }// end name\n\n    &-title {\n      @include fs-scale(font-size, (375px: 20px, $bp-end-scale: 24px));\n      display: block;\n      font-size: fs-rem(20px);\n      line-height: 1.2;\n      margin-top: fs-rem(4px);\n    }// end title\n\n    &-image {\n      display: block;\n      margin-top: fs-rem(16px);\n    }// end image\n  }// end signature\n\n  &-bubbles {\n    @include fs-print-hide;\n\n    svg {\n      display: block;\n      height: auto;\n      width: 100%;\n    }\n\n    &-left {\n      bottom: 0;\n      left: -113px;\n      position: absolute;\n      max-width: fs-rem(413px);\n      width: 28vw;\n\n      @include fs-max-width(1279px) {\n        display: none;\n      }\n    }// end left\n\n    &-right {\n      position: absolute;\n      right: -27px;\n      top: -30px;\n      max-width: fs-rem(297px);\n      width: 28vw;\n\n      @include fs-max-width($layout-intro-content-bp - 1px) {\n        display: none;\n      }\n    }// end right\n  }// end\n}// end Intro\n","//------------------------------------------------------------------------\n// Moments of Joy\n//------------------------------------------------------------------------\n.Joy {\n  $bp-wide: 900px;\n  // Button vars need to be before $bp-fullwidth\n  $button-size: 73px;\n  $button-gutter: 20px;\n  $bp-fullwidth: $layout-max-width-wide-bp + $button-size + $button-gutter;\n  $bp-end-scale: 1440px;\n  $image-mobile-width-vw: 55.2vw;\n  $image-mobile-max-width: 320px;\n  $bp-mobile-image-max-width: $image-mobile-max-width / (fs-strip-unit($image-mobile-width-vw) / 100);\n  $image-desktop-width-percent: 36%;\n  $image-full-width-percent: 42%;\n  $image-aspect-ratio: 207/210;\n  @include fs-scale(margin-top, (375px: 40px, $bp-end-scale: 80px));\n\n  // Has “ChapterBanner-decorations” class since styles are the same\n  &-decorations {\n    position: relative;\n  }// end decorations\n\n  &-wrap {\n    overflow: hidden;// for bubbles\n  }// end wrap\n\n  &-top {\n    @include fs-scale(padding-bottom, (375px: 50px, $bp-end-scale: 68px));\n    @include fs-scale(padding-top, (375px: 25px, $bp-end-scale: 72px));\n\n    &-heading {\n      margin-bottom: fs-rem(15px);\n      color: #fff;\n    }// end heading\n\n    &-description {\n      font-weight: $manrope-semibold;\n    }\n  }// end top\n\n  &-carousel {\n    @include fs-scale(margin-top, (375px: 17px, $bp-end-scale: 40px));\n\n    &-item {\n      width: 100%;\n    }// end item\n\n    &-content {\n      position: relative;\n    }// end content\n\n    &-image {\n      @include fs-print-hide;\n      margin-left: auto;\n      margin-right: auto;\n      max-width: fs-rem($image-mobile-max-width);\n      width: $image-mobile-width-vw;\n\n      @include fs-min-width($bp-wide) {\n        max-width: fs-rem(590px);\n        width: $image-desktop-width-percent;\n      }\n\n      @include fs-min-width($bp-fullwidth) {\n        width: $image-full-width-percent;\n      }\n\n      img {\n        display: block;\n        mask-image: fs-svg-url('joy-image-mask');\n        mask-size: 100% 100%;\n        object-fit: contain;\n        width: 100%;\n      }\n    }// end image\n\n    // List of moments of joy\n    &-joys {\n      margin-top: fs-rem(25px);\n\n      @include fs-media((min-width: 540px, max-width: $bp-wide - 1px)) {\n        columns: 2;\n        column-gap: fs-rem(30px);\n      }\n\n      // 1. Using a percentage height causes Safari to not layout the grid items correctly\n      //    https://github.com/Threespot/trevor-survey/issues/27\n      @include fs-min-width($bp-wide) {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        height: 100%;\n        height: -webkit-fill-available;// [1]\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n      }\n\n      &-item {\n        @include fs-scale(font-size, (\n          $bp-wide: 18px,\n          $bp-fullwidth: 26px,\n          $bp-end-scale: 32px\n        ), $initial: false);\n        break-inside: avoid;\n        font-size: fs-rem(26px);\n        font-weight: bold;\n        letter-spacing: -0.02em;\n        line-height: 1.05;\n        text-align: center;\n\n        @include fs-max-width($bp-wide - 1px) {\n          margin-left: auto;\n          margin-right: auto;\n          max-width: fs-rem(360px);\n\n          &:not(:last-child) {\n            margin-bottom: fs-rem(53px);\n          }\n        }\n\n        // 2. Safari requires a reflow (e.g. resizing the browser) to lay the items out correctly,\n        //    so add a little padding to provide separation between when a reflow doesn’t happen.\n        //    https://github.com/Threespot/trevor-survey/issues/27\n        // 3. Note: 100% is actually 50% in the browser since there are 2 columns\n        @include fs-min-width($bp-wide) {\n          padding-bottom: fs-rem(30px);// [2]\n          padding-left: fs-rem(53px);\n          padding-right: fs-rem(10px);\n          width: 100% - $image-desktop-width-percent;// [3]\n\n          @include fs-min-width($bp-fullwidth) {\n            width: 100% - $image-full-width-percent;\n          }\n\n          @include fs-min-width($bp-fullwidth) {\n            padding-left: 0;\n            padding-right: fs-rem(20px);\n          }\n\n          &:nth-child(even) {\n            justify-self: flex-end;\n            padding-left: fs-rem(10px);\n            padding-right: fs-rem(53px);\n\n            @include fs-min-width($bp-fullwidth) {\n              padding-left: fs-rem(20px);\n              padding-right: 0;\n            }\n          }\n        }\n      }// end item\n    }// end joys\n  }// end carousel\n\n  // Flickity overrides\n  //---------------------------------\n  .flickity {\n    &-button {\n      background-color: $bg-orange;\n      box-shadow: $box-shadow-default;\n      color: #fff;\n      height: fs-rem($button-size);\n      top: ($image-mobile-width-vw / $image-aspect-ratio) / 2;\n      width: fs-rem($button-size);\n\n      @include fs-min-width($bp-mobile-image-max-width) {\n        top: ($image-mobile-max-width / $image-aspect-ratio) / 2;\n      }\n\n      @include fs-min-width($bp-wide) {\n        top: 50%;\n      }\n\n      &:disabled {\n        background-color: $bg-purple;\n        cursor: not-allowed;\n        opacity: 0.9;\n      }\n\n      &:focus {\n        box-shadow: none;\n        outline: 4px solid currentColor;\n\n        // Hide outline when clicking/tapping\n        &:not(:focus-visible) {\n          outline: none;\n        }\n      }\n\n      &.previous {\n        left: 0;\n\n        @include fs-min-width($bp-wide) {\n          left: -$layout-padding-max + $button-gutter;\n        }\n\n        @include fs-min-width($bp-fullwidth) {\n          left: -$button-gutter;\n          transform: translate(-100%, -50%);\n        }\n      }// end prev\n\n      &.next {\n        right: 0;\n\n        @include fs-min-width($bp-wide) {\n          right: -$layout-padding-max + $button-gutter;\n        }\n\n        @include fs-min-width($bp-fullwidth) {\n          right: -$button-gutter;\n          transform: translate(100%, -50%);\n        }\n      }// end next\n\n      &-icon {\n        fill: currentColor;\n        height: fs-rem(21px);\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: auto;\n      }// end icon\n    }// end button\n  }// end flickity\n\n  &-bottom {\n    @include fs-scale(padding-bottom, (375px: 50px, $bp-end-scale: 76px));\n    @include fs-scale(padding-top, (375px: 54px, $bp-end-scale: 64px));\n    position: relative;// for bubbles\n\n    &-header {\n      @include fs-min-width($bp-wide) {\n        align-items: center;\n        display: flex;\n        justify-content: space-between;\n      }\n\n      &-heading {\n        color: #fff;\n      }\n\n      &-share {\n        @include fs-max-width($bp-wide - 1px) {\n          margin-top: fs-rem(22px);\n        }\n      }// end share\n    }// end header\n\n    &-list {\n      @include fs-scale(margin-top, (375px: 25px, $bp-end-scale: 46px));\n\n      @include fs-min-width(520px) {\n        columns: 2;\n        column-gap: fs-rem(40px);\n      }\n\n      @include fs-min-width(640px) {\n        columns: 3;\n      }\n    }// end list\n\n    &-item {\n      font-size: fs-rem(16px);\n      font-weight: bold;\n      line-height: 1.2;\n\n      &:not(:last-child) {\n        margin-bottom: fs-rem(14px);\n      }\n    }// end item\n\n    &-bubbles {\n      @include fs-max-width(1419px) {\n        display: none;\n      }\n\n      &-left {\n        svg {\n          left: -107px;\n          position: absolute;\n          top: -170px;\n        }\n      }// end left\n\n      &-right {\n        svg {\n          position: absolute;\n          right: -90px;\n          top: -190px;\n        }\n      }// end right\n    }// end bubbles\n  }// end bottom\n}// end Joy\n","//------------------------------------------------------------------------\n// Key Findings\n//------------------------------------------------------------------------\n.KeyFindings {\n  $bp-wide: 670px;\n  $bp-end-scale: 1440px;\n  @include fs-scale(padding-bottom, ($bp-wide: 30px, $bp-end-scale: 65px));\n  overflow: hidden;// prevent horz scroll due to bubbles\n  position: relative;\n\n  &-bubbles {\n    @include fs-print-hide;\n\n    @include fs-max-width($bp-wide - 1px) {\n      display: none;\n    }\n\n    svg {\n      bottom: 22px;\n      height: auto;\n      position: absolute;\n      right: -40px;\n      width: 309px;\n      z-index: -1;\n    }\n  }// end bubbles\n}// end KeyFindings\n","//------------------------------------------------------------------------\n// Graph legends (used by line and doughnut charts)\n//------------------------------------------------------------------------\n.Legend {\n  $bp-end-scale: 640px;\n  $bp-wide: 768px;\n\n  &-item {\n    @include fs-scale(font-size, (375px: 16px, $bp-end-scale: 20px));\n    align-items: center;\n    display: flex;\n    line-height: 1.25;\n\n    &:not(:first-child) {\n      margin-top: fs-rem(26px);\n    }\n\n    @include fs-min-width($bp-wide) {\n      flex-shrink: 0;\n    }\n  }// end item\n\n  &-dot {\n    $size: 24px;\n    border: ($size / 2) solid var(--theme-color);\n    border-radius: 50%;\n    flex-shrink: 0;\n    margin-right: fs-rem(15px);\n  }// end dot\n\n  &-value {\n    font-weight: $manrope-extrabold;\n  }// end value\n\n  &-text {}\n\n}// end Legend\n","//------------------------------------------------------------------------\n// Line chart\n//------------------------------------------------------------------------\n.LineChart {\n  $bp-wide: 960px;\n  $bp-end-scale: $layout-max-width-bp;\n  break-inside: avoid;\n\n  &-wrap {\n    @include fs-min-width($bp-wide) {\n      display: flex;\n      justify-content: space-between;\n    }\n  }// end wrap\n\n  &-legend {\n    @include fs-max-width($bp-wide - 1px) {\n      display: grid;\n      grid-column-gap: fs-rem(30px);\n      grid-row-gap: fs-rem(44px);\n      grid-template-columns: 1fr 1fr;\n      margin-bottom: fs-rem(26px);\n    }\n\n    @include fs-min-width($bp-wide) {\n      margin-right: fs-rem(60px);\n      margin-top: fs-rem(40px);\n    }\n\n    .Legend {\n      &-item {\n        @include fs-max-width($bp-wide - 1px) {\n          margin-top: 0;\n        }\n      }// end item\n\n      &-text {\n        @include fs-scale(font-size, (\n          375px: 16px,\n          $bp-wide: (20px 16px),\n          $bp-end-scale: 20px\n        ));\n      }// end text\n    }// end Legend\n  }// end legend\n\n  &-chart {\n    @include fs-aspect-ratio(1);\n\n    @include fs-min-width($bp-wide) {\n      flex-grow: 1;\n    }\n\n    // Adjust aspect ratio\n    &:before {\n      @include fs-min-width(640px) {\n        padding-top: 75%;\n      }\n\n      @include fs-min-width(800px) {\n        padding-top: 66%;\n      }\n    }\n\n    canvas {\n      @include fs-absolute-fill;\n    }\n  }// end chart\n\n  &-download {\n    margin-top: fs-rem(14px);\n  }// end download\n\n}// end LineChart\n","//------------------------------------------------------------------------\n// Methodology\n//------------------------------------------------------------------------\n.Methodology {\n  $bp-header-wide: 680px;\n  $bp-end-scale: 1440px;\n  @include fs-scale(margin-top, ($bp-header-wide: 60px, $bp-end-scale: 122px));\n  margin-top: fs-rem(20px);\n\n  &-header {\n    $chart-width-mobile: 88px;\n    $chart-width-desktop: 198px;\n    align-items: flex-start;\n    display: flex;\n\n    @include fs-max-width($bp-header-wide - 1px) {\n      flex-direction: column;\n    }\n\n    @include fs-min-width($bp-header-wide) {\n      justify-content: space-between;\n    }\n\n    &-text {\n      max-width: fs-rem(810px);\n    }// end text\n\n    &-title {\n      @include fs-scale(font-size, (360px: 23px, $layout-text-scale-end-bp: 45px));\n      font-weight: $manrope-extrabold;\n      line-height: 1.2;\n      margin-bottom: fs-rem(12px);\n\n      @include fs-max-width($bp-header-wide - 1px) {\n        padding-right: fs-rem($chart-width-mobile + 10px);\n      }\n    }// end title\n\n    &-description {\n      @include fs-scale(font-size, (360px: 16px, $layout-text-scale-end-bp: 24px));\n      font-weight: $manrope-semibold;\n      line-height: 1.2;\n    }// end description\n\n    &-chart {\n      @include fs-max-width($bp-header-wide - 1px) {\n        align-self: flex-end;\n        margin-bottom: fs-rem(-10px);\n        max-width: fs-rem($chart-width-mobile);\n        order: -1;\n      }\n\n      @include fs-min-width($bp-header-wide) {\n        flex-shrink: 0;\n        margin-left: fs-rem(50px);\n        max-width: fs-rem($chart-width-desktop);\n        width: 18%;\n      }\n\n      svg {\n        display: block;\n        height: auto;\n        width: 100%;\n      }\n    }// end chart\n  }// end header\n\n  &-wrap {\n    @include fs-scale(margin-bottom, (375px: 40px, $bp-end-scale: 100px));\n    margin-top: fs-rem(20px);\n  }// end wrap\n\n  &-toggle {\n    @include fs-print-hide;\n  }\n\n  &-content {\n    @include expandable-height();\n\n    & > *:first-child {\n      margin-top: 2em;\n    }\n\n    &-text {\n      margin-bottom: fs-rem(52px);\n    }\n  }// end content\n\n}// end Methodology\n","//------------------------------------------------------------------------\n// Nav (functions like modal window)\n//------------------------------------------------------------------------\n.Nav {\n  $selector: &;\n  $bp-end-scale: 640px;\n  $max-width: 490px;\n  $close-speed: 300ms;\n  $open-speed: 450ms;\n  $easing: fs-easing('easeOutCubic');\n  $link-vert-padding: 12px;\n  $link-vert-margin: 30px - ($link-vert-padding * 2);\n  $z-index: fs-zindex('nav');\n  bottom: 0;\n  left: 0;\n  max-height: 0;// iOS fix\n  overflow: auto;// allows scrollig when content exceeds viewport height\n  -webkit-overflow-scrolling: touch;// iOS “momentum” scrolling\n  position: fixed;\n  right: 0;\n  top: 0;\n  transition: background-color 150ms linear,\n              max-height 0s linear $close-speed,\n              visibility 0s linear $close-speed;\n  visibility: hidden;// hide from screen readers and keyboards until active\n  z-index: $z-index - 1;// must be greater than overlay\n\n  // Styles will be applied when URL hash matches modal ID attribute\n  &:not([aria-hidden]):target,\n  &[aria-hidden=\"false\"] {\n    max-height: 100vh;// can’t set to “none” because that can't be transitioned\n    opacity: 1;\n    transition: background-color 0ms linear,\n                max-height 0s linear,\n                visibility 0s linear;\n    visibility: visible;\n    z-index: $z-index;\n  }\n\n  // Modal content wrapper\n  &-wrap {\n    @include fs-font-smoothing;\n    @include fs-scale(padding-left padding-right, (375px: 34px, $bp-end-scale: 68px));\n    @include fs-scale(padding-top, (375px: 40px, $bp-end-scale: 68px));\n    background-color: $bg-violet;\n    color: #fff;\n    padding-bottom: fs-rem(78px);\n    text-shadow: 0 0 3px rgba($bg-purple, 0.5);// improve legibility\n    z-index: 2;// above bubbles\n\n    .js & {\n      left: 0;\n      min-height: 100%;\n      position: absolute;\n      top: 0;\n      transform: translateX(-100%);\n      transition: transform $close-speed $easing;\n      width: 100%;\n      z-index: $z-index + 1;\n\n      @include fs-min-width($max-width + 40px) {\n        max-width: fs-rem($max-width);\n      }\n    }\n\n    #{$selector}:not([aria-hidden]):target &,\n    #{$selector}[aria-hidden=\"false\"] & {\n      transform: translateX(0);\n      transition: transform $open-speed $easing;\n    }\n  }// end wrap\n\n  &-close {\n    $padding: 10px;\n    color: currentColor;\n    display: inline-block;\n    margin-bottom: fs-rem(30px - $padding);\n    margin-left: fs-rem(-$padding);\n    margin-top: fs-rem(-$padding);\n    padding: fs-rem(10px);\n\n    @include fs-attention {\n      transform: scale(1.1);\n    }\n\n    svg {\n      display: block;\n      fill: currentColor;\n    }\n  }// end close\n\n  &-primary {\n    &-item {\n      &:not(:first-child) {\n        margin-top: fs-rem($link-vert-margin);\n      }\n    }// end item\n\n    &-link {\n      @include fs-scale(font-size, (375px: 21px, $bp-end-scale: 24px));\n      @include link-underline-hover;\n      color: currentColor;\n      display: inline-block;\n      font-weight: $manrope-extrabold;\n      letter-spacing: 0.1px;\n      line-height: 1.2;\n      padding-bottom: fs-rem($link-vert-padding);\n      padding-top: fs-rem($link-vert-padding);\n    }// end link\n  }// end primary\n\n  &-utilNav {\n    $horz-gutter: 38px;\n    $row-gap: 25px;\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    margin-top: fs-rem(32px - $row-gap);\n\n    &-link {\n      --button-color: #fff;\n      --button-hover-color: #{$c-navy};\n      font-size: fs-rem(16px);\n      font-weight: $manrope-extrabold;\n      margin-top: fs-rem($row-gap);\n\n      &:not(:last-child) {\n        margin-right: fs-rem($horz-gutter);\n      }\n\n      &:not(.btn-border) {\n        @include link-underline-hover;\n        color: currentColor;\n        line-height: 1.2;\n      }\n    }// end link\n  }// end utilNav\n\n  &-contact {\n    align-items: flex-start;\n    display: flex;\n    flex-direction: column;\n    font-size: fs-rem(24px);\n    font-weight: $manrope-semibold;\n    line-height: 1.5;\n    margin-top: fs-rem(35px);\n\n    &-phone {\n      @include link-underline-hover;\n      margin-top: fs-rem(17px);\n    }// end phone\n\n    &-cta {\n      --button-color: #{$c-blue};\n      margin-top: fs-rem(17px);\n    }// end cta\n  }// end contact\n\n  &-bubbles {\n    svg {\n      bottom: 22px;\n      height: auto;\n      left: -67px;\n      position: absolute;\n      width: 196px;\n      z-index: -1;// below content\n    }\n  }// end bubbles\n}// end Nav\n","//------------------------------------------------------------------------\n// Block quote\n//------------------------------------------------------------------------\n.Quote {\n  $bp-end-scale: 640px;\n  $quote-width: 30px;\n  @include fs-scale(font-size, (375px: 22px, $bp-end-scale: 28px));\n  @include fs-scale(margin-bottom margin-top, (375px: 45px, 1440px: 80px));\n  align-items: center;\n  break-inside: avoid;\n  display: flex;\n  flex-direction: column;\n  line-height: 1.3;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: fs-rem(918px);\n  padding-top: fs-rem(27px);\n  text-align: center;\n\n  &-icon {\n    --icon-color: #{$bg-orange};\n\n    &.open {\n      margin-bottom: fs-rem(20px);\n    }\n\n    &.close {\n      margin-top: fs-rem(20px);\n    }\n  }// end icon\n\n  // Use font smoothing as faux light weight so we don’t have to load the font file just for quotes\n  p {\n    @include fs-font-smoothing;\n  }\n\n  cite {\n    @include fs-scale(font-size, (375px: 18px, $bp-end-scale: 20px));\n    font-weight: bold;\n    line-height: 1.4;\n    margin-top: fs-rem(18px);\n  }// end cite\n\n}// end Quote\n","// -------------------------------------------------------------------------\n// Skip Links\n//\n// Links should be visible on focus when tabbing\n// http://webaim.org/techniques/css/invisiblecontent/#skipnavlinks\n// http://www.456bereastreet.com/archive/200909/skip_links_need_to_be_at_least_temporarily_visible/\n// -------------------------------------------------------------------------\n.SkipLink {\n  @include fs-print-hide;\n  background-color: $bg-default;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  color: $c-default;\n  font-size: 1rem;\n  font-weight: bold;\n  left: 50%;\n  padding: fs-rem(13px 20px 15px);\n  position: absolute;\n  text-decoration: underline !important;\n  top: 0;\n  transform: translateX(-50%);\n  z-index: fs-zindex('skip-links');\n\n  &:not(:focus) {\n    @include fs-visually-hidden;\n    transform: translate(-50%, -100%);// center horizontally\n  }\n}\n","//------------------------------------------------------------------------\n// Stats card\n//------------------------------------------------------------------------\n.StatsCard {\n  $bp-2-col: 580px;\n  $bp-3-col: 840px;\n  $bp-end-scale: $layout-max-width-bp;\n  $card-max-width: 845px;\n  // Add 30px beyond card max-width to make it look more intentional\n  $bp-max-width: $card-max-width + ($layout-padding-max * 2) + 30px;\n  $top-max-width: 444px;\n  position: relative;// for bubble decorations\n\n  // Override default Card styles\n  &.Card {\n    max-width: none;\n\n    @include fs-min-width($bp-max-width) {\n      max-width: fs-rem($card-max-width);\n    }\n\n    @include fs-min-width($bp-3-col) {\n      padding-top: fs-rem(30px);\n    }\n  }// end Card\n\n  &-top {\n    align-items: center;\n    display: flex;\n    max-width: fs-rem($top-max-width);\n  }// end top\n\n  &-label {\n    font-size: fs-rem(20px);\n    font-weight: $manrope-extrabold;\n    line-height: 1.2;\n    margin-top: fs-rem(38px);\n  }// end label\n\n  &-stat {\n    @include fs-scale(font-size, (\n      375px: 30px,\n      $bp-2-col: (45px 30px),\n      $bp-3-col: (45px 30px),\n      $bp-end-scale: 45px\n    ));\n    flex-shrink: 0;\n    font-weight: bold;\n    letter-spacing: -0.06em;\n    line-height: 1;\n    margin-right: fs-rem(11px);\n  }// end stat\n\n  &-text {\n    @include fs-scale(font-size, (\n      375px: 16px,\n      $bp-2-col: (18px 16px),\n      $bp-3-col: (18px 16px),\n      $bp-end-scale: 18px\n    ));\n    line-height: 1.2;\n  }// end text\n\n  &-list {\n    margin-bottom: fs-rem(30px);\n    margin-top: fs-rem(22px);\n\n    @include fs-min-width($bp-2-col) {\n      align-items: stretch;\n      column-gap: 15px;\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      row-gap: 20px;\n    }\n\n    @include fs-min-width($bp-3-col) {\n      grid-template-columns: 1fr 1fr 1fr;\n    }\n  }// end list\n\n  &-item {\n    align-items: center;\n    display: flex;\n\n    @include fs-max-width($bp-2-col - 1px) {\n      &:not(:first-child) {\n        margin-top: fs-rem(15px);\n      }\n    }\n  }// end item\n\n  &-share {\n    @include fs-min-width($bp-3-col) {\n      max-width: calc(100% - #{$top-max-width + 20px});\n      order: -1;\n    }\n  }// end share\n\n  // Bubble decorations\n  &-decorations {\n    bottom: -32px;\n    height: auto;\n    left: 100%;\n    margin-left: -28px;\n    max-width: 483px;\n    position: absolute;\n    width: 33vw;\n    z-index: -1;\n\n    @include fs-max-width($bp-max-width - 1px) {\n      display: none;\n    }\n  }// end decorations\n}// end StatsCard\n","//------------------------------------------------------------------------\n// Wrapper for chapter content to support sticky section nav\n//------------------------------------------------------------------------\n// Use “content-visibility” to reduce render time since page is so long\n// https://web.dev/content-visibility/\n.StickyWrap {\n  // content-visibility: auto;// this breaks jump links since “contain-intrinsic-size” is unknown\n\n  // 1. Since “content-visibility” also hides overflow, we need to set\n  //    “overflow: hidden” for unsupported browsers.\n  & > .l-padding {\n    overflow: hidden;// [1]\n  }\n}// end StickyWrap\n","//------------------------------------------------------------------------\n// Tabs\n//------------------------------------------------------------------------\n.Tabs {\n  $bp-end-scale: $layout-max-width-bp;\n  $gutter: 14px;\n  margin-bottom: fs-rem(40px);\n\n  &-label {\n    @include fs-print-hide;\n    @include fs-scale(margin-bottom, (375px: 20px, $bp-end-scale: 30px));\n    font-size: fs-rem(18px);\n    font-weight: $manrope-semibold;\n    line-height: 1.2;\n  }// end label\n\n  &-list {\n    @include fs-print-hide;\n    @include fs-scale(margin-bottom, (375px: 48px, $bp-end-scale: 58px));\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    margin-left: fs-rem(-$gutter);\n    margin-top: fs-rem(-$gutter);\n  }// end list\n\n  &-item {\n    margin-top: fs-rem($gutter);\n    padding-left: fs-rem($gutter);\n  }// end item\n\n  &-link {\n    &[aria-selected=\"true\"] {\n      @include fs-font-smoothing;\n      --button-color: var(--theme-color);// for border\n      background-color: var(--theme-color);\n      box-shadow: 0 5px 15px rgba(#000, 0.2);\n      color: var(--theme-text-color);\n\n      @include fs-attention {\n        text-decoration: underline;\n      }\n\n      // Hide underline when link is not hovered, even if it’s focused/active,\n      // unless using the keyboard (like old button-attention() mixin).\n      &:not(:hover):not(:focus-visible) {\n        text-decoration: none;\n      }\n    }\n  }// end link\n\n  &-section {\n    @media print {\n      display: block;\n\n      &:before {\n        @include h3($color: #000);\n        content: attr(aria-label);\n        margin-top: 3em;\n      }\n    }\n  }// end section\n\n}// end Tabs\n","// -------------------------------------------------------------------------\n// Print Styles\n//\n// Note: Use @extend %hide-print to hide individual modules\n// sass-lint:disable no-important, no-color-literals\n// scss-lint:disable ImportantRule, ColorVariable\n// -------------------------------------------------------------------------\n@media print {\n\n  // HTML5 Boilerplate print styles (http://h5bp.com/r)\n  //---------------------------------\n  * {\n    background: transparent !important;\n    box-shadow: none !important;\n    color: #000 !important; // Black prints faster: http://h5bp.com/s\n    filter: none !important;\n    text-shadow: none !important;\n    transition: none !important;\n  }\n\n  html {\n    font-size: percentage(13px / 16px);// [2]\n  }\n\n  svg {\n    fill: #000 !important;\n  }\n\n  img {\n    max-width: 100% !important;\n  }\n\n  p,\n  h2,\n  h3 {\n    orphans: 2;\n    widows: 2;\n  }\n\n  h2,\n  h3 {\n    page-break-after: avoid;\n  }\n\n  // Page margins\n  //---------------------------------\n  @page { margin: 0.75in 0.75in 1in; }\n\n\n  // Custom Styles Below\n  //---------------------------------\n\n}\n"],"names":[],"sourceRoot":""}